
    create table tb_cost_calculation (
       id int8 generated by default as identity,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        reference_month date,
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        stock_start_date date,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        level int4,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_item (
       quantity float8,
        raw_material boolean not null,
        round boolean not null,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_operational_cost (
       formulation_id int8 not null,
        operational_cost_type_id int8 not null,
        primary key (formulation_id, operational_cost_type_id)
    );

    create table tb_formulation_secondary_production (
       formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_pallet_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_parameter (
       id int8 not null,
        company_name varchar(255),
        production_order_without_stock boolean not null,
        type_cost_used int4,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date date,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        average_cost float8,
        cost_last_entry float8,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        raw_material_conversion float8,
        stock_balance float8,
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        date_cancel TIMESTAMP WITHOUT TIME ZONE,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_item (
       serie int4 not null,
        cost float8,
        quantity float8,
        raw_material boolean not null,
        stock_id int8,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        operational_cost_type_id int8 not null,
        production_order_id int8 not null,
        primary key (operational_cost_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        stock_id int8,
        unit_cost float8,
        production_order_id int8 not null,
        pallet_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date date,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_item 
       add constraint FKobmbir4poepy2bap27khl8833 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_item 
       add constraint FKi3e84fqfx6q011c7a5l112t21 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_operational_cost 
       add constraint FK7svm910idg3mgrvjrsx8lvltb 
       foreign key (operational_cost_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_formulation_operational_cost 
       add constraint FKd8c77n6yjfgi58futusu78lu8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_secondary_production 
       add constraint FK17dxbm4d7ndksy4ow8f73w9f9 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_secondary_production 
       add constraint FK46ap6yyh82qynkhb6ihcxi00w 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FKkiamt5i6moyn28kfs94mwa6ng 
       foreign key (apportionment_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_item 
       add constraint FKtc058kf5mybp2sttnr9jat0yr 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_item 
       add constraint FKc119rstpvgwpt1m5gejp9u5w0 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_item 
       add constraint FK1qsr5ru02gukicxoqilsov60m 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FK6wbdlrm6uxir2jr6wnm3bfsw6 
       foreign key (operational_cost_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKotrrx6er7ywp78vat7bae6m4j 
       foreign key (pallet_status_id) 
       references tb_pallet_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('Machado de Assis','machado@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('José de Alencar','jose@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('Monteiro Lobato','monteiro@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_PARAMETER');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_USER');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_GROUP');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_UNITY');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_PRODUCT');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_SECTOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_EMPLOYEE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_LABORCOSTTYPE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_OPERATIONALCOSTTYPE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_OCCURRENCE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_STATUSPALLET');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (2, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (3, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (4, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_unity(id,description)VALUES('RL','ROLO');
INSERT INTO tb_unity(id,description)VALUES('FD','FARDO');
INSERT INTO tb_unity(id,description)VALUES('SC','SACO');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO tb_pallet_status (NAME) VALUES('LIBERADO');
INSERT INTO tb_pallet_status (NAME) VALUES('EM ANALISE');
INSERT INTO tb_pallet_status (NAME) VALUES('CONDENADO');
INSERT INTO tb_pallet_status (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó - TIPO C',1,'LEITE EM PO - TIPO C',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó desnatado - TIPO C',1,'LEITE EM PO DESNATADO - TIPO C',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase do produto fracionado',0.700,'SACO MOINHO 10 KG',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 10 KG PARDO',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Fita para realizar o carimbo',1,'FITA DATADORA PARA FRACIONAMENTO',1,'',3,'RL',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Filme utilizado para envase do pallet',0.700,'FILME STRETCH',0.700,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Embalagem utilizada para o fracionamento',0.700,'BIPET MET PE 350X0.080 LEITE EM PO MOINHO 25X400',0.700,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó 25x400',1,'LEITE EM PO 25x400 MOINHO',1,'SC COM 25KG',5,'SC',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite concentrado',1,'LEITE CONCENTRADO',1,'KG',5,'KG',7,1,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-05-15','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-15','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-25','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,2,0.90,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,2,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-16','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-26','',0,5,2,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,3,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-16','',0,5,3,0.93,15000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-30','',0,5,3,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-02','',0,5,4,0.15,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,4,0.13,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,5,0.7,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-25','',0,5,6,31,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,6,32.52,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,11,0.97,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,12,0.87,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,13,9.30,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,14,17.38,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,15,25.10,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-15','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-01','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-15','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-25','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-05','',0,5,2,0.90,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,2,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-16','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-26','',0,5,2,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-05','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,3,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-16','',0,5,3,0.93,15000,0);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO',7,0,1);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,false,0,true);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,true,1,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,17,2500,false,1,true);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO DESNATADO',8,0,1);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,false,0,true);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,true,1,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,false,0,false);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO MOINHO 25X400',16,1,null);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,15,178,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,6,0.44,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,14,12.5,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,13,2.5,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,11,1000,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,7,10000,false,0,true);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE CONCENTRADO',17,0,0);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(4,1,3400,false,0,true);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(3,2);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(4,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(4,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Conta de Luz Ref:04/21','12548',5478.89);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Salario','xxxx',1545.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(9,3,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Salario','xxxx',1545.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(10,4,1);
INSERT INTO TB_PARAMETER(ID,COMPANY_NAME,PRODUCTION_ORDER_WITHOUT_STOCK,TYPE_COST_USED)VALUES(1,'Moinho Ltda',true,1);
INSERT INTO TB_FORMULATION_SECONDARY_PRODUCTION(FORMULATION_ID,PRODUCT_ID)VALUES(1,9);
INSERT INTO TB_FORMULATION_SECONDARY_PRODUCTION(FORMULATION_ID,PRODUCT_ID)VALUES(2,10);
update tb_product set AVERAGE_COST=COALESCE(ROUND(CAST((SELECT sum(entry*cost)  / sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id)AS NUMERIC),2),0);
update tb_product set COST_LAST_ENTRY=COALESCE(ROUND(CAST((SELECT sum(entry*cost)  / sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id)AS NUMERIC),2),0);
update tb_product set STOCK_BALANCE=COALESCE((SELECT sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),0);

    create table tb_cost_calculation (
       id int8 generated by default as identity,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        reference_month date,
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        stock_start_date date,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        level int4,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_item (
       quantity float8,
        raw_material boolean not null,
        round boolean not null,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_operational_cost (
       formulation_id int8 not null,
        operational_cost_type_id int8 not null,
        primary key (formulation_id, operational_cost_type_id)
    );

    create table tb_formulation_secondary_production (
       formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_pallet_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_parameter (
       id int8 not null,
        company_name varchar(255),
        production_order_without_stock boolean not null,
        type_cost_used int4,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date date,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        average_cost float8,
        cost_last_entry float8,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        raw_material_conversion float8,
        stock_balance float8,
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        date_cancel TIMESTAMP WITHOUT TIME ZONE,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_item (
       serie int4 not null,
        cost float8,
        quantity float8,
        raw_material boolean not null,
        stock_id int8,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        operational_cost_type_id int8 not null,
        production_order_id int8 not null,
        primary key (operational_cost_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        stock_id int8,
        unit_cost float8,
        production_order_id int8 not null,
        pallet_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date date,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_item 
       add constraint FKobmbir4poepy2bap27khl8833 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_item 
       add constraint FKi3e84fqfx6q011c7a5l112t21 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_operational_cost 
       add constraint FK7svm910idg3mgrvjrsx8lvltb 
       foreign key (operational_cost_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_formulation_operational_cost 
       add constraint FKd8c77n6yjfgi58futusu78lu8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_secondary_production 
       add constraint FK17dxbm4d7ndksy4ow8f73w9f9 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_secondary_production 
       add constraint FK46ap6yyh82qynkhb6ihcxi00w 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FKkiamt5i6moyn28kfs94mwa6ng 
       foreign key (apportionment_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_item 
       add constraint FKtc058kf5mybp2sttnr9jat0yr 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_item 
       add constraint FKc119rstpvgwpt1m5gejp9u5w0 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_item 
       add constraint FK1qsr5ru02gukicxoqilsov60m 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FK6wbdlrm6uxir2jr6wnm3bfsw6 
       foreign key (operational_cost_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKotrrx6er7ywp78vat7bae6m4j 
       foreign key (pallet_status_id) 
       references tb_pallet_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('Machado de Assis','machado@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('José de Alencar','jose@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('Monteiro Lobato','monteiro@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_PARAMETER');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_USER');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_GROUP');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_UNITY');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_PRODUCT');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_SECTOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_EMPLOYEE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_LABORCOSTTYPE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_OPERATIONALCOSTTYPE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_OCCURRENCE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_STATUSPALLET');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (2, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (3, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (4, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_unity(id,description)VALUES('RL','ROLO');
INSERT INTO tb_unity(id,description)VALUES('FD','FARDO');
INSERT INTO tb_unity(id,description)VALUES('SC','SACO');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO tb_pallet_status (NAME) VALUES('LIBERADO');
INSERT INTO tb_pallet_status (NAME) VALUES('EM ANALISE');
INSERT INTO tb_pallet_status (NAME) VALUES('CONDENADO');
INSERT INTO tb_pallet_status (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó - TIPO C',1,'LEITE EM PO - TIPO C',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó desnatado - TIPO C',1,'LEITE EM PO DESNATADO - TIPO C',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase do produto fracionado',0.700,'SACO MOINHO 10 KG',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 10 KG PARDO',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Fita para realizar o carimbo',1,'FITA DATADORA PARA FRACIONAMENTO',1,'',3,'RL',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Filme utilizado para envase do pallet',0.700,'FILME STRETCH',0.700,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Embalagem utilizada para o fracionamento',0.700,'BIPET MET PE 350X0.080 LEITE EM PO MOINHO 25X400',0.700,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó 25x400',1,'LEITE EM PO 25x400 MOINHO',1,'SC COM 25KG',5,'SC',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite concentrado',1,'LEITE CONCENTRADO',1,'KG',5,'KG',7,1,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-05-15','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-15','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-25','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,2,0.90,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,2,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-16','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-26','',0,5,2,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,3,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-16','',0,5,3,0.93,15000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-30','',0,5,3,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-02','',0,5,4,0.15,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,4,0.13,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,5,0.7,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-25','',0,5,6,31,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,6,32.52,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,11,0.97,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,12,0.87,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,13,9.30,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,14,17.38,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,15,25.10,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-15','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-01','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-15','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-25','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-05','',0,5,2,0.90,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,2,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-16','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-26','',0,5,2,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-05','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,3,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-16','',0,5,3,0.93,15000,0);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO',7,0,1);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,false,0,true);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,true,1,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,17,2500,false,1,true);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO DESNATADO',8,0,1);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,false,0,true);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,true,1,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,false,0,false);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO MOINHO 25X400',16,1,null);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,15,178,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,6,0.44,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,14,12.5,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,13,2.5,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,11,1000,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,7,10000,false,0,true);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE CONCENTRADO',17,0,0);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(4,1,3400,false,0,true);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(3,2);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(4,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(4,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Conta de Luz Ref:04/21','12548',5478.89);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Salario','xxxx',1545.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(9,3,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Salario','xxxx',1545.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(10,4,1);
INSERT INTO TB_PARAMETER(ID,COMPANY_NAME,PRODUCTION_ORDER_WITHOUT_STOCK,TYPE_COST_USED)VALUES(1,'Moinho Ltda',true,1);
INSERT INTO TB_FORMULATION_SECONDARY_PRODUCTION(FORMULATION_ID,PRODUCT_ID)VALUES(1,9);
INSERT INTO TB_FORMULATION_SECONDARY_PRODUCTION(FORMULATION_ID,PRODUCT_ID)VALUES(2,10);
update tb_product set AVERAGE_COST=COALESCE(ROUND((SELECT sum(entry*cost)  / sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),2),0);
update tb_product set COST_LAST_ENTRY=COALESCE(ROUND((SELECT sum(entry*cost)  / sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),2),0);
update tb_product set STOCK_BALANCE=COALESCE((SELECT sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),0);

    create table tb_cost_calculation (
       id int8 generated by default as identity,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        reference_month date,
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        stock_start_date date,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        level int4,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_item (
       quantity float8,
        raw_material boolean not null,
        round boolean not null,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_operational_cost (
       formulation_id int8 not null,
        operational_cost_type_id int8 not null,
        primary key (formulation_id, operational_cost_type_id)
    );

    create table tb_formulation_secondary_production (
       formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_pallet_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_parameter (
       id int8 not null,
        company_name varchar(255),
        production_order_without_stock boolean not null,
        type_cost_used int4,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date date,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        average_cost float8,
        cost_last_entry float8,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        raw_material_conversion float8,
        stock_balance float8,
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        date_cancel TIMESTAMP WITHOUT TIME ZONE,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_item (
       serie int4 not null,
        cost float8,
        quantity float8,
        raw_material boolean not null,
        stock_id int8,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        operational_cost_type_id int8 not null,
        production_order_id int8 not null,
        primary key (operational_cost_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        stock_id int8,
        unit_cost float8,
        production_order_id int8 not null,
        pallet_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date date,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_item 
       add constraint FKobmbir4poepy2bap27khl8833 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_item 
       add constraint FKi3e84fqfx6q011c7a5l112t21 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_operational_cost 
       add constraint FK7svm910idg3mgrvjrsx8lvltb 
       foreign key (operational_cost_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_formulation_operational_cost 
       add constraint FKd8c77n6yjfgi58futusu78lu8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_secondary_production 
       add constraint FK17dxbm4d7ndksy4ow8f73w9f9 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_secondary_production 
       add constraint FK46ap6yyh82qynkhb6ihcxi00w 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FKkiamt5i6moyn28kfs94mwa6ng 
       foreign key (apportionment_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_item 
       add constraint FKtc058kf5mybp2sttnr9jat0yr 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_item 
       add constraint FKc119rstpvgwpt1m5gejp9u5w0 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_item 
       add constraint FK1qsr5ru02gukicxoqilsov60m 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FK6wbdlrm6uxir2jr6wnm3bfsw6 
       foreign key (operational_cost_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKotrrx6er7ywp78vat7bae6m4j 
       foreign key (pallet_status_id) 
       references tb_pallet_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('Machado de Assis','machado@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('José de Alencar','jose@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('Monteiro Lobato','monteiro@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_PARAMETER');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_USER');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_GROUP');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_UNITY');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_PRODUCT');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_SECTOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_EMPLOYEE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_LABORCOSTTYPE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_OPERATIONALCOSTTYPE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_OCCURRENCE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_STATUSPALLET');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (2, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (3, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (4, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_unity(id,description)VALUES('RL','ROLO');
INSERT INTO tb_unity(id,description)VALUES('FD','FARDO');
INSERT INTO tb_unity(id,description)VALUES('SC','SACO');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO tb_pallet_status (NAME) VALUES('LIBERADO');
INSERT INTO tb_pallet_status (NAME) VALUES('EM ANALISE');
INSERT INTO tb_pallet_status (NAME) VALUES('CONDENADO');
INSERT INTO tb_pallet_status (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó - TIPO C',1,'LEITE EM PO - TIPO C',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó desnatado - TIPO C',1,'LEITE EM PO DESNATADO - TIPO C',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase do produto fracionado',0.700,'SACO MOINHO 10 KG',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 10 KG PARDO',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Fita para realizar o carimbo',1,'FITA DATADORA PARA FRACIONAMENTO',1,'',3,'RL',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Filme utilizado para envase do pallet',0.700,'FILME STRETCH',0.700,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Embalagem utilizada para o fracionamento',0.700,'BIPET MET PE 350X0.080 LEITE EM PO MOINHO 25X400',0.700,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó 25x400',1,'LEITE EM PO 25x400 MOINHO',1,'SC COM 25KG',5,'SC',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite concentrado',1,'LEITE CONCENTRADO',1,'KG',5,'KG',7,1,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-05-15','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-15','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-25','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,2,0.90,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,2,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-16','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-26','',0,5,2,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,3,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-16','',0,5,3,0.93,15000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-30','',0,5,3,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-02','',0,5,4,0.15,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,4,0.13,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,5,0.7,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-25','',0,5,6,31,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,6,32.52,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,11,0.97,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,12,0.87,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,13,9.30,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,14,17.38,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,15,25.10,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-15','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-01','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-15','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-25','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-05','',0,5,2,0.90,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,2,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-16','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-26','',0,5,2,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-05','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,3,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-16','',0,5,3,0.93,15000,0);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO',7,0,1);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,false,0,true);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,true,1,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,17,2500,false,1,true);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO DESNATADO',8,0,1);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,false,0,true);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,true,1,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,false,0,false);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO MOINHO 25X400',16,1,null);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,15,178,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,6,0.44,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,14,12.5,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,13,2.5,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,11,1000,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,7,10000,false,0,true);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE CONCENTRADO',17,0,0);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(4,1,3400,false,0,true);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(3,2);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(4,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(4,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Conta de Luz Ref:04/21','12548',5478.89);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Salario','xxxx',1545.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(9,3,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Salario','xxxx',1545.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(10,4,1);
INSERT INTO TB_PARAMETER(ID,COMPANY_NAME,PRODUCTION_ORDER_WITHOUT_STOCK,TYPE_COST_USED)VALUES(1,'Moinho Ltda',true,1);
INSERT INTO TB_FORMULATION_SECONDARY_PRODUCTION(FORMULATION_ID,PRODUCT_ID)VALUES(1,9);
INSERT INTO TB_FORMULATION_SECONDARY_PRODUCTION(FORMULATION_ID,PRODUCT_ID)VALUES(2,10);
update tb_product set AVERAGE_COST=COALESCE(ROUND((SELECT sum(entry*cost)  / sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),2),0);
update tb_product set COST_LAST_ENTRY=COALESCE(ROUND((SELECT sum(entry*cost)  / sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),2),0);
update tb_product set STOCK_BALANCE=COALESCE((SELECT sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),0);

    create table tb_cost_calculation (
       id int8 generated by default as identity,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        reference_month date,
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        stock_start_date date,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        level int4,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_item (
       quantity float8,
        raw_material boolean not null,
        round boolean not null,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_operational_cost (
       formulation_id int8 not null,
        operational_cost_type_id int8 not null,
        primary key (formulation_id, operational_cost_type_id)
    );

    create table tb_formulation_secondary_production (
       formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_pallet_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_parameter (
       id int8 not null,
        company_name varchar(255),
        production_order_without_stock boolean not null,
        type_cost_used int4,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date date,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        average_cost float8,
        cost_last_entry float8,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        raw_material_conversion float8,
        stock_balance float8,
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        date_cancel TIMESTAMP WITHOUT TIME ZONE,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_item (
       serie int4 not null,
        cost float8,
        quantity float8,
        raw_material boolean not null,
        stock_id int8,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        operational_cost_type_id int8 not null,
        production_order_id int8 not null,
        primary key (operational_cost_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        stock_id int8,
        unit_cost float8,
        production_order_id int8 not null,
        pallet_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date date,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_item 
       add constraint FKobmbir4poepy2bap27khl8833 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_item 
       add constraint FKi3e84fqfx6q011c7a5l112t21 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_operational_cost 
       add constraint FK7svm910idg3mgrvjrsx8lvltb 
       foreign key (operational_cost_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_formulation_operational_cost 
       add constraint FKd8c77n6yjfgi58futusu78lu8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_secondary_production 
       add constraint FK17dxbm4d7ndksy4ow8f73w9f9 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_secondary_production 
       add constraint FK46ap6yyh82qynkhb6ihcxi00w 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FKkiamt5i6moyn28kfs94mwa6ng 
       foreign key (apportionment_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_item 
       add constraint FKtc058kf5mybp2sttnr9jat0yr 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_item 
       add constraint FKc119rstpvgwpt1m5gejp9u5w0 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_item 
       add constraint FK1qsr5ru02gukicxoqilsov60m 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FK6wbdlrm6uxir2jr6wnm3bfsw6 
       foreign key (operational_cost_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKotrrx6er7ywp78vat7bae6m4j 
       foreign key (pallet_status_id) 
       references tb_pallet_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('Machado de Assis','machado@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('José de Alencar','jose@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('Monteiro Lobato','monteiro@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_PARAMETER');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_USER');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_GROUP');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_UNITY');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_PRODUCT');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_SECTOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_EMPLOYEE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_LABORCOSTTYPE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_OPERATIONALCOSTTYPE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_OCCURRENCE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_STATUSPALLET');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (2, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (3, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (4, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_unity(id,description)VALUES('RL','ROLO');
INSERT INTO tb_unity(id,description)VALUES('FD','FARDO');
INSERT INTO tb_unity(id,description)VALUES('SC','SACO');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO tb_pallet_status (NAME) VALUES('LIBERADO');
INSERT INTO tb_pallet_status (NAME) VALUES('EM ANALISE');
INSERT INTO tb_pallet_status (NAME) VALUES('CONDENADO');
INSERT INTO tb_pallet_status (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó - TIPO C',1,'LEITE EM PO - TIPO C',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó desnatado - TIPO C',1,'LEITE EM PO DESNATADO - TIPO C',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase do produto fracionado',0.700,'SACO MOINHO 10 KG',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 10 KG PARDO',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Fita para realizar o carimbo',1,'FITA DATADORA PARA FRACIONAMENTO',1,'',3,'RL',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Filme utilizado para envase do pallet',0.700,'FILME STRETCH',0.700,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Embalagem utilizada para o fracionamento',0.700,'BIPET MET PE 350X0.080 LEITE EM PO MOINHO 25X400',0.700,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó 25x400',1,'LEITE EM PO 25x400 MOINHO',1,'SC COM 25KG',5,'SC',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite concentrado',1,'LEITE CONCENTRADO',1,'KG',5,'KG',7,1,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-05-15','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-15','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-25','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,2,0.90,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,2,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-16','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-26','',0,5,2,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,3,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-16','',0,5,3,0.93,15000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-30','',0,5,3,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-02','',0,5,4,0.15,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,4,0.13,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,5,0.7,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-25','',0,5,6,31,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,6,32.52,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,11,0.97,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,12,0.87,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,13,9.30,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,14,17.38,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,15,25.10,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-15','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-01','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-15','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-25','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-05','',0,5,2,0.90,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,2,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-16','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-26','',0,5,2,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-05','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,3,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-16','',0,5,3,0.93,15000,0);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO',7,0,1);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,false,0,true);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,true,1,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,17,2500,false,1,true);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO DESNATADO',8,0,1);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,false,0,true);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,true,1,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,false,0,false);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO MOINHO 25X400',16,1,null);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,15,178,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,6,0.44,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,14,12.5,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,13,2.5,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,11,1000,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,7,10000,false,0,true);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE CONCENTRADO',17,0,0);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(4,1,3400,false,0,true);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(3,2);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(4,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(4,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Conta de Luz Ref:04/21','12548',5478.89);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Salario','xxxx',1545.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(9,3,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Salario','xxxx',1545.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(10,4,1);
INSERT INTO TB_PARAMETER(ID,COMPANY_NAME,PRODUCTION_ORDER_WITHOUT_STOCK,TYPE_COST_USED)VALUES(1,'Moinho Ltda',true,1);
INSERT INTO TB_FORMULATION_SECONDARY_PRODUCTION(FORMULATION_ID,PRODUCT_ID)VALUES(1,9);
INSERT INTO TB_FORMULATION_SECONDARY_PRODUCTION(FORMULATION_ID,PRODUCT_ID)VALUES(2,10);
update tb_product set AVERAGE_COST=COALESCE(ROUND((SELECT sum(entry*cost)  / sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),2),0);
update tb_product set COST_LAST_ENTRY=COALESCE(ROUND((SELECT sum(entry*cost)  / sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),2),0);
update tb_product set STOCK_BALANCE=COALESCE((SELECT sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),0);

    create table tb_cost_calculation (
       id int8 generated by default as identity,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        reference_month date,
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        stock_start_date date,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        level int4,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_item (
       quantity float8,
        raw_material boolean not null,
        round boolean not null,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_operational_cost (
       formulation_id int8 not null,
        operational_cost_type_id int8 not null,
        primary key (formulation_id, operational_cost_type_id)
    );

    create table tb_formulation_secondary_production (
       formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_pallet_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_parameter (
       id int8 not null,
        company_name varchar(255),
        production_order_without_stock boolean not null,
        type_cost_used int4,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date date,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        average_cost float8,
        cost_last_entry float8,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        raw_material_conversion float8,
        stock_balance float8,
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        date_cancel TIMESTAMP WITHOUT TIME ZONE,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_item (
       serie int4 not null,
        cost float8,
        quantity float8,
        raw_material boolean not null,
        stock_id int8,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        operational_cost_type_id int8 not null,
        production_order_id int8 not null,
        primary key (operational_cost_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        stock_id int8,
        unit_cost float8,
        production_order_id int8 not null,
        pallet_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date date,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_item 
       add constraint FKobmbir4poepy2bap27khl8833 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_item 
       add constraint FKi3e84fqfx6q011c7a5l112t21 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_operational_cost 
       add constraint FK7svm910idg3mgrvjrsx8lvltb 
       foreign key (operational_cost_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_formulation_operational_cost 
       add constraint FKd8c77n6yjfgi58futusu78lu8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_secondary_production 
       add constraint FK17dxbm4d7ndksy4ow8f73w9f9 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_secondary_production 
       add constraint FK46ap6yyh82qynkhb6ihcxi00w 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FKkiamt5i6moyn28kfs94mwa6ng 
       foreign key (apportionment_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_item 
       add constraint FKtc058kf5mybp2sttnr9jat0yr 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_item 
       add constraint FKc119rstpvgwpt1m5gejp9u5w0 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_item 
       add constraint FK1qsr5ru02gukicxoqilsov60m 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FK6wbdlrm6uxir2jr6wnm3bfsw6 
       foreign key (operational_cost_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKotrrx6er7ywp78vat7bae6m4j 
       foreign key (pallet_status_id) 
       references tb_pallet_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('Machado de Assis','machado@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('José de Alencar','jose@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('Monteiro Lobato','monteiro@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_PARAMETER');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_USER');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_GROUP');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_UNITY');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_PRODUCT');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_SECTOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_EMPLOYEE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_LABORCOSTTYPE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_OPERATIONALCOSTTYPE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_OCCURRENCE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_STATUSPALLET');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (2, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (3, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (4, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_unity(id,description)VALUES('RL','ROLO');
INSERT INTO tb_unity(id,description)VALUES('FD','FARDO');
INSERT INTO tb_unity(id,description)VALUES('SC','SACO');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO tb_pallet_status (NAME) VALUES('LIBERADO');
INSERT INTO tb_pallet_status (NAME) VALUES('EM ANALISE');
INSERT INTO tb_pallet_status (NAME) VALUES('CONDENADO');
INSERT INTO tb_pallet_status (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó - TIPO C',1,'LEITE EM PO - TIPO C',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó desnatado - TIPO C',1,'LEITE EM PO DESNATADO - TIPO C',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase do produto fracionado',0.700,'SACO MOINHO 10 KG',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 10 KG PARDO',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Fita para realizar o carimbo',1,'FITA DATADORA PARA FRACIONAMENTO',1,'',3,'RL',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Filme utilizado para envase do pallet',0.700,'FILME STRETCH',0.700,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Embalagem utilizada para o fracionamento',0.700,'BIPET MET PE 350X0.080 LEITE EM PO MOINHO 25X400',0.700,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó 25x400',1,'LEITE EM PO 25x400 MOINHO',1,'SC COM 25KG',5,'SC',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite concentrado',1,'LEITE CONCENTRADO',1,'KG',5,'KG',7,1,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-05-15','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-15','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-25','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,2,0.90,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,2,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-16','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-26','',0,5,2,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,3,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-16','',0,5,3,0.93,15000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-30','',0,5,3,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-02','',0,5,4,0.15,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,4,0.13,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,5,0.7,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-25','',0,5,6,31,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,6,32.52,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,11,0.97,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,12,0.87,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,13,9.30,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,14,17.38,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,15,25.10,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-15','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-01','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-15','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-25','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-05','',0,5,2,0.90,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,2,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-16','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-26','',0,5,2,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-05','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,3,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-16','',0,5,3,0.93,15000,0);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO',7,0,1);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,false,0,true);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,true,1,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,17,2500,false,1,true);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO DESNATADO',8,0,1);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,false,0,true);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,true,1,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,false,0,false);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO MOINHO 25X400',16,1,null);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,15,178,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,6,0.44,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,14,12.5,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,13,2.5,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,11,1000,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,7,10000,false,0,true);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE CONCENTRADO',17,0,0);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(4,1,3400,false,0,true);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(3,2);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(4,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(4,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Conta de Luz Ref:04/21','12548',5478.89);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Salario','xxxx',1545.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(9,3,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Salario','xxxx',1545.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(10,4,1);
INSERT INTO TB_PARAMETER(ID,COMPANY_NAME,PRODUCTION_ORDER_WITHOUT_STOCK,TYPE_COST_USED)VALUES(1,'Moinho Ltda',true,1);
INSERT INTO TB_FORMULATION_SECONDARY_PRODUCTION(FORMULATION_ID,PRODUCT_ID)VALUES(1,9);
INSERT INTO TB_FORMULATION_SECONDARY_PRODUCTION(FORMULATION_ID,PRODUCT_ID)VALUES(2,10);
update tb_product set AVERAGE_COST=COALESCE(ROUND((SELECT sum(entry*cost)  / sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),2),0);
update tb_product set COST_LAST_ENTRY=COALESCE(ROUND((SELECT sum(entry*cost)  / sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),2),0);
update tb_product set STOCK_BALANCE=COALESCE((SELECT sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),0);

    create table tb_cost_calculation (
       id int8 generated by default as identity,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        reference_month date,
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        stock_start_date date,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        level int4,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_item (
       quantity float8,
        raw_material boolean not null,
        round boolean not null,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_operational_cost (
       formulation_id int8 not null,
        operational_cost_type_id int8 not null,
        primary key (formulation_id, operational_cost_type_id)
    );

    create table tb_formulation_secondary_production (
       formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_pallet_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_parameter (
       id int8 not null,
        company_name varchar(255),
        production_order_without_stock boolean not null,
        type_cost_used int4,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date date,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        average_cost float8,
        cost_last_entry float8,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        raw_material_conversion float8,
        stock_balance float8,
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        date_cancel TIMESTAMP WITHOUT TIME ZONE,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_item (
       serie int4 not null,
        cost float8,
        quantity float8,
        raw_material boolean not null,
        stock_id int8,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        operational_cost_type_id int8 not null,
        production_order_id int8 not null,
        primary key (operational_cost_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        stock_id int8,
        unit_cost float8,
        production_order_id int8 not null,
        pallet_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date date,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_item 
       add constraint FKobmbir4poepy2bap27khl8833 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_item 
       add constraint FKi3e84fqfx6q011c7a5l112t21 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_operational_cost 
       add constraint FK7svm910idg3mgrvjrsx8lvltb 
       foreign key (operational_cost_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_formulation_operational_cost 
       add constraint FKd8c77n6yjfgi58futusu78lu8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_secondary_production 
       add constraint FK17dxbm4d7ndksy4ow8f73w9f9 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_secondary_production 
       add constraint FK46ap6yyh82qynkhb6ihcxi00w 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FKkiamt5i6moyn28kfs94mwa6ng 
       foreign key (apportionment_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_item 
       add constraint FKtc058kf5mybp2sttnr9jat0yr 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_item 
       add constraint FKc119rstpvgwpt1m5gejp9u5w0 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_item 
       add constraint FK1qsr5ru02gukicxoqilsov60m 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FK6wbdlrm6uxir2jr6wnm3bfsw6 
       foreign key (operational_cost_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKotrrx6er7ywp78vat7bae6m4j 
       foreign key (pallet_status_id) 
       references tb_pallet_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('Machado de Assis','machado@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('José de Alencar','jose@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('Monteiro Lobato','monteiro@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_PARAMETER');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_USER');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_GROUP');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_UNITY');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_PRODUCT');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_SECTOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_EMPLOYEE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_LABORCOSTTYPE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_OPERATIONALCOSTTYPE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_OCCURRENCE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_STATUSPALLET');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (2, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (3, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (4, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_unity(id,description)VALUES('RL','ROLO');
INSERT INTO tb_unity(id,description)VALUES('FD','FARDO');
INSERT INTO tb_unity(id,description)VALUES('SC','SACO');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO tb_pallet_status (NAME) VALUES('LIBERADO');
INSERT INTO tb_pallet_status (NAME) VALUES('EM ANALISE');
INSERT INTO tb_pallet_status (NAME) VALUES('CONDENADO');
INSERT INTO tb_pallet_status (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó - TIPO C',1,'LEITE EM PO - TIPO C',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó desnatado - TIPO C',1,'LEITE EM PO DESNATADO - TIPO C',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase do produto fracionado',0.700,'SACO MOINHO 10 KG',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 10 KG PARDO',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Fita para realizar o carimbo',1,'FITA DATADORA PARA FRACIONAMENTO',1,'',3,'RL',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Filme utilizado para envase do pallet',0.700,'FILME STRETCH',0.700,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Embalagem utilizada para o fracionamento',0.700,'BIPET MET PE 350X0.080 LEITE EM PO MOINHO 25X400',0.700,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó 25x400',1,'LEITE EM PO 25x400 MOINHO',1,'SC COM 25KG',5,'SC',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite concentrado',1,'LEITE CONCENTRADO',1,'KG',5,'KG',7,1,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-05-15','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-15','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-25','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,2,0.90,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,2,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-16','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-26','',0,5,2,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,3,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-16','',0,5,3,0.93,15000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-30','',0,5,3,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-02','',0,5,4,0.15,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,4,0.13,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,5,0.7,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-25','',0,5,6,31,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,6,32.52,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,11,0.97,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,12,0.87,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,13,9.30,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,14,17.38,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,15,25.10,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-15','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-01','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-15','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-25','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-05','',0,5,2,0.90,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,2,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-16','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-26','',0,5,2,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-05','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,3,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-16','',0,5,3,0.93,15000,0);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO',7,0,1);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,false,0,true);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,true,1,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,17,2500,false,1,true);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO DESNATADO',8,0,1);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,false,0,true);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,true,1,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,false,0,false);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO MOINHO 25X400',16,1,null);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,15,178,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,6,0.44,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,14,12.5,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,13,2.5,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,11,1000,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,7,10000,false,0,true);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE CONCENTRADO',17,0,0);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(4,1,3400,false,0,true);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(3,2);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(4,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(4,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Conta de Luz Ref:04/21','12548',5478.89);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Salario','xxxx',1545.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(9,3,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Salario','xxxx',1545.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(10,4,1);
INSERT INTO TB_PARAMETER(ID,COMPANY_NAME,PRODUCTION_ORDER_WITHOUT_STOCK,TYPE_COST_USED)VALUES(1,'Moinho Ltda',true,1);
INSERT INTO TB_FORMULATION_SECONDARY_PRODUCTION(FORMULATION_ID,PRODUCT_ID)VALUES(1,9);
INSERT INTO TB_FORMULATION_SECONDARY_PRODUCTION(FORMULATION_ID,PRODUCT_ID)VALUES(2,10);
update tb_product set AVERAGE_COST=COALESCE(ROUND((SELECT sum(entry*cost)  / sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),2),0);
update tb_product set COST_LAST_ENTRY=COALESCE(ROUND((SELECT sum(entry*cost)  / sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),2),0);
update tb_product set STOCK_BALANCE=COALESCE((SELECT sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),0);

    create table tb_cost_calculation (
       id int8 generated by default as identity,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        reference_month date,
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        stock_start_date date,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        level int4,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_item (
       quantity float8,
        raw_material boolean not null,
        round boolean not null,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_operational_cost (
       formulation_id int8 not null,
        operational_cost_type_id int8 not null,
        primary key (formulation_id, operational_cost_type_id)
    );

    create table tb_formulation_secondary_production (
       formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_pallet_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_parameter (
       id int8 not null,
        company_name varchar(255),
        production_order_without_stock boolean not null,
        type_cost_used int4,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date date,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        average_cost float8,
        cost_last_entry float8,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        raw_material_conversion float8,
        stock_balance float8,
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        date_cancel TIMESTAMP WITHOUT TIME ZONE,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_item (
       serie int4 not null,
        cost float8,
        quantity float8,
        raw_material boolean not null,
        stock_id int8,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        operational_cost_type_id int8 not null,
        production_order_id int8 not null,
        primary key (operational_cost_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        stock_id int8,
        unit_cost float8,
        production_order_id int8 not null,
        pallet_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date date,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_item 
       add constraint FKobmbir4poepy2bap27khl8833 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_item 
       add constraint FKi3e84fqfx6q011c7a5l112t21 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_operational_cost 
       add constraint FK7svm910idg3mgrvjrsx8lvltb 
       foreign key (operational_cost_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_formulation_operational_cost 
       add constraint FKd8c77n6yjfgi58futusu78lu8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_secondary_production 
       add constraint FK17dxbm4d7ndksy4ow8f73w9f9 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_secondary_production 
       add constraint FK46ap6yyh82qynkhb6ihcxi00w 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FKkiamt5i6moyn28kfs94mwa6ng 
       foreign key (apportionment_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_item 
       add constraint FKtc058kf5mybp2sttnr9jat0yr 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_item 
       add constraint FKc119rstpvgwpt1m5gejp9u5w0 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_item 
       add constraint FK1qsr5ru02gukicxoqilsov60m 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FK6wbdlrm6uxir2jr6wnm3bfsw6 
       foreign key (operational_cost_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKotrrx6er7ywp78vat7bae6m4j 
       foreign key (pallet_status_id) 
       references tb_pallet_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('Machado de Assis','machado@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('José de Alencar','jose@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('Monteiro Lobato','monteiro@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_PARAMETER');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_USER');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_GROUP');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_UNITY');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_PRODUCT');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_SECTOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_EMPLOYEE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_LABORCOSTTYPE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_OPERATIONALCOSTTYPE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_OCCURRENCE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_STATUSPALLET');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (2, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (3, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (4, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_unity(id,description)VALUES('RL','ROLO');
INSERT INTO tb_unity(id,description)VALUES('FD','FARDO');
INSERT INTO tb_unity(id,description)VALUES('SC','SACO');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO tb_pallet_status (NAME) VALUES('LIBERADO');
INSERT INTO tb_pallet_status (NAME) VALUES('EM ANALISE');
INSERT INTO tb_pallet_status (NAME) VALUES('CONDENADO');
INSERT INTO tb_pallet_status (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó - TIPO C',1,'LEITE EM PO - TIPO C',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó desnatado - TIPO C',1,'LEITE EM PO DESNATADO - TIPO C',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase do produto fracionado',0.700,'SACO MOINHO 10 KG',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 10 KG PARDO',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Fita para realizar o carimbo',1,'FITA DATADORA PARA FRACIONAMENTO',1,'',3,'RL',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Filme utilizado para envase do pallet',0.700,'FILME STRETCH',0.700,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Embalagem utilizada para o fracionamento',0.700,'BIPET MET PE 350X0.080 LEITE EM PO MOINHO 25X400',0.700,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó 25x400',1,'LEITE EM PO 25x400 MOINHO',1,'SC COM 25KG',5,'SC',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite concentrado',1,'LEITE CONCENTRADO',1,'KG',5,'KG',7,1,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-05-15','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-15','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-25','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,2,0.90,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,2,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-16','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-26','',0,5,2,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,3,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-16','',0,5,3,0.93,15000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-30','',0,5,3,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-02','',0,5,4,0.15,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,4,0.13,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,5,0.7,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-25','',0,5,6,31,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,6,32.52,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,11,0.97,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,12,0.87,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,13,9.30,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,14,17.38,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,15,25.10,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-15','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-01','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-15','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-25','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-05','',0,5,2,0.90,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,2,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-16','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-26','',0,5,2,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-05','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,3,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-16','',0,5,3,0.93,15000,0);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO',7,0,1);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,false,0,true);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,true,1,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,17,2500,false,1,true);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO DESNATADO',8,0,1);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,false,0,true);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,true,1,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,false,0,false);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO MOINHO 25X400',16,1,null);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,15,178,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,6,0.44,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,14,12.5,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,13,2.5,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,11,1000,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,7,10000,false,0,true);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE CONCENTRADO',17,0,0);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(4,1,3400,false,0,true);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(3,2);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(4,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(4,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Conta de Luz Ref:04/21','12548',5478.89);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Salario','xxxx',1545.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(9,3,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Salario','xxxx',1545.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(10,4,1);
INSERT INTO TB_PARAMETER(ID,COMPANY_NAME,PRODUCTION_ORDER_WITHOUT_STOCK,TYPE_COST_USED)VALUES(1,'Moinho Ltda',true,1);
INSERT INTO TB_FORMULATION_SECONDARY_PRODUCTION(FORMULATION_ID,PRODUCT_ID)VALUES(1,9);
INSERT INTO TB_FORMULATION_SECONDARY_PRODUCTION(FORMULATION_ID,PRODUCT_ID)VALUES(2,10);
update tb_product set AVERAGE_COST=COALESCE(ROUND((SELECT sum(entry*cost)  / sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),2),0);
update tb_product set COST_LAST_ENTRY=COALESCE(ROUND((SELECT sum(entry*cost)  / sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),2),0);
update tb_product set STOCK_BALANCE=COALESCE((SELECT sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),0);

    create table tb_cost_calculation (
       id int8 generated by default as identity,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        reference_month date,
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        stock_start_date date,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        level int4,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_item (
       quantity float8,
        raw_material boolean not null,
        round boolean not null,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_operational_cost (
       formulation_id int8 not null,
        operational_cost_type_id int8 not null,
        primary key (formulation_id, operational_cost_type_id)
    );

    create table tb_formulation_secondary_production (
       formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_pallet_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_parameter (
       id int8 not null,
        company_name varchar(255),
        production_order_without_stock boolean not null,
        type_cost_used int4,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date date,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        average_cost float8,
        cost_last_entry float8,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        raw_material_conversion float8,
        stock_balance float8,
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        date_cancel TIMESTAMP WITHOUT TIME ZONE,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_item (
       serie int4 not null,
        cost float8,
        quantity float8,
        raw_material boolean not null,
        stock_id int8,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        operational_cost_type_id int8 not null,
        production_order_id int8 not null,
        primary key (operational_cost_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        stock_id int8,
        unit_cost float8,
        production_order_id int8 not null,
        pallet_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date date,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_item 
       add constraint FKobmbir4poepy2bap27khl8833 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_item 
       add constraint FKi3e84fqfx6q011c7a5l112t21 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_operational_cost 
       add constraint FK7svm910idg3mgrvjrsx8lvltb 
       foreign key (operational_cost_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_formulation_operational_cost 
       add constraint FKd8c77n6yjfgi58futusu78lu8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_secondary_production 
       add constraint FK17dxbm4d7ndksy4ow8f73w9f9 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_secondary_production 
       add constraint FK46ap6yyh82qynkhb6ihcxi00w 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FKkiamt5i6moyn28kfs94mwa6ng 
       foreign key (apportionment_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_item 
       add constraint FKtc058kf5mybp2sttnr9jat0yr 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_item 
       add constraint FKc119rstpvgwpt1m5gejp9u5w0 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_item 
       add constraint FK1qsr5ru02gukicxoqilsov60m 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FK6wbdlrm6uxir2jr6wnm3bfsw6 
       foreign key (operational_cost_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKotrrx6er7ywp78vat7bae6m4j 
       foreign key (pallet_status_id) 
       references tb_pallet_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('Machado de Assis','machado@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('José de Alencar','jose@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('Monteiro Lobato','monteiro@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_PARAMETER');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_USER');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_GROUP');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_UNITY');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_PRODUCT');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_SECTOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_EMPLOYEE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_LABORCOSTTYPE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_OPERATIONALCOSTTYPE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_OCCURRENCE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_STATUSPALLET');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (2, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (3, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (4, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_unity(id,description)VALUES('RL','ROLO');
INSERT INTO tb_unity(id,description)VALUES('FD','FARDO');
INSERT INTO tb_unity(id,description)VALUES('SC','SACO');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO tb_pallet_status (NAME) VALUES('LIBERADO');
INSERT INTO tb_pallet_status (NAME) VALUES('EM ANALISE');
INSERT INTO tb_pallet_status (NAME) VALUES('CONDENADO');
INSERT INTO tb_pallet_status (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó - TIPO C',1,'LEITE EM PO - TIPO C',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó desnatado - TIPO C',1,'LEITE EM PO DESNATADO - TIPO C',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase do produto fracionado',0.700,'SACO MOINHO 10 KG',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 10 KG PARDO',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Fita para realizar o carimbo',1,'FITA DATADORA PARA FRACIONAMENTO',1,'',3,'RL',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Filme utilizado para envase do pallet',0.700,'FILME STRETCH',0.700,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Embalagem utilizada para o fracionamento',0.700,'BIPET MET PE 350X0.080 LEITE EM PO MOINHO 25X400',0.700,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó 25x400',1,'LEITE EM PO 25x400 MOINHO',1,'SC COM 25KG',5,'SC',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite concentrado',1,'LEITE CONCENTRADO',1,'KG',5,'KG',7,1,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-05-15','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-15','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-25','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,2,0.90,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,2,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-16','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-26','',0,5,2,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,3,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-16','',0,5,3,0.93,15000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-30','',0,5,3,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-02','',0,5,4,0.15,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,4,0.13,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,5,0.7,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-25','',0,5,6,31,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,6,32.52,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,11,0.97,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,12,0.87,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,13,9.30,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,14,17.38,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,15,25.10,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-15','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-01','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-15','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-25','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-05','',0,5,2,0.90,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,2,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-16','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-26','',0,5,2,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-05','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,3,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-16','',0,5,3,0.93,15000,0);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO',7,0,1);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,false,0,true);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,true,1,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,17,2500,false,1,true);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO DESNATADO',8,0,1);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,false,0,true);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,true,1,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,false,0,false);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO MOINHO 25X400',16,1,null);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,15,178,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,6,0.44,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,14,12.5,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,13,2.5,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,11,1000,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,7,10000,false,0,true);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE CONCENTRADO',17,0,0);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(4,1,3400,false,0,true);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(3,2);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(4,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(4,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Conta de Luz Ref:04/21','12548',5478.89);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Salario','xxxx',1545.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(9,3,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Salario','xxxx',1545.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(10,4,1);
INSERT INTO TB_PARAMETER(ID,COMPANY_NAME,PRODUCTION_ORDER_WITHOUT_STOCK,TYPE_COST_USED)VALUES(1,'Moinho Ltda',true,1);
INSERT INTO TB_FORMULATION_SECONDARY_PRODUCTION(FORMULATION_ID,PRODUCT_ID)VALUES(1,9);
INSERT INTO TB_FORMULATION_SECONDARY_PRODUCTION(FORMULATION_ID,PRODUCT_ID)VALUES(2,10);
update tb_product set AVERAGE_COST=COALESCE(ROUND((SELECT sum(entry*cost)  / sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),2),0);
update tb_product set COST_LAST_ENTRY=COALESCE(ROUND((SELECT sum(entry*cost)  / sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),2),0);
update tb_product set STOCK_BALANCE=COALESCE((SELECT sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),0);

    create table tb_cost_calculation (
       id int8 generated by default as identity,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        reference_month date,
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        stock_start_date date,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        level int4,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_item (
       quantity float8,
        raw_material boolean not null,
        round boolean not null,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_operational_cost (
       formulation_id int8 not null,
        operational_cost_type_id int8 not null,
        primary key (formulation_id, operational_cost_type_id)
    );

    create table tb_formulation_secondary_production (
       formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_pallet_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_parameter (
       id int8 not null,
        company_name varchar(255),
        production_order_without_stock boolean not null,
        type_cost_used int4,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date date,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        average_cost float8,
        cost_last_entry float8,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        raw_material_conversion float8,
        stock_balance float8,
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        date_cancel TIMESTAMP WITHOUT TIME ZONE,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_item (
       serie int4 not null,
        cost float8,
        quantity float8,
        raw_material boolean not null,
        stock_id int8,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        operational_cost_type_id int8 not null,
        production_order_id int8 not null,
        primary key (operational_cost_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        stock_id int8,
        unit_cost float8,
        production_order_id int8 not null,
        pallet_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date date,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_item 
       add constraint FKobmbir4poepy2bap27khl8833 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_item 
       add constraint FKi3e84fqfx6q011c7a5l112t21 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_operational_cost 
       add constraint FK7svm910idg3mgrvjrsx8lvltb 
       foreign key (operational_cost_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_formulation_operational_cost 
       add constraint FKd8c77n6yjfgi58futusu78lu8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_secondary_production 
       add constraint FK17dxbm4d7ndksy4ow8f73w9f9 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_secondary_production 
       add constraint FK46ap6yyh82qynkhb6ihcxi00w 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FKkiamt5i6moyn28kfs94mwa6ng 
       foreign key (apportionment_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_item 
       add constraint FKtc058kf5mybp2sttnr9jat0yr 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_item 
       add constraint FKc119rstpvgwpt1m5gejp9u5w0 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_item 
       add constraint FK1qsr5ru02gukicxoqilsov60m 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FK6wbdlrm6uxir2jr6wnm3bfsw6 
       foreign key (operational_cost_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKotrrx6er7ywp78vat7bae6m4j 
       foreign key (pallet_status_id) 
       references tb_pallet_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('Machado de Assis','machado@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('José de Alencar','jose@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('Monteiro Lobato','monteiro@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_PARAMETER');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_USER');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_GROUP');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_UNITY');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_PRODUCT');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_SECTOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_EMPLOYEE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_LABORCOSTTYPE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_OPERATIONALCOSTTYPE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_OCCURRENCE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_STATUSPALLET');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (2, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (3, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (4, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_unity(id,description)VALUES('RL','ROLO');
INSERT INTO tb_unity(id,description)VALUES('FD','FARDO');
INSERT INTO tb_unity(id,description)VALUES('SC','SACO');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO tb_pallet_status (NAME) VALUES('LIBERADO');
INSERT INTO tb_pallet_status (NAME) VALUES('EM ANALISE');
INSERT INTO tb_pallet_status (NAME) VALUES('CONDENADO');
INSERT INTO tb_pallet_status (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó - TIPO C',1,'LEITE EM PO - TIPO C',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó desnatado - TIPO C',1,'LEITE EM PO DESNATADO - TIPO C',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase do produto fracionado',0.700,'SACO MOINHO 10 KG',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 10 KG PARDO',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Fita para realizar o carimbo',1,'FITA DATADORA PARA FRACIONAMENTO',1,'',3,'RL',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Filme utilizado para envase do pallet',0.700,'FILME STRETCH',0.700,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Embalagem utilizada para o fracionamento',0.700,'BIPET MET PE 350X0.080 LEITE EM PO MOINHO 25X400',0.700,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó 25x400',1,'LEITE EM PO 25x400 MOINHO',1,'SC COM 25KG',5,'SC',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite concentrado',1,'LEITE CONCENTRADO',1,'KG',5,'KG',7,1,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-05-15','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-15','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-25','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,2,0.90,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,2,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-16','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-26','',0,5,2,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,3,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-16','',0,5,3,0.93,15000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-30','',0,5,3,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-02','',0,5,4,0.15,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,4,0.13,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,5,0.7,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-25','',0,5,6,31,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,6,32.52,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,11,0.97,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,12,0.87,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,13,9.30,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,14,17.38,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,15,25.10,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-15','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-01','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-15','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-25','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-05','',0,5,2,0.90,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,2,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-16','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-26','',0,5,2,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-05','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,3,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-16','',0,5,3,0.93,15000,0);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO',7,0,1);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,false,0,true);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,true,1,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,17,2500,false,1,true);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO DESNATADO',8,0,1);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,false,0,true);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,true,1,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,false,0,false);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO MOINHO 25X400',16,1,null);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,15,178,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,6,0.44,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,14,12.5,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,13,2.5,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,11,1000,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,7,10000,false,0,true);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE CONCENTRADO',17,0,0);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(4,1,3400,false,0,true);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(3,2);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(4,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(4,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Conta de Luz Ref:04/21','12548',5478.89);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Salario','xxxx',1545.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(9,3,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Salario','xxxx',1545.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(10,4,1);
INSERT INTO TB_PARAMETER(ID,COMPANY_NAME,PRODUCTION_ORDER_WITHOUT_STOCK,TYPE_COST_USED)VALUES(1,'Moinho Ltda',true,1);
INSERT INTO TB_FORMULATION_SECONDARY_PRODUCTION(FORMULATION_ID,PRODUCT_ID)VALUES(1,9);
INSERT INTO TB_FORMULATION_SECONDARY_PRODUCTION(FORMULATION_ID,PRODUCT_ID)VALUES(2,10);
update tb_product set AVERAGE_COST=COALESCE(ROUND((SELECT sum(entry*cost)  / sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),2),0);
update tb_product set COST_LAST_ENTRY=COALESCE(ROUND((SELECT sum(entry*cost)  / sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),2),0);
update tb_product set STOCK_BALANCE=COALESCE((SELECT sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),0);

    create table tb_cost_calculation (
       id int8 generated by default as identity,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        reference_month date,
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        stock_start_date date,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        level int4,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_item (
       quantity float8,
        raw_material boolean not null,
        round boolean not null,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_operational_cost (
       formulation_id int8 not null,
        operational_cost_type_id int8 not null,
        primary key (formulation_id, operational_cost_type_id)
    );

    create table tb_formulation_secondary_production (
       formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_pallet_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_parameter (
       id int8 not null,
        company_name varchar(255),
        production_order_without_stock boolean not null,
        type_cost_used int4,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date date,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        average_cost float8,
        cost_last_entry float8,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        raw_material_conversion float8,
        stock_balance float8,
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        date_cancel TIMESTAMP WITHOUT TIME ZONE,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_item (
       serie int4 not null,
        cost float8,
        quantity float8,
        raw_material boolean not null,
        stock_id int8,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        operational_cost_type_id int8 not null,
        production_order_id int8 not null,
        primary key (operational_cost_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        stock_id int8,
        unit_cost float8,
        production_order_id int8 not null,
        pallet_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date date,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_item 
       add constraint FKobmbir4poepy2bap27khl8833 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_item 
       add constraint FKi3e84fqfx6q011c7a5l112t21 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_operational_cost 
       add constraint FK7svm910idg3mgrvjrsx8lvltb 
       foreign key (operational_cost_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_formulation_operational_cost 
       add constraint FKd8c77n6yjfgi58futusu78lu8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_secondary_production 
       add constraint FK17dxbm4d7ndksy4ow8f73w9f9 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_secondary_production 
       add constraint FK46ap6yyh82qynkhb6ihcxi00w 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FKkiamt5i6moyn28kfs94mwa6ng 
       foreign key (apportionment_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_item 
       add constraint FKtc058kf5mybp2sttnr9jat0yr 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_item 
       add constraint FKc119rstpvgwpt1m5gejp9u5w0 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_item 
       add constraint FK1qsr5ru02gukicxoqilsov60m 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FK6wbdlrm6uxir2jr6wnm3bfsw6 
       foreign key (operational_cost_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKotrrx6er7ywp78vat7bae6m4j 
       foreign key (pallet_status_id) 
       references tb_pallet_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('Machado de Assis','machado@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('José de Alencar','jose@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('Monteiro Lobato','monteiro@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_PARAMETER');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_USER');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_GROUP');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_UNITY');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_PRODUCT');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_SECTOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_EMPLOYEE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_LABORCOSTTYPE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_OPERATIONALCOSTTYPE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_OCCURRENCE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_STATUSPALLET');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (2, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (3, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (4, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_unity(id,description)VALUES('RL','ROLO');
INSERT INTO tb_unity(id,description)VALUES('FD','FARDO');
INSERT INTO tb_unity(id,description)VALUES('SC','SACO');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO tb_pallet_status (NAME) VALUES('LIBERADO');
INSERT INTO tb_pallet_status (NAME) VALUES('EM ANALISE');
INSERT INTO tb_pallet_status (NAME) VALUES('CONDENADO');
INSERT INTO tb_pallet_status (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó - TIPO C',1,'LEITE EM PO - TIPO C',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó desnatado - TIPO C',1,'LEITE EM PO DESNATADO - TIPO C',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase do produto fracionado',0.700,'SACO MOINHO 10 KG',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 10 KG PARDO',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Fita para realizar o carimbo',1,'FITA DATADORA PARA FRACIONAMENTO',1,'',3,'RL',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Filme utilizado para envase do pallet',0.700,'FILME STRETCH',0.700,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Embalagem utilizada para o fracionamento',0.700,'BIPET MET PE 350X0.080 LEITE EM PO MOINHO 25X400',0.700,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó 25x400',1,'LEITE EM PO 25x400 MOINHO',1,'SC COM 25KG',5,'SC',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite concentrado',1,'LEITE CONCENTRADO',1,'KG',5,'KG',7,1,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-05-15','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-15','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-25','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,2,0.90,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,2,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-16','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-26','',0,5,2,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,3,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-16','',0,5,3,0.93,15000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-30','',0,5,3,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-02','',0,5,4,0.15,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,4,0.13,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,5,0.7,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-25','',0,5,6,31,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,6,32.52,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,11,0.97,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,12,0.87,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,13,9.30,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,14,17.38,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,15,25.10,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-15','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-01','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-15','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-25','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-05','',0,5,2,0.90,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,2,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-16','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-26','',0,5,2,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-05','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,3,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-16','',0,5,3,0.93,15000,0);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO',7,0,1);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,false,0,true);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,true,1,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,17,2500,false,1,true);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO DESNATADO',8,0,1);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,false,0,true);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,true,1,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,false,0,false);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO MOINHO 25X400',16,1,null);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,15,178,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,6,0.44,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,14,12.5,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,13,2.5,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,11,1000,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,7,10000,false,0,true);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE CONCENTRADO',17,0,0);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(4,1,3400,false,0,true);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(3,2);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(4,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(4,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Conta de Luz Ref:04/21','12548',5478.89);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Salario','xxxx',1545.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(9,3,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Salario','xxxx',1545.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(10,4,1);
INSERT INTO TB_PARAMETER(ID,COMPANY_NAME,PRODUCTION_ORDER_WITHOUT_STOCK,TYPE_COST_USED)VALUES(1,'Moinho Ltda',true,1);
INSERT INTO TB_FORMULATION_SECONDARY_PRODUCTION(FORMULATION_ID,PRODUCT_ID)VALUES(1,9);
INSERT INTO TB_FORMULATION_SECONDARY_PRODUCTION(FORMULATION_ID,PRODUCT_ID)VALUES(2,10);
update tb_product set AVERAGE_COST=COALESCE(ROUND((SELECT sum(entry*cost)  / sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),2),0);
update tb_product set COST_LAST_ENTRY=COALESCE(ROUND((SELECT sum(entry*cost)  / sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),2),0);
update tb_product set STOCK_BALANCE=COALESCE((SELECT sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),0);

    create table tb_cost_calculation (
       id int8 generated by default as identity,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        reference_month date,
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        stock_start_date date,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        level int4,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_item (
       quantity float8,
        raw_material boolean not null,
        round boolean not null,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_operational_cost (
       formulation_id int8 not null,
        operational_cost_type_id int8 not null,
        primary key (formulation_id, operational_cost_type_id)
    );

    create table tb_formulation_secondary_production (
       formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_pallet_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_parameter (
       id int8 not null,
        company_name varchar(255),
        production_order_without_stock boolean not null,
        type_cost_used int4,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date date,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        average_cost float8,
        cost_last_entry float8,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        raw_material_conversion float8,
        stock_balance float8,
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        date_cancel TIMESTAMP WITHOUT TIME ZONE,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_item (
       serie int4 not null,
        cost float8,
        quantity float8,
        raw_material boolean not null,
        stock_id int8,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        operational_cost_type_id int8 not null,
        production_order_id int8 not null,
        primary key (operational_cost_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        stock_id int8,
        unit_cost float8,
        production_order_id int8 not null,
        pallet_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date date,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_item 
       add constraint FKobmbir4poepy2bap27khl8833 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_item 
       add constraint FKi3e84fqfx6q011c7a5l112t21 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_operational_cost 
       add constraint FK7svm910idg3mgrvjrsx8lvltb 
       foreign key (operational_cost_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_formulation_operational_cost 
       add constraint FKd8c77n6yjfgi58futusu78lu8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_secondary_production 
       add constraint FK17dxbm4d7ndksy4ow8f73w9f9 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_secondary_production 
       add constraint FK46ap6yyh82qynkhb6ihcxi00w 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FKkiamt5i6moyn28kfs94mwa6ng 
       foreign key (apportionment_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_item 
       add constraint FKtc058kf5mybp2sttnr9jat0yr 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_item 
       add constraint FKc119rstpvgwpt1m5gejp9u5w0 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_item 
       add constraint FK1qsr5ru02gukicxoqilsov60m 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FK6wbdlrm6uxir2jr6wnm3bfsw6 
       foreign key (operational_cost_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKotrrx6er7ywp78vat7bae6m4j 
       foreign key (pallet_status_id) 
       references tb_pallet_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('Machado de Assis','machado@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('José de Alencar','jose@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('Monteiro Lobato','monteiro@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_PARAMETER');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_USER');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_GROUP');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_UNITY');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_PRODUCT');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_SECTOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_EMPLOYEE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_LABORCOSTTYPE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_OPERATIONALCOSTTYPE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_OCCURRENCE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_STATUSPALLET');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (2, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (3, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (4, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_unity(id,description)VALUES('RL','ROLO');
INSERT INTO tb_unity(id,description)VALUES('FD','FARDO');
INSERT INTO tb_unity(id,description)VALUES('SC','SACO');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO tb_pallet_status (NAME) VALUES('LIBERADO');
INSERT INTO tb_pallet_status (NAME) VALUES('EM ANALISE');
INSERT INTO tb_pallet_status (NAME) VALUES('CONDENADO');
INSERT INTO tb_pallet_status (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó - TIPO C',1,'LEITE EM PO - TIPO C',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó desnatado - TIPO C',1,'LEITE EM PO DESNATADO - TIPO C',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase do produto fracionado',0.700,'SACO MOINHO 10 KG',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 10 KG PARDO',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Fita para realizar o carimbo',1,'FITA DATADORA PARA FRACIONAMENTO',1,'',3,'RL',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Filme utilizado para envase do pallet',0.700,'FILME STRETCH',0.700,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Embalagem utilizada para o fracionamento',0.700,'BIPET MET PE 350X0.080 LEITE EM PO MOINHO 25X400',0.700,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó 25x400',1,'LEITE EM PO 25x400 MOINHO',1,'SC COM 25KG',5,'SC',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite concentrado',1,'LEITE CONCENTRADO',1,'KG',5,'KG',7,1,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-05-15','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-15','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-25','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,2,0.90,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,2,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-16','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-26','',0,5,2,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,3,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-16','',0,5,3,0.93,15000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-30','',0,5,3,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-02','',0,5,4,0.15,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,4,0.13,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,5,0.7,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-25','',0,5,6,31,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,6,32.52,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,11,0.97,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,12,0.87,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,13,9.30,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,14,17.38,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,15,25.10,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-15','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-01','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-15','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-25','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-05','',0,5,2,0.90,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,2,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-16','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-26','',0,5,2,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-05','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,3,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-16','',0,5,3,0.93,15000,0);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO',7,0,1);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,false,0,true);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,true,1,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,17,2500,false,1,true);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO DESNATADO',8,0,1);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,false,0,true);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,true,1,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,false,0,false);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO MOINHO 25X400',16,1,null);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,15,178,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,6,0.44,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,14,12.5,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,13,2.5,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,11,1000,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,7,10000,false,0,true);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE CONCENTRADO',17,0,0);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(4,1,3400,false,0,true);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(3,2);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(4,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(4,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Conta de Luz Ref:04/21','12548',5478.89);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Salario','xxxx',1545.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(9,3,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Salario','xxxx',1545.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(10,4,1);
INSERT INTO TB_PARAMETER(ID,COMPANY_NAME,PRODUCTION_ORDER_WITHOUT_STOCK,TYPE_COST_USED)VALUES(1,'Moinho Ltda',true,1);
INSERT INTO TB_FORMULATION_SECONDARY_PRODUCTION(FORMULATION_ID,PRODUCT_ID)VALUES(1,9);
INSERT INTO TB_FORMULATION_SECONDARY_PRODUCTION(FORMULATION_ID,PRODUCT_ID)VALUES(2,10);
update tb_product set AVERAGE_COST=COALESCE(ROUND((SELECT sum(entry*cost)  / sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),2),0);
update tb_product set COST_LAST_ENTRY=COALESCE(ROUND((SELECT sum(entry*cost)  / sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),2),0);
update tb_product set STOCK_BALANCE=COALESCE((SELECT sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),0);

    create table tb_cost_calculation (
       id int8 generated by default as identity,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        reference_month date,
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        stock_start_date date,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        level int4,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_item (
       quantity float8,
        raw_material boolean not null,
        round boolean not null,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_operational_cost (
       formulation_id int8 not null,
        operational_cost_type_id int8 not null,
        primary key (formulation_id, operational_cost_type_id)
    );

    create table tb_formulation_secondary_production (
       formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_pallet_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_parameter (
       id int8 not null,
        company_name varchar(255),
        production_order_without_stock boolean not null,
        type_cost_used int4,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date date,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        average_cost float8,
        cost_last_entry float8,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        raw_material_conversion float8,
        stock_balance float8,
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        date_cancel TIMESTAMP WITHOUT TIME ZONE,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_item (
       serie int4 not null,
        cost float8,
        quantity float8,
        raw_material boolean not null,
        stock_id int8,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        operational_cost_type_id int8 not null,
        production_order_id int8 not null,
        primary key (operational_cost_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        stock_id int8,
        unit_cost float8,
        production_order_id int8 not null,
        pallet_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date date,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_item 
       add constraint FKobmbir4poepy2bap27khl8833 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_item 
       add constraint FKi3e84fqfx6q011c7a5l112t21 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_operational_cost 
       add constraint FK7svm910idg3mgrvjrsx8lvltb 
       foreign key (operational_cost_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_formulation_operational_cost 
       add constraint FKd8c77n6yjfgi58futusu78lu8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_secondary_production 
       add constraint FK17dxbm4d7ndksy4ow8f73w9f9 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_secondary_production 
       add constraint FK46ap6yyh82qynkhb6ihcxi00w 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FKkiamt5i6moyn28kfs94mwa6ng 
       foreign key (apportionment_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_item 
       add constraint FKtc058kf5mybp2sttnr9jat0yr 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_item 
       add constraint FKc119rstpvgwpt1m5gejp9u5w0 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_item 
       add constraint FK1qsr5ru02gukicxoqilsov60m 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FK6wbdlrm6uxir2jr6wnm3bfsw6 
       foreign key (operational_cost_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKotrrx6er7ywp78vat7bae6m4j 
       foreign key (pallet_status_id) 
       references tb_pallet_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('Machado de Assis','machado@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('José de Alencar','jose@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('Monteiro Lobato','monteiro@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_PARAMETER');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_USER');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_GROUP');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_UNITY');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_PRODUCT');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_SECTOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_EMPLOYEE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_LABORCOSTTYPE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_OPERATIONALCOSTTYPE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_OCCURRENCE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_STATUSPALLET');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (2, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (3, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (4, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_unity(id,description)VALUES('RL','ROLO');
INSERT INTO tb_unity(id,description)VALUES('FD','FARDO');
INSERT INTO tb_unity(id,description)VALUES('SC','SACO');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO tb_pallet_status (NAME) VALUES('LIBERADO');
INSERT INTO tb_pallet_status (NAME) VALUES('EM ANALISE');
INSERT INTO tb_pallet_status (NAME) VALUES('CONDENADO');
INSERT INTO tb_pallet_status (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó - TIPO C',1,'LEITE EM PO - TIPO C',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó desnatado - TIPO C',1,'LEITE EM PO DESNATADO - TIPO C',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase do produto fracionado',0.700,'SACO MOINHO 10 KG',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 10 KG PARDO',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Fita para realizar o carimbo',1,'FITA DATADORA PARA FRACIONAMENTO',1,'',3,'RL',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Filme utilizado para envase do pallet',0.700,'FILME STRETCH',0.700,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Embalagem utilizada para o fracionamento',0.700,'BIPET MET PE 350X0.080 LEITE EM PO MOINHO 25X400',0.700,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó 25x400',1,'LEITE EM PO 25x400 MOINHO',1,'SC COM 25KG',5,'SC',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite concentrado',1,'LEITE CONCENTRADO',1,'KG',5,'KG',7,1,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-05-15','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-15','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-25','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,2,0.90,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,2,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-16','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-26','',0,5,2,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,3,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-16','',0,5,3,0.93,15000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-30','',0,5,3,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-02','',0,5,4,0.15,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,4,0.13,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,5,0.7,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-25','',0,5,6,31,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,6,32.52,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,11,0.97,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,12,0.87,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,13,9.30,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,14,17.38,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,15,25.10,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-15','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-01','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-15','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-25','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-05','',0,5,2,0.90,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,2,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-16','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-26','',0,5,2,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-05','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,3,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-16','',0,5,3,0.93,15000,0);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO',7,0,1);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,false,0,true);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,true,1,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,17,2500,false,1,true);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO DESNATADO',8,0,1);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,false,0,true);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,true,1,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,false,0,false);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO MOINHO 25X400',16,1,null);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,15,178,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,6,0.44,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,14,12.5,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,13,2.5,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,11,1000,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,7,10000,false,0,true);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE CONCENTRADO',17,0,0);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(4,1,3400,false,0,true);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(3,2);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(4,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(4,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Conta de Luz Ref:04/21','12548',5478.89);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Salario','xxxx',1545.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(9,3,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Salario','xxxx',1545.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(10,4,1);
INSERT INTO TB_PARAMETER(ID,COMPANY_NAME,PRODUCTION_ORDER_WITHOUT_STOCK,TYPE_COST_USED)VALUES(1,'Moinho Ltda',true,1);
INSERT INTO TB_FORMULATION_SECONDARY_PRODUCTION(FORMULATION_ID,PRODUCT_ID)VALUES(1,9);
INSERT INTO TB_FORMULATION_SECONDARY_PRODUCTION(FORMULATION_ID,PRODUCT_ID)VALUES(2,10);
update tb_product set AVERAGE_COST=COALESCE(ROUND((SELECT sum(entry*cost)  / sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),2),0);
update tb_product set COST_LAST_ENTRY=COALESCE(ROUND((SELECT sum(entry*cost)  / sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),2),0);
update tb_product set STOCK_BALANCE=COALESCE((SELECT sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),0);

    create table tb_cost_calculation (
       id int8 generated by default as identity,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        reference_month date,
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        stock_start_date date,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        level int4,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_item (
       quantity float8,
        raw_material boolean not null,
        round boolean not null,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_operational_cost (
       formulation_id int8 not null,
        operational_cost_type_id int8 not null,
        primary key (formulation_id, operational_cost_type_id)
    );

    create table tb_formulation_secondary_production (
       formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_pallet_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_parameter (
       id int8 not null,
        company_name varchar(255),
        production_order_without_stock boolean not null,
        type_cost_used int4,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date date,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        average_cost float8,
        cost_last_entry float8,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        raw_material_conversion float8,
        stock_balance float8,
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        date_cancel TIMESTAMP WITHOUT TIME ZONE,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_item (
       serie int4 not null,
        cost float8,
        quantity float8,
        raw_material boolean not null,
        stock_id int8,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        operational_cost_type_id int8 not null,
        production_order_id int8 not null,
        primary key (operational_cost_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        stock_id int8,
        unit_cost float8,
        production_order_id int8 not null,
        pallet_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date date,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_item 
       add constraint FKobmbir4poepy2bap27khl8833 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_item 
       add constraint FKi3e84fqfx6q011c7a5l112t21 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_operational_cost 
       add constraint FK7svm910idg3mgrvjrsx8lvltb 
       foreign key (operational_cost_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_formulation_operational_cost 
       add constraint FKd8c77n6yjfgi58futusu78lu8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_secondary_production 
       add constraint FK17dxbm4d7ndksy4ow8f73w9f9 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_secondary_production 
       add constraint FK46ap6yyh82qynkhb6ihcxi00w 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FKkiamt5i6moyn28kfs94mwa6ng 
       foreign key (apportionment_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_item 
       add constraint FKtc058kf5mybp2sttnr9jat0yr 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_item 
       add constraint FKc119rstpvgwpt1m5gejp9u5w0 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_item 
       add constraint FK1qsr5ru02gukicxoqilsov60m 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FK6wbdlrm6uxir2jr6wnm3bfsw6 
       foreign key (operational_cost_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKotrrx6er7ywp78vat7bae6m4j 
       foreign key (pallet_status_id) 
       references tb_pallet_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('Machado de Assis','machado@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('José de Alencar','jose@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('Monteiro Lobato','monteiro@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_PARAMETER');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_USER');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_GROUP');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_UNITY');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_PRODUCT');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_SECTOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_EMPLOYEE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_LABORCOSTTYPE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_OPERATIONALCOSTTYPE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_OCCURRENCE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_STATUSPALLET');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (2, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (3, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (4, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_unity(id,description)VALUES('RL','ROLO');
INSERT INTO tb_unity(id,description)VALUES('FD','FARDO');
INSERT INTO tb_unity(id,description)VALUES('SC','SACO');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO tb_pallet_status (NAME) VALUES('LIBERADO');
INSERT INTO tb_pallet_status (NAME) VALUES('EM ANALISE');
INSERT INTO tb_pallet_status (NAME) VALUES('CONDENADO');
INSERT INTO tb_pallet_status (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó - TIPO C',1,'LEITE EM PO - TIPO C',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó desnatado - TIPO C',1,'LEITE EM PO DESNATADO - TIPO C',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase do produto fracionado',0.700,'SACO MOINHO 10 KG',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 10 KG PARDO',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Fita para realizar o carimbo',1,'FITA DATADORA PARA FRACIONAMENTO',1,'',3,'RL',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Filme utilizado para envase do pallet',0.700,'FILME STRETCH',0.700,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Embalagem utilizada para o fracionamento',0.700,'BIPET MET PE 350X0.080 LEITE EM PO MOINHO 25X400',0.700,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó 25x400',1,'LEITE EM PO 25x400 MOINHO',1,'SC COM 25KG',5,'SC',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite concentrado',1,'LEITE CONCENTRADO',1,'KG',5,'KG',7,1,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-05-15','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-15','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-25','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,2,0.90,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,2,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-16','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-26','',0,5,2,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,3,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-16','',0,5,3,0.93,15000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-30','',0,5,3,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-02','',0,5,4,0.15,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,4,0.13,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,5,0.7,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-25','',0,5,6,31,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,6,32.52,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,11,0.97,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,12,0.87,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,13,9.30,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,14,17.38,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,15,25.10,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-15','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-01','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-15','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-25','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-05','',0,5,2,0.90,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,2,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-16','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-26','',0,5,2,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-05','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,3,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-16','',0,5,3,0.93,15000,0);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO',7,0,1);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,false,0,true);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,true,1,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,17,2500,false,1,true);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO DESNATADO',8,0,1);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,false,0,true);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,true,1,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,false,0,false);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO MOINHO 25X400',16,1,null);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,15,178,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,6,0.44,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,14,12.5,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,13,2.5,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,11,1000,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,7,10000,false,0,true);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE CONCENTRADO',17,0,0);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(4,1,3400,false,0,true);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(3,2);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(4,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(4,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Conta de Luz Ref:04/21','12548',5478.89);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Salario','xxxx',1545.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(9,3,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Salario','xxxx',1545.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(10,4,1);
INSERT INTO TB_PARAMETER(ID,COMPANY_NAME,PRODUCTION_ORDER_WITHOUT_STOCK,TYPE_COST_USED)VALUES(1,'Moinho Ltda',true,1);
INSERT INTO TB_FORMULATION_SECONDARY_PRODUCTION(FORMULATION_ID,PRODUCT_ID)VALUES(1,9);
INSERT INTO TB_FORMULATION_SECONDARY_PRODUCTION(FORMULATION_ID,PRODUCT_ID)VALUES(2,10);
update tb_product set AVERAGE_COST=COALESCE(ROUND((SELECT sum(entry*cost)  / sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),2),0);
update tb_product set COST_LAST_ENTRY=COALESCE(ROUND((SELECT sum(entry*cost)  / sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),2),0);
update tb_product set STOCK_BALANCE=COALESCE((SELECT sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),0);

    create table tb_cost_calculation (
       id int8 generated by default as identity,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        reference_month date,
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        stock_start_date date,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        level int4,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_item (
       quantity float8,
        raw_material boolean not null,
        round boolean not null,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_operational_cost (
       formulation_id int8 not null,
        operational_cost_type_id int8 not null,
        primary key (formulation_id, operational_cost_type_id)
    );

    create table tb_formulation_secondary_production (
       formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_pallet_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_parameter (
       id int8 not null,
        company_name varchar(255),
        production_order_without_stock boolean not null,
        type_cost_used int4,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date date,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        average_cost float8,
        cost_last_entry float8,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        raw_material_conversion float8,
        stock_balance float8,
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        date_cancel TIMESTAMP WITHOUT TIME ZONE,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_item (
       serie int4 not null,
        cost float8,
        quantity float8,
        raw_material boolean not null,
        stock_id int8,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        operational_cost_type_id int8 not null,
        production_order_id int8 not null,
        primary key (operational_cost_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        stock_id int8,
        unit_cost float8,
        production_order_id int8 not null,
        pallet_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date date,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_item 
       add constraint FKobmbir4poepy2bap27khl8833 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_item 
       add constraint FKi3e84fqfx6q011c7a5l112t21 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_operational_cost 
       add constraint FK7svm910idg3mgrvjrsx8lvltb 
       foreign key (operational_cost_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_formulation_operational_cost 
       add constraint FKd8c77n6yjfgi58futusu78lu8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_secondary_production 
       add constraint FK17dxbm4d7ndksy4ow8f73w9f9 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_secondary_production 
       add constraint FK46ap6yyh82qynkhb6ihcxi00w 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FKkiamt5i6moyn28kfs94mwa6ng 
       foreign key (apportionment_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_item 
       add constraint FKtc058kf5mybp2sttnr9jat0yr 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_item 
       add constraint FKc119rstpvgwpt1m5gejp9u5w0 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_item 
       add constraint FK1qsr5ru02gukicxoqilsov60m 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FK6wbdlrm6uxir2jr6wnm3bfsw6 
       foreign key (operational_cost_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKotrrx6er7ywp78vat7bae6m4j 
       foreign key (pallet_status_id) 
       references tb_pallet_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('Machado de Assis','machado@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('José de Alencar','jose@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('Monteiro Lobato','monteiro@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_PARAMETER');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_USER');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_GROUP');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_UNITY');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_PRODUCT');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_SECTOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_EMPLOYEE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_LABORCOSTTYPE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_OPERATIONALCOSTTYPE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_OCCURRENCE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_STATUSPALLET');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (2, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (3, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (4, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_unity(id,description)VALUES('RL','ROLO');
INSERT INTO tb_unity(id,description)VALUES('FD','FARDO');
INSERT INTO tb_unity(id,description)VALUES('SC','SACO');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO tb_pallet_status (NAME) VALUES('LIBERADO');
INSERT INTO tb_pallet_status (NAME) VALUES('EM ANALISE');
INSERT INTO tb_pallet_status (NAME) VALUES('CONDENADO');
INSERT INTO tb_pallet_status (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó - TIPO C',1,'LEITE EM PO - TIPO C',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó desnatado - TIPO C',1,'LEITE EM PO DESNATADO - TIPO C',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase do produto fracionado',0.700,'SACO MOINHO 10 KG',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 10 KG PARDO',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Fita para realizar o carimbo',1,'FITA DATADORA PARA FRACIONAMENTO',1,'',3,'RL',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Filme utilizado para envase do pallet',0.700,'FILME STRETCH',0.700,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Embalagem utilizada para o fracionamento',0.700,'BIPET MET PE 350X0.080 LEITE EM PO MOINHO 25X400',0.700,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó 25x400',1,'LEITE EM PO 25x400 MOINHO',1,'SC COM 25KG',5,'SC',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite concentrado',1,'LEITE CONCENTRADO',1,'KG',5,'KG',7,1,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-05-15','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-15','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-25','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,2,0.90,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,2,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-16','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-26','',0,5,2,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,3,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-16','',0,5,3,0.93,15000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-30','',0,5,3,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-02','',0,5,4,0.15,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,4,0.13,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,5,0.7,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-25','',0,5,6,31,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,6,32.52,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,11,0.97,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,12,0.87,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,13,9.30,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,14,17.38,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,15,25.10,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-15','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-01','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-15','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-25','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-05','',0,5,2,0.90,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,2,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-16','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-26','',0,5,2,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-05','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,3,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-16','',0,5,3,0.93,15000,0);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO',7,0,1);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,false,0,true);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,true,1,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,17,2500,false,1,true);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO DESNATADO',8,0,1);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,false,0,true);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,true,1,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,false,0,false);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO MOINHO 25X400',16,1,null);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,15,178,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,6,0.44,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,14,12.5,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,13,2.5,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,11,1000,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,7,10000,false,0,true);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE CONCENTRADO',17,0,0);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(4,1,3400,false,0,true);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(3,2);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(4,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(4,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Conta de Luz Ref:04/21','12548',5478.89);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Salario','xxxx',1545.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(9,3,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Salario','xxxx',1545.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(10,4,1);
INSERT INTO TB_PARAMETER(ID,COMPANY_NAME,PRODUCTION_ORDER_WITHOUT_STOCK,TYPE_COST_USED)VALUES(1,'Moinho Ltda',true,1);
INSERT INTO TB_FORMULATION_SECONDARY_PRODUCTION(FORMULATION_ID,PRODUCT_ID)VALUES(1,9);
INSERT INTO TB_FORMULATION_SECONDARY_PRODUCTION(FORMULATION_ID,PRODUCT_ID)VALUES(2,10);
update tb_product set AVERAGE_COST=COALESCE(ROUND((SELECT sum(entry*cost)  / sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),2),0);
update tb_product set COST_LAST_ENTRY=COALESCE(ROUND((SELECT sum(entry*cost)  / sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),2),0);
update tb_product set STOCK_BALANCE=COALESCE((SELECT sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),0);

    create table tb_cost_calculation (
       id int8 generated by default as identity,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        reference_month date,
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        stock_start_date date,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        level int4,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_item (
       quantity float8,
        raw_material boolean not null,
        round boolean not null,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_operational_cost (
       formulation_id int8 not null,
        operational_cost_type_id int8 not null,
        primary key (formulation_id, operational_cost_type_id)
    );

    create table tb_formulation_secondary_production (
       formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_pallet_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_parameter (
       id int8 not null,
        company_name varchar(255),
        production_order_without_stock boolean not null,
        type_cost_used int4,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date date,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        average_cost float8,
        cost_last_entry float8,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        raw_material_conversion float8,
        stock_balance float8,
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        date_cancel TIMESTAMP WITHOUT TIME ZONE,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_item (
       serie int4 not null,
        cost float8,
        quantity float8,
        raw_material boolean not null,
        stock_id int8,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        operational_cost_type_id int8 not null,
        production_order_id int8 not null,
        primary key (operational_cost_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        stock_id int8,
        unit_cost float8,
        production_order_id int8 not null,
        pallet_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date date,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_item 
       add constraint FKobmbir4poepy2bap27khl8833 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_item 
       add constraint FKi3e84fqfx6q011c7a5l112t21 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_operational_cost 
       add constraint FK7svm910idg3mgrvjrsx8lvltb 
       foreign key (operational_cost_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_formulation_operational_cost 
       add constraint FKd8c77n6yjfgi58futusu78lu8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_secondary_production 
       add constraint FK17dxbm4d7ndksy4ow8f73w9f9 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_secondary_production 
       add constraint FK46ap6yyh82qynkhb6ihcxi00w 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FKkiamt5i6moyn28kfs94mwa6ng 
       foreign key (apportionment_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_item 
       add constraint FKtc058kf5mybp2sttnr9jat0yr 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_item 
       add constraint FKc119rstpvgwpt1m5gejp9u5w0 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_item 
       add constraint FK1qsr5ru02gukicxoqilsov60m 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FK6wbdlrm6uxir2jr6wnm3bfsw6 
       foreign key (operational_cost_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKotrrx6er7ywp78vat7bae6m4j 
       foreign key (pallet_status_id) 
       references tb_pallet_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('Machado de Assis','machado@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('José de Alencar','jose@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('Monteiro Lobato','monteiro@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_PARAMETER');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_USER');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_GROUP');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_UNITY');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_PRODUCT');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_SECTOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_EMPLOYEE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_LABORCOSTTYPE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_OPERATIONALCOSTTYPE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_OCCURRENCE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_STATUSPALLET');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (2, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (3, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (4, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_unity(id,description)VALUES('RL','ROLO');
INSERT INTO tb_unity(id,description)VALUES('FD','FARDO');
INSERT INTO tb_unity(id,description)VALUES('SC','SACO');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO tb_pallet_status (NAME) VALUES('LIBERADO');
INSERT INTO tb_pallet_status (NAME) VALUES('EM ANALISE');
INSERT INTO tb_pallet_status (NAME) VALUES('CONDENADO');
INSERT INTO tb_pallet_status (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó - TIPO C',1,'LEITE EM PO - TIPO C',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó desnatado - TIPO C',1,'LEITE EM PO DESNATADO - TIPO C',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase do produto fracionado',0.700,'SACO MOINHO 10 KG',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 10 KG PARDO',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Fita para realizar o carimbo',1,'FITA DATADORA PARA FRACIONAMENTO',1,'',3,'RL',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Filme utilizado para envase do pallet',0.700,'FILME STRETCH',0.700,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Embalagem utilizada para o fracionamento',0.700,'BIPET MET PE 350X0.080 LEITE EM PO MOINHO 25X400',0.700,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó 25x400',1,'LEITE EM PO 25x400 MOINHO',1,'SC COM 25KG',5,'SC',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite concentrado',1,'LEITE CONCENTRADO',1,'KG',5,'KG',7,1,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-05-15','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-15','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-25','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,2,0.90,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,2,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-16','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-26','',0,5,2,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,3,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-16','',0,5,3,0.93,15000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-30','',0,5,3,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-02','',0,5,4,0.15,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,4,0.13,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,5,0.7,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-25','',0,5,6,31,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,6,32.52,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,11,0.97,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,12,0.87,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,13,9.30,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,14,17.38,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,15,25.10,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-15','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-01','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-15','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-25','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-05','',0,5,2,0.90,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,2,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-16','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-26','',0,5,2,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-05','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,3,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-16','',0,5,3,0.93,15000,0);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO',7,0,1);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,false,0,true);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,true,1,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,17,2500,false,1,true);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO DESNATADO',8,0,1);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,false,0,true);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,true,1,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,false,0,false);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO MOINHO 25X400',16,1,null);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,15,178,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,6,0.44,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,14,12.5,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,13,2.5,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,11,1000,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,7,10000,false,0,true);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE CONCENTRADO',17,0,0);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(4,1,3400,false,0,true);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(3,2);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(4,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(4,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Conta de Luz Ref:04/21','12548',5478.89);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Salario','xxxx',1545.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(9,3,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Salario','xxxx',1545.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(10,4,1);
INSERT INTO TB_PARAMETER(ID,COMPANY_NAME,PRODUCTION_ORDER_WITHOUT_STOCK,TYPE_COST_USED)VALUES(1,'Moinho Ltda',true,1);
INSERT INTO TB_FORMULATION_SECONDARY_PRODUCTION(FORMULATION_ID,PRODUCT_ID)VALUES(1,9);
INSERT INTO TB_FORMULATION_SECONDARY_PRODUCTION(FORMULATION_ID,PRODUCT_ID)VALUES(2,10);
update tb_product set AVERAGE_COST=COALESCE(ROUND((SELECT sum(entry*cost)  / sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),2),0);
update tb_product set COST_LAST_ENTRY=COALESCE(ROUND((SELECT sum(entry*cost)  / sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),2),0);
update tb_product set STOCK_BALANCE=COALESCE((SELECT sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),0);

    create table tb_cost_calculation (
       id int8 generated by default as identity,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        reference_month date,
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        stock_start_date date,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        level int4,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_item (
       quantity float8,
        raw_material boolean not null,
        round boolean not null,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_operational_cost (
       formulation_id int8 not null,
        operational_cost_type_id int8 not null,
        primary key (formulation_id, operational_cost_type_id)
    );

    create table tb_formulation_secondary_production (
       formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_pallet_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_parameter (
       id int8 not null,
        company_name varchar(255),
        production_order_without_stock boolean not null,
        type_cost_used int4,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date date,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        average_cost float8,
        cost_last_entry float8,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        raw_material_conversion float8,
        stock_balance float8,
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        date_cancel TIMESTAMP WITHOUT TIME ZONE,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_item (
       serie int4 not null,
        cost float8,
        quantity float8,
        raw_material boolean not null,
        stock_id int8,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        operational_cost_type_id int8 not null,
        production_order_id int8 not null,
        primary key (operational_cost_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        stock_id int8,
        unit_cost float8,
        production_order_id int8 not null,
        pallet_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date date,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_item 
       add constraint FKobmbir4poepy2bap27khl8833 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_item 
       add constraint FKi3e84fqfx6q011c7a5l112t21 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_operational_cost 
       add constraint FK7svm910idg3mgrvjrsx8lvltb 
       foreign key (operational_cost_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_formulation_operational_cost 
       add constraint FKd8c77n6yjfgi58futusu78lu8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_secondary_production 
       add constraint FK17dxbm4d7ndksy4ow8f73w9f9 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_secondary_production 
       add constraint FK46ap6yyh82qynkhb6ihcxi00w 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FKkiamt5i6moyn28kfs94mwa6ng 
       foreign key (apportionment_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_item 
       add constraint FKtc058kf5mybp2sttnr9jat0yr 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_item 
       add constraint FKc119rstpvgwpt1m5gejp9u5w0 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_item 
       add constraint FK1qsr5ru02gukicxoqilsov60m 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FK6wbdlrm6uxir2jr6wnm3bfsw6 
       foreign key (operational_cost_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKotrrx6er7ywp78vat7bae6m4j 
       foreign key (pallet_status_id) 
       references tb_pallet_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('Machado de Assis','machado@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('José de Alencar','jose@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('Monteiro Lobato','monteiro@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_PARAMETER');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_USER');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_GROUP');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_UNITY');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_PRODUCT');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_SECTOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_EMPLOYEE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_LABORCOSTTYPE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_OPERATIONALCOSTTYPE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_OCCURRENCE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_STATUSPALLET');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (2, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (3, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (4, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_unity(id,description)VALUES('RL','ROLO');
INSERT INTO tb_unity(id,description)VALUES('FD','FARDO');
INSERT INTO tb_unity(id,description)VALUES('SC','SACO');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO tb_pallet_status (NAME) VALUES('LIBERADO');
INSERT INTO tb_pallet_status (NAME) VALUES('EM ANALISE');
INSERT INTO tb_pallet_status (NAME) VALUES('CONDENADO');
INSERT INTO tb_pallet_status (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó - TIPO C',1,'LEITE EM PO - TIPO C',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó desnatado - TIPO C',1,'LEITE EM PO DESNATADO - TIPO C',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase do produto fracionado',0.700,'SACO MOINHO 10 KG',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 10 KG PARDO',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Fita para realizar o carimbo',1,'FITA DATADORA PARA FRACIONAMENTO',1,'',3,'RL',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Filme utilizado para envase do pallet',0.700,'FILME STRETCH',0.700,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Embalagem utilizada para o fracionamento',0.700,'BIPET MET PE 350X0.080 LEITE EM PO MOINHO 25X400',0.700,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó 25x400',1,'LEITE EM PO 25x400 MOINHO',1,'SC COM 25KG',5,'SC',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite concentrado',1,'LEITE CONCENTRADO',1,'KG',5,'KG',7,1,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-05-15','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-15','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-25','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,2,0.90,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,2,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-16','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-26','',0,5,2,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,3,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-16','',0,5,3,0.93,15000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-30','',0,5,3,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-02','',0,5,4,0.15,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,4,0.13,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,5,0.7,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-25','',0,5,6,31,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,6,32.52,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,11,0.97,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,12,0.87,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,13,9.30,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,14,17.38,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,15,25.10,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-15','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-01','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-15','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-25','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-05','',0,5,2,0.90,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,2,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-16','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-26','',0,5,2,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-05','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,3,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-16','',0,5,3,0.93,15000,0);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO',7,0,1);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,false,0,true);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,true,1,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,17,2500,false,1,true);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO DESNATADO',8,0,1);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,false,0,true);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,true,1,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,false,0,false);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO MOINHO 25X400',16,1,null);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,15,178,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,6,0.44,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,14,12.5,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,13,2.5,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,11,1000,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,7,10000,false,0,true);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE CONCENTRADO',17,0,0);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(4,1,3400,false,0,true);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(3,2);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(4,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(4,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Conta de Luz Ref:04/21','12548',5478.89);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Salario','xxxx',1545.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(9,3,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Salario','xxxx',1545.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(10,4,1);
INSERT INTO TB_PARAMETER(ID,COMPANY_NAME,PRODUCTION_ORDER_WITHOUT_STOCK,TYPE_COST_USED)VALUES(1,'Moinho Ltda',true,1);
INSERT INTO TB_FORMULATION_SECONDARY_PRODUCTION(FORMULATION_ID,PRODUCT_ID)VALUES(1,9);
INSERT INTO TB_FORMULATION_SECONDARY_PRODUCTION(FORMULATION_ID,PRODUCT_ID)VALUES(2,10);
update tb_product set AVERAGE_COST=COALESCE(ROUND((SELECT sum(entry*cost)  / sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),2),0);
update tb_product set COST_LAST_ENTRY=COALESCE(ROUND((SELECT sum(entry*cost)  / sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),2),0);
update tb_product set STOCK_BALANCE=COALESCE((SELECT sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),0);

    create table tb_cost_calculation (
       id int8 generated by default as identity,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        reference_month date,
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        stock_start_date date,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        level int4,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_item (
       quantity float8,
        raw_material boolean not null,
        round boolean not null,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_operational_cost (
       formulation_id int8 not null,
        operational_cost_type_id int8 not null,
        primary key (formulation_id, operational_cost_type_id)
    );

    create table tb_formulation_secondary_production (
       formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_pallet_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_parameter (
       id int8 not null,
        company_name varchar(255),
        production_order_without_stock boolean not null,
        type_cost_used int4,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date date,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        average_cost float8,
        cost_last_entry float8,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        raw_material_conversion float8,
        stock_balance float8,
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        date_cancel TIMESTAMP WITHOUT TIME ZONE,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_item (
       serie int4 not null,
        cost float8,
        quantity float8,
        raw_material boolean not null,
        stock_id int8,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        operational_cost_type_id int8 not null,
        production_order_id int8 not null,
        primary key (operational_cost_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        stock_id int8,
        unit_cost float8,
        production_order_id int8 not null,
        pallet_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date date,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_item 
       add constraint FKobmbir4poepy2bap27khl8833 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_item 
       add constraint FKi3e84fqfx6q011c7a5l112t21 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_operational_cost 
       add constraint FK7svm910idg3mgrvjrsx8lvltb 
       foreign key (operational_cost_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_formulation_operational_cost 
       add constraint FKd8c77n6yjfgi58futusu78lu8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_secondary_production 
       add constraint FK17dxbm4d7ndksy4ow8f73w9f9 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_secondary_production 
       add constraint FK46ap6yyh82qynkhb6ihcxi00w 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FKkiamt5i6moyn28kfs94mwa6ng 
       foreign key (apportionment_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_item 
       add constraint FKtc058kf5mybp2sttnr9jat0yr 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_item 
       add constraint FKc119rstpvgwpt1m5gejp9u5w0 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_item 
       add constraint FK1qsr5ru02gukicxoqilsov60m 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FK6wbdlrm6uxir2jr6wnm3bfsw6 
       foreign key (operational_cost_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKotrrx6er7ywp78vat7bae6m4j 
       foreign key (pallet_status_id) 
       references tb_pallet_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('Machado de Assis','machado@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('José de Alencar','jose@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('Monteiro Lobato','monteiro@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_PARAMETER');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_USER');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_GROUP');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_UNITY');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_PRODUCT');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_SECTOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_EMPLOYEE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_LABORCOSTTYPE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_OPERATIONALCOSTTYPE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_OCCURRENCE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_STATUSPALLET');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (2, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (3, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (4, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_unity(id,description)VALUES('RL','ROLO');
INSERT INTO tb_unity(id,description)VALUES('FD','FARDO');
INSERT INTO tb_unity(id,description)VALUES('SC','SACO');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO tb_pallet_status (NAME) VALUES('LIBERADO');
INSERT INTO tb_pallet_status (NAME) VALUES('EM ANALISE');
INSERT INTO tb_pallet_status (NAME) VALUES('CONDENADO');
INSERT INTO tb_pallet_status (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó - TIPO C',1,'LEITE EM PO - TIPO C',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó desnatado - TIPO C',1,'LEITE EM PO DESNATADO - TIPO C',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase do produto fracionado',0.700,'SACO MOINHO 10 KG',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 10 KG PARDO',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Fita para realizar o carimbo',1,'FITA DATADORA PARA FRACIONAMENTO',1,'',3,'RL',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Filme utilizado para envase do pallet',0.700,'FILME STRETCH',0.700,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Embalagem utilizada para o fracionamento',0.700,'BIPET MET PE 350X0.080 LEITE EM PO MOINHO 25X400',0.700,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó 25x400',1,'LEITE EM PO 25x400 MOINHO',1,'SC COM 25KG',5,'SC',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite concentrado',1,'LEITE CONCENTRADO',1,'KG',5,'KG',7,1,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-05-15','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-15','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-25','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,2,0.90,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,2,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-16','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-26','',0,5,2,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,3,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-16','',0,5,3,0.93,15000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-30','',0,5,3,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-02','',0,5,4,0.15,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,4,0.13,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,5,0.7,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-25','',0,5,6,31,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,6,32.52,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,11,0.97,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,12,0.87,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,13,9.30,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,14,17.38,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,15,25.10,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-15','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-01','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-15','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-25','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-05','',0,5,2,0.90,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,2,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-16','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-26','',0,5,2,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-05','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,3,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-16','',0,5,3,0.93,15000,0);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO',7,0,1);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,false,0,true);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,true,1,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,17,2500,false,1,true);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO DESNATADO',8,0,1);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,false,0,true);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,true,1,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,false,0,false);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO MOINHO 25X400',16,1,null);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,15,178,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,6,0.44,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,14,12.5,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,13,2.5,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,11,1000,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,7,10000,false,0,true);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE CONCENTRADO',17,0,0);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(4,1,3400,false,0,true);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(3,2);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(4,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(4,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Conta de Luz Ref:04/21','12548',5478.89);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Salario','xxxx',1545.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(9,3,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Salario','xxxx',1545.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(10,4,1);
INSERT INTO TB_PARAMETER(ID,COMPANY_NAME,PRODUCTION_ORDER_WITHOUT_STOCK,TYPE_COST_USED)VALUES(1,'Moinho Ltda',true,1);
INSERT INTO TB_FORMULATION_SECONDARY_PRODUCTION(FORMULATION_ID,PRODUCT_ID)VALUES(1,9);
INSERT INTO TB_FORMULATION_SECONDARY_PRODUCTION(FORMULATION_ID,PRODUCT_ID)VALUES(2,10);
update tb_product set AVERAGE_COST=COALESCE(ROUND((SELECT sum(entry*cost)  / sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),2),0);
update tb_product set COST_LAST_ENTRY=COALESCE(ROUND((SELECT sum(entry*cost)  / sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),2),0);
update tb_product set STOCK_BALANCE=COALESCE((SELECT sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),0);

    create table tb_cost_calculation (
       id int8 generated by default as identity,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        reference_month date,
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        stock_start_date date,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        level int4,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_item (
       quantity float8,
        raw_material boolean not null,
        round boolean not null,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_operational_cost (
       formulation_id int8 not null,
        operational_cost_type_id int8 not null,
        primary key (formulation_id, operational_cost_type_id)
    );

    create table tb_formulation_secondary_production (
       formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_pallet_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_parameter (
       id int8 not null,
        company_name varchar(255),
        production_order_without_stock boolean not null,
        type_cost_used int4,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date date,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        average_cost float8,
        cost_last_entry float8,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        raw_material_conversion float8,
        stock_balance float8,
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        date_cancel TIMESTAMP WITHOUT TIME ZONE,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_item (
       serie int4 not null,
        cost float8,
        quantity float8,
        raw_material boolean not null,
        stock_id int8,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        operational_cost_type_id int8 not null,
        production_order_id int8 not null,
        primary key (operational_cost_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        stock_id int8,
        unit_cost float8,
        production_order_id int8 not null,
        pallet_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date date,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_item 
       add constraint FKobmbir4poepy2bap27khl8833 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_item 
       add constraint FKi3e84fqfx6q011c7a5l112t21 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_operational_cost 
       add constraint FK7svm910idg3mgrvjrsx8lvltb 
       foreign key (operational_cost_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_formulation_operational_cost 
       add constraint FKd8c77n6yjfgi58futusu78lu8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_secondary_production 
       add constraint FK17dxbm4d7ndksy4ow8f73w9f9 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_secondary_production 
       add constraint FK46ap6yyh82qynkhb6ihcxi00w 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FKkiamt5i6moyn28kfs94mwa6ng 
       foreign key (apportionment_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_item 
       add constraint FKtc058kf5mybp2sttnr9jat0yr 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_item 
       add constraint FKc119rstpvgwpt1m5gejp9u5w0 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_item 
       add constraint FK1qsr5ru02gukicxoqilsov60m 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FK6wbdlrm6uxir2jr6wnm3bfsw6 
       foreign key (operational_cost_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKotrrx6er7ywp78vat7bae6m4j 
       foreign key (pallet_status_id) 
       references tb_pallet_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('Machado de Assis','machado@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('José de Alencar','jose@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('Monteiro Lobato','monteiro@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_PARAMETER');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_USER');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_GROUP');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_UNITY');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_PRODUCT');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_SECTOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_EMPLOYEE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_LABORCOSTTYPE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_OPERATIONALCOSTTYPE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_OCCURRENCE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_STATUSPALLET');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (2, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (3, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (4, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_unity(id,description)VALUES('RL','ROLO');
INSERT INTO tb_unity(id,description)VALUES('FD','FARDO');
INSERT INTO tb_unity(id,description)VALUES('SC','SACO');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO tb_pallet_status (NAME) VALUES('LIBERADO');
INSERT INTO tb_pallet_status (NAME) VALUES('EM ANALISE');
INSERT INTO tb_pallet_status (NAME) VALUES('CONDENADO');
INSERT INTO tb_pallet_status (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó - TIPO C',1,'LEITE EM PO - TIPO C',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó desnatado - TIPO C',1,'LEITE EM PO DESNATADO - TIPO C',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase do produto fracionado',0.700,'SACO MOINHO 10 KG',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 10 KG PARDO',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Fita para realizar o carimbo',1,'FITA DATADORA PARA FRACIONAMENTO',1,'',3,'RL',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Filme utilizado para envase do pallet',0.700,'FILME STRETCH',0.700,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Embalagem utilizada para o fracionamento',0.700,'BIPET MET PE 350X0.080 LEITE EM PO MOINHO 25X400',0.700,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó 25x400',1,'LEITE EM PO 25x400 MOINHO',1,'SC COM 25KG',5,'SC',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite concentrado',1,'LEITE CONCENTRADO',1,'KG',5,'KG',7,1,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-05-15','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-15','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-25','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,2,0.90,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,2,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-16','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-26','',0,5,2,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,3,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-16','',0,5,3,0.93,15000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-30','',0,5,3,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-02','',0,5,4,0.15,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,4,0.13,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,5,0.7,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-25','',0,5,6,31,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,6,32.52,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,11,0.97,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,12,0.87,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,13,9.30,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,14,17.38,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,15,25.10,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-15','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-01','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-15','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-25','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-05','',0,5,2,0.90,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,2,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-16','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-26','',0,5,2,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-05','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,3,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-16','',0,5,3,0.93,15000,0);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO',7,0,1);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,false,0,true);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,true,1,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,17,2500,false,1,true);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO DESNATADO',8,0,1);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,false,0,true);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,true,1,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,false,0,false);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO MOINHO 25X400',16,1,null);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,15,178,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,6,0.44,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,14,12.5,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,13,2.5,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,11,1000,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,7,10000,false,0,true);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE CONCENTRADO',17,0,0);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(4,1,3400,false,0,true);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(3,2);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(4,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(4,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Conta de Luz Ref:04/21','12548',5478.89);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Salario','xxxx',1545.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(9,3,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Salario','xxxx',1545.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(10,4,1);
INSERT INTO TB_PARAMETER(ID,COMPANY_NAME,PRODUCTION_ORDER_WITHOUT_STOCK,TYPE_COST_USED)VALUES(1,'Moinho Ltda',true,1);
INSERT INTO TB_FORMULATION_SECONDARY_PRODUCTION(FORMULATION_ID,PRODUCT_ID)VALUES(1,9);
INSERT INTO TB_FORMULATION_SECONDARY_PRODUCTION(FORMULATION_ID,PRODUCT_ID)VALUES(2,10);
update tb_product set AVERAGE_COST=COALESCE(ROUND((SELECT sum(entry*cost)  / sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),2),0);
update tb_product set COST_LAST_ENTRY=COALESCE(ROUND((SELECT sum(entry*cost)  / sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),2),0);
update tb_product set STOCK_BALANCE=COALESCE((SELECT sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),0);

    create table tb_cost_calculation (
       id int8 generated by default as identity,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        reference_month date,
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        stock_start_date date,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        level int4,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_item (
       quantity float8,
        raw_material boolean not null,
        round boolean not null,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_operational_cost (
       formulation_id int8 not null,
        operational_cost_type_id int8 not null,
        primary key (formulation_id, operational_cost_type_id)
    );

    create table tb_formulation_secondary_production (
       formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_pallet_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_parameter (
       id int8 not null,
        company_name varchar(255),
        production_order_without_stock boolean not null,
        type_cost_used int4,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date date,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        average_cost float8,
        cost_last_entry float8,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        raw_material_conversion float8,
        stock_balance float8,
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        date_cancel TIMESTAMP WITHOUT TIME ZONE,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_item (
       serie int4 not null,
        cost float8,
        quantity float8,
        raw_material boolean not null,
        stock_id int8,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        operational_cost_type_id int8 not null,
        production_order_id int8 not null,
        primary key (operational_cost_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        stock_id int8,
        unit_cost float8,
        production_order_id int8 not null,
        pallet_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date date,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_item 
       add constraint FKobmbir4poepy2bap27khl8833 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_item 
       add constraint FKi3e84fqfx6q011c7a5l112t21 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_operational_cost 
       add constraint FK7svm910idg3mgrvjrsx8lvltb 
       foreign key (operational_cost_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_formulation_operational_cost 
       add constraint FKd8c77n6yjfgi58futusu78lu8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_secondary_production 
       add constraint FK17dxbm4d7ndksy4ow8f73w9f9 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_secondary_production 
       add constraint FK46ap6yyh82qynkhb6ihcxi00w 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FKkiamt5i6moyn28kfs94mwa6ng 
       foreign key (apportionment_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_item 
       add constraint FKtc058kf5mybp2sttnr9jat0yr 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_item 
       add constraint FKc119rstpvgwpt1m5gejp9u5w0 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_item 
       add constraint FK1qsr5ru02gukicxoqilsov60m 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FK6wbdlrm6uxir2jr6wnm3bfsw6 
       foreign key (operational_cost_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKotrrx6er7ywp78vat7bae6m4j 
       foreign key (pallet_status_id) 
       references tb_pallet_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('Machado de Assis','machado@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('José de Alencar','jose@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('Monteiro Lobato','monteiro@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_PARAMETER');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_USER');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_GROUP');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_UNITY');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_PRODUCT');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_SECTOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_EMPLOYEE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_LABORCOSTTYPE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_OPERATIONALCOSTTYPE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_OCCURRENCE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_STATUSPALLET');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (2, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (3, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (4, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_unity(id,description)VALUES('RL','ROLO');
INSERT INTO tb_unity(id,description)VALUES('FD','FARDO');
INSERT INTO tb_unity(id,description)VALUES('SC','SACO');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO tb_pallet_status (NAME) VALUES('LIBERADO');
INSERT INTO tb_pallet_status (NAME) VALUES('EM ANALISE');
INSERT INTO tb_pallet_status (NAME) VALUES('CONDENADO');
INSERT INTO tb_pallet_status (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó - TIPO C',1,'LEITE EM PO - TIPO C',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó desnatado - TIPO C',1,'LEITE EM PO DESNATADO - TIPO C',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase do produto fracionado',0.700,'SACO MOINHO 10 KG',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 10 KG PARDO',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Fita para realizar o carimbo',1,'FITA DATADORA PARA FRACIONAMENTO',1,'',3,'RL',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Filme utilizado para envase do pallet',0.700,'FILME STRETCH',0.700,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Embalagem utilizada para o fracionamento',0.700,'BIPET MET PE 350X0.080 LEITE EM PO MOINHO 25X400',0.700,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó 25x400',1,'LEITE EM PO 25x400 MOINHO',1,'SC COM 25KG',5,'SC',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite concentrado',1,'LEITE CONCENTRADO',1,'KG',5,'KG',7,1,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-05-15','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-15','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-25','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,2,0.90,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,2,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-16','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-26','',0,5,2,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,3,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-16','',0,5,3,0.93,15000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-30','',0,5,3,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-02','',0,5,4,0.15,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,4,0.13,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,5,0.7,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-25','',0,5,6,31,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,6,32.52,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,11,0.97,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,12,0.87,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,13,9.30,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,14,17.38,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,15,25.10,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-15','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-01','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-15','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-25','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-05','',0,5,2,0.90,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,2,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-16','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-26','',0,5,2,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-05','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,3,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-16','',0,5,3,0.93,15000,0);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO',7,0,1);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,false,0,true);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,true,1,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,17,2500,false,1,true);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO DESNATADO',8,0,1);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,false,0,true);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,true,1,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,false,0,false);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO MOINHO 25X400',16,1,null);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,15,178,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,6,0.44,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,14,12.5,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,13,2.5,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,11,1000,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,7,10000,false,0,true);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE CONCENTRADO',17,0,0);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(4,1,3400,false,0,true);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(3,2);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(4,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(4,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Conta de Luz Ref:04/21','12548',5478.89);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Salario','xxxx',1545.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(9,3,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Salario','xxxx',1545.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(10,4,1);
INSERT INTO TB_PARAMETER(ID,COMPANY_NAME,PRODUCTION_ORDER_WITHOUT_STOCK,TYPE_COST_USED)VALUES(1,'Moinho Ltda',true,1);
INSERT INTO TB_FORMULATION_SECONDARY_PRODUCTION(FORMULATION_ID,PRODUCT_ID)VALUES(1,9);
INSERT INTO TB_FORMULATION_SECONDARY_PRODUCTION(FORMULATION_ID,PRODUCT_ID)VALUES(2,10);
update tb_product set AVERAGE_COST=COALESCE(ROUND((SELECT sum(entry*cost)  / sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),2),0);
update tb_product set COST_LAST_ENTRY=COALESCE(ROUND((SELECT sum(entry*cost)  / sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),2),0);
update tb_product set STOCK_BALANCE=COALESCE((SELECT sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),0);

    create table tb_cost_calculation (
       id int8 generated by default as identity,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        reference_month date,
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        stock_start_date date,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        level int4,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_item (
       quantity float8,
        raw_material boolean not null,
        round boolean not null,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_operational_cost (
       formulation_id int8 not null,
        operational_cost_type_id int8 not null,
        primary key (formulation_id, operational_cost_type_id)
    );

    create table tb_formulation_secondary_production (
       formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_pallet_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_parameter (
       id int8 not null,
        company_name varchar(255),
        production_order_without_stock boolean not null,
        type_cost_used int4,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date date,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        average_cost float8,
        cost_last_entry float8,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        raw_material_conversion float8,
        stock_balance float8,
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        date_cancel TIMESTAMP WITHOUT TIME ZONE,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_item (
       serie int4 not null,
        cost float8,
        quantity float8,
        raw_material boolean not null,
        stock_id int8,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        operational_cost_type_id int8 not null,
        production_order_id int8 not null,
        primary key (operational_cost_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        stock_id int8,
        unit_cost float8,
        production_order_id int8 not null,
        pallet_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date date,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_item 
       add constraint FKobmbir4poepy2bap27khl8833 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_item 
       add constraint FKi3e84fqfx6q011c7a5l112t21 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_operational_cost 
       add constraint FK7svm910idg3mgrvjrsx8lvltb 
       foreign key (operational_cost_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_formulation_operational_cost 
       add constraint FKd8c77n6yjfgi58futusu78lu8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_secondary_production 
       add constraint FK17dxbm4d7ndksy4ow8f73w9f9 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_secondary_production 
       add constraint FK46ap6yyh82qynkhb6ihcxi00w 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FKkiamt5i6moyn28kfs94mwa6ng 
       foreign key (apportionment_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_item 
       add constraint FKtc058kf5mybp2sttnr9jat0yr 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_item 
       add constraint FKc119rstpvgwpt1m5gejp9u5w0 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_item 
       add constraint FK1qsr5ru02gukicxoqilsov60m 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FK6wbdlrm6uxir2jr6wnm3bfsw6 
       foreign key (operational_cost_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKotrrx6er7ywp78vat7bae6m4j 
       foreign key (pallet_status_id) 
       references tb_pallet_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('Machado de Assis','machado@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('José de Alencar','jose@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('Monteiro Lobato','monteiro@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_PARAMETER');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_USER');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_GROUP');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_UNITY');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_PRODUCT');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_SECTOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_EMPLOYEE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_LABORCOSTTYPE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_OPERATIONALCOSTTYPE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_OCCURRENCE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_STATUSPALLET');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (2, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (3, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (4, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_unity(id,description)VALUES('RL','ROLO');
INSERT INTO tb_unity(id,description)VALUES('FD','FARDO');
INSERT INTO tb_unity(id,description)VALUES('SC','SACO');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO tb_pallet_status (NAME) VALUES('LIBERADO');
INSERT INTO tb_pallet_status (NAME) VALUES('EM ANALISE');
INSERT INTO tb_pallet_status (NAME) VALUES('CONDENADO');
INSERT INTO tb_pallet_status (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó - TIPO C',1,'LEITE EM PO - TIPO C',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó desnatado - TIPO C',1,'LEITE EM PO DESNATADO - TIPO C',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase do produto fracionado',0.700,'SACO MOINHO 10 KG',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 10 KG PARDO',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Fita para realizar o carimbo',1,'FITA DATADORA PARA FRACIONAMENTO',1,'',3,'RL',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Filme utilizado para envase do pallet',0.700,'FILME STRETCH',0.700,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Embalagem utilizada para o fracionamento',0.700,'BIPET MET PE 350X0.080 LEITE EM PO MOINHO 25X400',0.700,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó 25x400',1,'LEITE EM PO 25x400 MOINHO',1,'SC COM 25KG',5,'SC',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite concentrado',1,'LEITE CONCENTRADO',1,'KG',5,'KG',7,1,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-05-15','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-15','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-25','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,2,0.90,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,2,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-16','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-26','',0,5,2,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,3,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-16','',0,5,3,0.93,15000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-30','',0,5,3,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-02','',0,5,4,0.15,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,4,0.13,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,5,0.7,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-25','',0,5,6,31,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,6,32.52,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,11,0.97,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,12,0.87,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,13,9.30,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,14,17.38,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,15,25.10,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-15','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-01','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-15','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-25','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-05','',0,5,2,0.90,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,2,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-16','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-26','',0,5,2,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-05','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,3,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-16','',0,5,3,0.93,15000,0);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO',7,0,1);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,false,0,true);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,true,1,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,17,2500,false,1,true);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO DESNATADO',8,0,1);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,false,0,true);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,true,1,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,false,0,false);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO MOINHO 25X400',16,1,null);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,15,178,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,6,0.44,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,14,12.5,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,13,2.5,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,11,1000,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,7,10000,false,0,true);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE CONCENTRADO',17,0,0);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(4,1,3400,false,0,true);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(3,2);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(4,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(4,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Conta de Luz Ref:04/21','12548',5478.89);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Salario','xxxx',1545.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(9,3,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Salario','xxxx',1545.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(10,4,1);
INSERT INTO TB_PARAMETER(ID,COMPANY_NAME,PRODUCTION_ORDER_WITHOUT_STOCK,TYPE_COST_USED)VALUES(1,'Moinho Ltda',true,1);
INSERT INTO TB_FORMULATION_SECONDARY_PRODUCTION(FORMULATION_ID,PRODUCT_ID)VALUES(1,9);
INSERT INTO TB_FORMULATION_SECONDARY_PRODUCTION(FORMULATION_ID,PRODUCT_ID)VALUES(2,10);
update tb_product set AVERAGE_COST=COALESCE(ROUND((SELECT sum(entry*cost)  / sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),2),0);
update tb_product set COST_LAST_ENTRY=COALESCE(ROUND((SELECT sum(entry*cost)  / sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),2),0);
update tb_product set STOCK_BALANCE=COALESCE((SELECT sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),0);

    create table tb_cost_calculation (
       id int8 generated by default as identity,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        reference_month date,
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        stock_start_date date,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        level int4,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_item (
       quantity float8,
        raw_material boolean not null,
        round boolean not null,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_operational_cost (
       formulation_id int8 not null,
        operational_cost_type_id int8 not null,
        primary key (formulation_id, operational_cost_type_id)
    );

    create table tb_formulation_secondary_production (
       formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_pallet_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_parameter (
       id int8 not null,
        company_name varchar(255),
        production_order_without_stock boolean not null,
        type_cost_used int4,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date date,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        average_cost float8,
        cost_last_entry float8,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        raw_material_conversion float8,
        stock_balance float8,
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        date_cancel TIMESTAMP WITHOUT TIME ZONE,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_item (
       serie int4 not null,
        cost float8,
        quantity float8,
        raw_material boolean not null,
        stock_id int8,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        operational_cost_type_id int8 not null,
        production_order_id int8 not null,
        primary key (operational_cost_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        stock_id int8,
        unit_cost float8,
        production_order_id int8 not null,
        pallet_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date date,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_item 
       add constraint FKobmbir4poepy2bap27khl8833 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_item 
       add constraint FKi3e84fqfx6q011c7a5l112t21 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_operational_cost 
       add constraint FK7svm910idg3mgrvjrsx8lvltb 
       foreign key (operational_cost_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_formulation_operational_cost 
       add constraint FKd8c77n6yjfgi58futusu78lu8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_secondary_production 
       add constraint FK17dxbm4d7ndksy4ow8f73w9f9 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_secondary_production 
       add constraint FK46ap6yyh82qynkhb6ihcxi00w 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FKkiamt5i6moyn28kfs94mwa6ng 
       foreign key (apportionment_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_item 
       add constraint FKtc058kf5mybp2sttnr9jat0yr 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_item 
       add constraint FKc119rstpvgwpt1m5gejp9u5w0 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_item 
       add constraint FK1qsr5ru02gukicxoqilsov60m 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FK6wbdlrm6uxir2jr6wnm3bfsw6 
       foreign key (operational_cost_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKotrrx6er7ywp78vat7bae6m4j 
       foreign key (pallet_status_id) 
       references tb_pallet_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('Machado de Assis','machado@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('José de Alencar','jose@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('Monteiro Lobato','monteiro@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_PARAMETER');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_USER');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_GROUP');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_UNITY');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_PRODUCT');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_SECTOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_EMPLOYEE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_LABORCOSTTYPE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_OPERATIONALCOSTTYPE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_OCCURRENCE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_STATUSPALLET');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (2, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (3, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (4, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_unity(id,description)VALUES('RL','ROLO');
INSERT INTO tb_unity(id,description)VALUES('FD','FARDO');
INSERT INTO tb_unity(id,description)VALUES('SC','SACO');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO tb_pallet_status (NAME) VALUES('LIBERADO');
INSERT INTO tb_pallet_status (NAME) VALUES('EM ANALISE');
INSERT INTO tb_pallet_status (NAME) VALUES('CONDENADO');
INSERT INTO tb_pallet_status (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó - TIPO C',1,'LEITE EM PO - TIPO C',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó desnatado - TIPO C',1,'LEITE EM PO DESNATADO - TIPO C',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase do produto fracionado',0.700,'SACO MOINHO 10 KG',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 10 KG PARDO',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Fita para realizar o carimbo',1,'FITA DATADORA PARA FRACIONAMENTO',1,'',3,'RL',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Filme utilizado para envase do pallet',0.700,'FILME STRETCH',0.700,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Embalagem utilizada para o fracionamento',0.700,'BIPET MET PE 350X0.080 LEITE EM PO MOINHO 25X400',0.700,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó 25x400',1,'LEITE EM PO 25x400 MOINHO',1,'SC COM 25KG',5,'SC',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite concentrado',1,'LEITE CONCENTRADO',1,'KG',5,'KG',7,1,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-05-15','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-15','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-25','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,2,0.90,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,2,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-16','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-26','',0,5,2,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,3,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-16','',0,5,3,0.93,15000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-30','',0,5,3,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-02','',0,5,4,0.15,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,4,0.13,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,5,0.7,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-25','',0,5,6,31,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,6,32.52,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,11,0.97,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,12,0.87,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,13,9.30,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,14,17.38,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,15,25.10,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-15','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-01','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-15','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-25','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-05','',0,5,2,0.90,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,2,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-16','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-26','',0,5,2,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-05','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,3,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-16','',0,5,3,0.93,15000,0);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO',7,0,1);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,false,0,true);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,true,1,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,17,2500,false,1,true);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO DESNATADO',8,0,1);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,false,0,true);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,true,1,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,false,0,false);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO MOINHO 25X400',16,1,null);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,15,178,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,6,0.44,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,14,12.5,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,13,2.5,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,11,1000,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,7,10000,false,0,true);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE CONCENTRADO',17,0,0);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(4,1,3400,false,0,true);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(3,2);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(4,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(4,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Conta de Luz Ref:04/21','12548',5478.89);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Salario','xxxx',1545.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(9,3,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Salario','xxxx',1545.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(10,4,1);
INSERT INTO TB_PARAMETER(ID,COMPANY_NAME,PRODUCTION_ORDER_WITHOUT_STOCK,TYPE_COST_USED)VALUES(1,'Moinho Ltda',true,1);
INSERT INTO TB_FORMULATION_SECONDARY_PRODUCTION(FORMULATION_ID,PRODUCT_ID)VALUES(1,9);
INSERT INTO TB_FORMULATION_SECONDARY_PRODUCTION(FORMULATION_ID,PRODUCT_ID)VALUES(2,10);
update tb_product set AVERAGE_COST=COALESCE(ROUND((SELECT sum(entry*cost)  / sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),2),0);
update tb_product set COST_LAST_ENTRY=COALESCE(ROUND((SELECT sum(entry*cost)  / sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),2),0);
update tb_product set STOCK_BALANCE=COALESCE((SELECT sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),0);

    create table tb_cost_calculation (
       id int8 generated by default as identity,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        reference_month date,
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        stock_start_date date,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        level int4,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_item (
       quantity float8,
        raw_material boolean not null,
        round boolean not null,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_operational_cost (
       formulation_id int8 not null,
        operational_cost_type_id int8 not null,
        primary key (formulation_id, operational_cost_type_id)
    );

    create table tb_formulation_secondary_production (
       formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_pallet_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_parameter (
       id int8 not null,
        company_name varchar(255),
        production_order_without_stock boolean not null,
        type_cost_used int4,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date date,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        average_cost float8,
        cost_last_entry float8,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        raw_material_conversion float8,
        stock_balance float8,
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        date_cancel TIMESTAMP WITHOUT TIME ZONE,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_item (
       serie int4 not null,
        cost float8,
        quantity float8,
        raw_material boolean not null,
        stock_id int8,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        operational_cost_type_id int8 not null,
        production_order_id int8 not null,
        primary key (operational_cost_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        stock_id int8,
        unit_cost float8,
        production_order_id int8 not null,
        pallet_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date date,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_item 
       add constraint FKobmbir4poepy2bap27khl8833 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_item 
       add constraint FKi3e84fqfx6q011c7a5l112t21 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_operational_cost 
       add constraint FK7svm910idg3mgrvjrsx8lvltb 
       foreign key (operational_cost_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_formulation_operational_cost 
       add constraint FKd8c77n6yjfgi58futusu78lu8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_secondary_production 
       add constraint FK17dxbm4d7ndksy4ow8f73w9f9 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_secondary_production 
       add constraint FK46ap6yyh82qynkhb6ihcxi00w 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FKkiamt5i6moyn28kfs94mwa6ng 
       foreign key (apportionment_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_item 
       add constraint FKtc058kf5mybp2sttnr9jat0yr 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_item 
       add constraint FKc119rstpvgwpt1m5gejp9u5w0 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_item 
       add constraint FK1qsr5ru02gukicxoqilsov60m 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FK6wbdlrm6uxir2jr6wnm3bfsw6 
       foreign key (operational_cost_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKotrrx6er7ywp78vat7bae6m4j 
       foreign key (pallet_status_id) 
       references tb_pallet_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('Machado de Assis','machado@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('José de Alencar','jose@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('Monteiro Lobato','monteiro@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_PARAMETER');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_USER');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_GROUP');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_UNITY');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_PRODUCT');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_SECTOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_EMPLOYEE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_LABORCOSTTYPE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_OPERATIONALCOSTTYPE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_OCCURRENCE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_STATUSPALLET');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (2, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (3, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (4, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_unity(id,description)VALUES('RL','ROLO');
INSERT INTO tb_unity(id,description)VALUES('FD','FARDO');
INSERT INTO tb_unity(id,description)VALUES('SC','SACO');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO tb_pallet_status (NAME) VALUES('LIBERADO');
INSERT INTO tb_pallet_status (NAME) VALUES('EM ANALISE');
INSERT INTO tb_pallet_status (NAME) VALUES('CONDENADO');
INSERT INTO tb_pallet_status (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó - TIPO C',1,'LEITE EM PO - TIPO C',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó desnatado - TIPO C',1,'LEITE EM PO DESNATADO - TIPO C',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase do produto fracionado',0.700,'SACO MOINHO 10 KG',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 10 KG PARDO',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Fita para realizar o carimbo',1,'FITA DATADORA PARA FRACIONAMENTO',1,'',3,'RL',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Filme utilizado para envase do pallet',0.700,'FILME STRETCH',0.700,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Embalagem utilizada para o fracionamento',0.700,'BIPET MET PE 350X0.080 LEITE EM PO MOINHO 25X400',0.700,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó 25x400',1,'LEITE EM PO 25x400 MOINHO',1,'SC COM 25KG',5,'SC',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite concentrado',1,'LEITE CONCENTRADO',1,'KG',5,'KG',7,1,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-05-15','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-15','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-25','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,2,0.90,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,2,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-16','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-26','',0,5,2,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,3,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-16','',0,5,3,0.93,15000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-30','',0,5,3,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-02','',0,5,4,0.15,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,4,0.13,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,5,0.7,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-25','',0,5,6,31,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,6,32.52,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,11,0.97,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,12,0.87,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,13,9.30,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,14,17.38,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,15,25.10,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-15','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-01','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-15','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-25','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-05','',0,5,2,0.90,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,2,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-16','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-26','',0,5,2,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-05','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,3,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-16','',0,5,3,0.93,15000,0);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO',7,0,1);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,false,0,true);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,true,1,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,17,2500,false,1,true);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO DESNATADO',8,0,1);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,false,0,true);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,true,1,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,false,0,false);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO MOINHO 25X400',16,1,null);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,15,178,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,6,0.44,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,14,12.5,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,13,2.5,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,11,1000,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,7,10000,false,0,true);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE CONCENTRADO',17,0,0);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(4,1,3400,false,0,true);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(3,2);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(4,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(4,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Conta de Luz Ref:04/21','12548',5478.89);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Salario','xxxx',1545.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(9,3,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Salario','xxxx',1545.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(10,4,1);
INSERT INTO TB_PARAMETER(ID,COMPANY_NAME,PRODUCTION_ORDER_WITHOUT_STOCK,TYPE_COST_USED)VALUES(1,'Moinho Ltda',true,1);
INSERT INTO TB_FORMULATION_SECONDARY_PRODUCTION(FORMULATION_ID,PRODUCT_ID)VALUES(1,9);
INSERT INTO TB_FORMULATION_SECONDARY_PRODUCTION(FORMULATION_ID,PRODUCT_ID)VALUES(2,10);
update tb_product set AVERAGE_COST=COALESCE(ROUND((SELECT sum(entry*cost)  / sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),2),0);
update tb_product set COST_LAST_ENTRY=COALESCE(ROUND((SELECT sum(entry*cost)  / sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),2),0);
update tb_product set STOCK_BALANCE=COALESCE((SELECT sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),0);

    create table tb_cost_calculation (
       id int8 generated by default as identity,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        reference_month date,
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        stock_start_date date,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        level int4,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_item (
       quantity float8,
        raw_material boolean not null,
        round boolean not null,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_operational_cost (
       formulation_id int8 not null,
        operational_cost_type_id int8 not null,
        primary key (formulation_id, operational_cost_type_id)
    );

    create table tb_formulation_secondary_production (
       formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_pallet_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_parameter (
       id int8 not null,
        company_name varchar(255),
        production_order_without_stock boolean not null,
        type_cost_used int4,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date date,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        average_cost float8,
        cost_last_entry float8,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        raw_material_conversion float8,
        stock_balance float8,
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        date_cancel TIMESTAMP WITHOUT TIME ZONE,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_item (
       serie int4 not null,
        cost float8,
        quantity float8,
        raw_material boolean not null,
        stock_id int8,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        operational_cost_type_id int8 not null,
        production_order_id int8 not null,
        primary key (operational_cost_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        stock_id int8,
        unit_cost float8,
        production_order_id int8 not null,
        pallet_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date date,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_item 
       add constraint FKobmbir4poepy2bap27khl8833 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_item 
       add constraint FKi3e84fqfx6q011c7a5l112t21 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_operational_cost 
       add constraint FK7svm910idg3mgrvjrsx8lvltb 
       foreign key (operational_cost_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_formulation_operational_cost 
       add constraint FKd8c77n6yjfgi58futusu78lu8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_secondary_production 
       add constraint FK17dxbm4d7ndksy4ow8f73w9f9 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_secondary_production 
       add constraint FK46ap6yyh82qynkhb6ihcxi00w 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FKkiamt5i6moyn28kfs94mwa6ng 
       foreign key (apportionment_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_item 
       add constraint FKtc058kf5mybp2sttnr9jat0yr 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_item 
       add constraint FKc119rstpvgwpt1m5gejp9u5w0 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_item 
       add constraint FK1qsr5ru02gukicxoqilsov60m 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FK6wbdlrm6uxir2jr6wnm3bfsw6 
       foreign key (operational_cost_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKotrrx6er7ywp78vat7bae6m4j 
       foreign key (pallet_status_id) 
       references tb_pallet_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('Machado de Assis','machado@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('José de Alencar','jose@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('Monteiro Lobato','monteiro@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_PARAMETER');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_USER');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_GROUP');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_UNITY');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_PRODUCT');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_SECTOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_EMPLOYEE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_LABORCOSTTYPE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_OPERATIONALCOSTTYPE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_OCCURRENCE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_STATUSPALLET');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (2, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (3, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (4, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_unity(id,description)VALUES('RL','ROLO');
INSERT INTO tb_unity(id,description)VALUES('FD','FARDO');
INSERT INTO tb_unity(id,description)VALUES('SC','SACO');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO tb_pallet_status (NAME) VALUES('LIBERADO');
INSERT INTO tb_pallet_status (NAME) VALUES('EM ANALISE');
INSERT INTO tb_pallet_status (NAME) VALUES('CONDENADO');
INSERT INTO tb_pallet_status (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó - TIPO C',1,'LEITE EM PO - TIPO C',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó desnatado - TIPO C',1,'LEITE EM PO DESNATADO - TIPO C',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase do produto fracionado',0.700,'SACO MOINHO 10 KG',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 10 KG PARDO',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Fita para realizar o carimbo',1,'FITA DATADORA PARA FRACIONAMENTO',1,'',3,'RL',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Filme utilizado para envase do pallet',0.700,'FILME STRETCH',0.700,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Embalagem utilizada para o fracionamento',0.700,'BIPET MET PE 350X0.080 LEITE EM PO MOINHO 25X400',0.700,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó 25x400',1,'LEITE EM PO 25x400 MOINHO',1,'SC COM 25KG',5,'SC',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite concentrado',1,'LEITE CONCENTRADO',1,'KG',5,'KG',7,1,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-05-15','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-15','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-25','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,2,0.90,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,2,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-16','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-26','',0,5,2,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,3,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-16','',0,5,3,0.93,15000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-30','',0,5,3,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-02','',0,5,4,0.15,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,4,0.13,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,5,0.7,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-25','',0,5,6,31,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,6,32.52,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,11,0.97,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,12,0.87,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,13,9.30,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,14,17.38,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,15,25.10,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-15','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-01','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-15','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-25','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-05','',0,5,2,0.90,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,2,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-16','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-26','',0,5,2,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-05','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,3,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-16','',0,5,3,0.93,15000,0);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO',7,0,1);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,false,0,true);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,true,1,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,17,2500,false,1,true);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO DESNATADO',8,0,1);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,false,0,true);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,true,1,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,false,0,false);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO MOINHO 25X400',16,1,null);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,15,178,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,6,0.44,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,14,12.5,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,13,2.5,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,11,1000,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,7,10000,false,0,true);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE CONCENTRADO',17,0,0);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(4,1,3400,false,0,true);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(3,2);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(4,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(4,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Conta de Luz Ref:04/21','12548',5478.89);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Salario','xxxx',1545.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(9,3,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Salario','xxxx',1545.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(10,4,1);
INSERT INTO TB_PARAMETER(ID,COMPANY_NAME,PRODUCTION_ORDER_WITHOUT_STOCK,TYPE_COST_USED)VALUES(1,'Moinho Ltda',true,1);
INSERT INTO TB_FORMULATION_SECONDARY_PRODUCTION(FORMULATION_ID,PRODUCT_ID)VALUES(1,9);
INSERT INTO TB_FORMULATION_SECONDARY_PRODUCTION(FORMULATION_ID,PRODUCT_ID)VALUES(2,10);
update tb_product set AVERAGE_COST=COALESCE(ROUND((SELECT sum(entry*cost)  / sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),2),0);
update tb_product set COST_LAST_ENTRY=COALESCE(ROUND((SELECT sum(entry*cost)  / sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),2),0);
update tb_product set STOCK_BALANCE=COALESCE((SELECT sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),0);

    create table tb_cost_calculation (
       id int8 generated by default as identity,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        reference_month date,
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        stock_start_date date,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        level int4,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_item (
       quantity float8,
        raw_material boolean not null,
        round boolean not null,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_operational_cost (
       formulation_id int8 not null,
        operational_cost_type_id int8 not null,
        primary key (formulation_id, operational_cost_type_id)
    );

    create table tb_formulation_secondary_production (
       formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_pallet_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_parameter (
       id int8 not null,
        company_name varchar(255),
        production_order_without_stock boolean not null,
        type_cost_used int4,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date date,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        average_cost float8,
        cost_last_entry float8,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        raw_material_conversion float8,
        stock_balance float8,
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        date_cancel TIMESTAMP WITHOUT TIME ZONE,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_item (
       serie int4 not null,
        cost float8,
        quantity float8,
        raw_material boolean not null,
        stock_id int8,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        operational_cost_type_id int8 not null,
        production_order_id int8 not null,
        primary key (operational_cost_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        stock_id int8,
        unit_cost float8,
        production_order_id int8 not null,
        pallet_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date date,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_item 
       add constraint FKobmbir4poepy2bap27khl8833 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_item 
       add constraint FKi3e84fqfx6q011c7a5l112t21 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_operational_cost 
       add constraint FK7svm910idg3mgrvjrsx8lvltb 
       foreign key (operational_cost_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_formulation_operational_cost 
       add constraint FKd8c77n6yjfgi58futusu78lu8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_secondary_production 
       add constraint FK17dxbm4d7ndksy4ow8f73w9f9 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_secondary_production 
       add constraint FK46ap6yyh82qynkhb6ihcxi00w 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FKkiamt5i6moyn28kfs94mwa6ng 
       foreign key (apportionment_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_item 
       add constraint FKtc058kf5mybp2sttnr9jat0yr 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_item 
       add constraint FKc119rstpvgwpt1m5gejp9u5w0 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_item 
       add constraint FK1qsr5ru02gukicxoqilsov60m 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FK6wbdlrm6uxir2jr6wnm3bfsw6 
       foreign key (operational_cost_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKotrrx6er7ywp78vat7bae6m4j 
       foreign key (pallet_status_id) 
       references tb_pallet_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('Machado de Assis','machado@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('José de Alencar','jose@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('Monteiro Lobato','monteiro@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_PARAMETER');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_USER');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_GROUP');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_UNITY');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_PRODUCT');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_SECTOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_EMPLOYEE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_LABORCOSTTYPE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_OPERATIONALCOSTTYPE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_OCCURRENCE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_STATUSPALLET');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (2, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (3, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (4, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_unity(id,description)VALUES('RL','ROLO');
INSERT INTO tb_unity(id,description)VALUES('FD','FARDO');
INSERT INTO tb_unity(id,description)VALUES('SC','SACO');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO tb_pallet_status (NAME) VALUES('LIBERADO');
INSERT INTO tb_pallet_status (NAME) VALUES('EM ANALISE');
INSERT INTO tb_pallet_status (NAME) VALUES('CONDENADO');
INSERT INTO tb_pallet_status (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó - TIPO C',1,'LEITE EM PO - TIPO C',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó desnatado - TIPO C',1,'LEITE EM PO DESNATADO - TIPO C',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase do produto fracionado',0.700,'SACO MOINHO 10 KG',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 10 KG PARDO',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Fita para realizar o carimbo',1,'FITA DATADORA PARA FRACIONAMENTO',1,'',3,'RL',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Filme utilizado para envase do pallet',0.700,'FILME STRETCH',0.700,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Embalagem utilizada para o fracionamento',0.700,'BIPET MET PE 350X0.080 LEITE EM PO MOINHO 25X400',0.700,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó 25x400',1,'LEITE EM PO 25x400 MOINHO',1,'SC COM 25KG',5,'SC',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite concentrado',1,'LEITE CONCENTRADO',1,'KG',5,'KG',7,1,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-05-15','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-15','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-25','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,2,0.90,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,2,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-16','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-26','',0,5,2,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,3,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-16','',0,5,3,0.93,15000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-30','',0,5,3,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-02','',0,5,4,0.15,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,4,0.13,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,5,0.7,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-25','',0,5,6,31,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,6,32.52,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,11,0.97,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,12,0.87,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,13,9.30,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,14,17.38,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,15,25.10,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-15','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-01','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-15','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-25','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-05','',0,5,2,0.90,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,2,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-16','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-26','',0,5,2,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-05','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,3,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-16','',0,5,3,0.93,15000,0);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO',7,0,1);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,false,0,true);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,true,1,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,17,2500,false,1,true);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO DESNATADO',8,0,1);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,false,0,true);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,true,1,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,false,0,false);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO MOINHO 25X400',16,1,null);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,15,178,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,6,0.44,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,14,12.5,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,13,2.5,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,11,1000,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,7,10000,false,0,true);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE CONCENTRADO',17,0,0);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(4,1,3400,false,0,true);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(3,2);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(4,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(4,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Conta de Luz Ref:04/21','12548',5478.89);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Salario','xxxx',1545.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(9,3,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Salario','xxxx',1545.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(10,4,1);
INSERT INTO TB_PARAMETER(ID,COMPANY_NAME,PRODUCTION_ORDER_WITHOUT_STOCK,TYPE_COST_USED)VALUES(1,'Moinho Ltda',true,1);
INSERT INTO TB_FORMULATION_SECONDARY_PRODUCTION(FORMULATION_ID,PRODUCT_ID)VALUES(1,9);
INSERT INTO TB_FORMULATION_SECONDARY_PRODUCTION(FORMULATION_ID,PRODUCT_ID)VALUES(2,10);
update tb_product set AVERAGE_COST=COALESCE(ROUND((SELECT sum(entry*cost)  / sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),2),0);
update tb_product set COST_LAST_ENTRY=COALESCE(ROUND((SELECT sum(entry*cost)  / sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),2),0);
update tb_product set STOCK_BALANCE=COALESCE((SELECT sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),0);

    create table tb_cost_calculation (
       id int8 generated by default as identity,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        reference_month date,
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        stock_start_date date,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        level int4,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_item (
       quantity float8,
        raw_material boolean not null,
        round boolean not null,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_operational_cost (
       formulation_id int8 not null,
        operational_cost_type_id int8 not null,
        primary key (formulation_id, operational_cost_type_id)
    );

    create table tb_formulation_secondary_production (
       formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_pallet_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_parameter (
       id int8 not null,
        company_name varchar(255),
        production_order_without_stock boolean not null,
        type_cost_used int4,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date date,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        average_cost float8,
        cost_last_entry float8,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        raw_material_conversion float8,
        stock_balance float8,
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        date_cancel TIMESTAMP WITHOUT TIME ZONE,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_item (
       serie int4 not null,
        cost float8,
        quantity float8,
        raw_material boolean not null,
        stock_id int8,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        operational_cost_type_id int8 not null,
        production_order_id int8 not null,
        primary key (operational_cost_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        stock_id int8,
        unit_cost float8,
        production_order_id int8 not null,
        pallet_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date date,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_item 
       add constraint FKobmbir4poepy2bap27khl8833 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_item 
       add constraint FKi3e84fqfx6q011c7a5l112t21 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_operational_cost 
       add constraint FK7svm910idg3mgrvjrsx8lvltb 
       foreign key (operational_cost_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_formulation_operational_cost 
       add constraint FKd8c77n6yjfgi58futusu78lu8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_secondary_production 
       add constraint FK17dxbm4d7ndksy4ow8f73w9f9 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_secondary_production 
       add constraint FK46ap6yyh82qynkhb6ihcxi00w 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FKkiamt5i6moyn28kfs94mwa6ng 
       foreign key (apportionment_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_item 
       add constraint FKtc058kf5mybp2sttnr9jat0yr 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_item 
       add constraint FKc119rstpvgwpt1m5gejp9u5w0 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_item 
       add constraint FK1qsr5ru02gukicxoqilsov60m 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FK6wbdlrm6uxir2jr6wnm3bfsw6 
       foreign key (operational_cost_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKotrrx6er7ywp78vat7bae6m4j 
       foreign key (pallet_status_id) 
       references tb_pallet_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('Machado de Assis','machado@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('José de Alencar','jose@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('Monteiro Lobato','monteiro@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_PARAMETER');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_USER');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_GROUP');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_UNITY');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_PRODUCT');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_SECTOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_EMPLOYEE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_LABORCOSTTYPE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_OPERATIONALCOSTTYPE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_OCCURRENCE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_STATUSPALLET');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (2, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (3, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (4, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_unity(id,description)VALUES('RL','ROLO');
INSERT INTO tb_unity(id,description)VALUES('FD','FARDO');
INSERT INTO tb_unity(id,description)VALUES('SC','SACO');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO tb_pallet_status (NAME) VALUES('LIBERADO');
INSERT INTO tb_pallet_status (NAME) VALUES('EM ANALISE');
INSERT INTO tb_pallet_status (NAME) VALUES('CONDENADO');
INSERT INTO tb_pallet_status (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó - TIPO C',1,'LEITE EM PO - TIPO C',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó desnatado - TIPO C',1,'LEITE EM PO DESNATADO - TIPO C',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase do produto fracionado',0.700,'SACO MOINHO 10 KG',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 10 KG PARDO',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Fita para realizar o carimbo',1,'FITA DATADORA PARA FRACIONAMENTO',1,'',3,'RL',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Filme utilizado para envase do pallet',0.700,'FILME STRETCH',0.700,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Embalagem utilizada para o fracionamento',0.700,'BIPET MET PE 350X0.080 LEITE EM PO MOINHO 25X400',0.700,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó 25x400',1,'LEITE EM PO 25x400 MOINHO',1,'SC COM 25KG',5,'SC',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite concentrado',1,'LEITE CONCENTRADO',1,'KG',5,'KG',7,1,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-05-15','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-15','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-25','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,2,0.90,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,2,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-16','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-26','',0,5,2,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,3,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-16','',0,5,3,0.93,15000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-30','',0,5,3,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-02','',0,5,4,0.15,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,4,0.13,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,5,0.7,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-25','',0,5,6,31,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,6,32.52,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,11,0.97,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,12,0.87,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,13,9.30,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,14,17.38,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,15,25.10,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-15','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-01','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-15','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-25','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-05','',0,5,2,0.90,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,2,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-16','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-26','',0,5,2,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-05','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,3,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-16','',0,5,3,0.93,15000,0);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO',7,0,1);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,false,0,true);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,true,1,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,17,2500,false,1,true);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO DESNATADO',8,0,1);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,false,0,true);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,true,1,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,false,0,false);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO MOINHO 25X400',16,1,null);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,15,178,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,6,0.44,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,14,12.5,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,13,2.5,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,11,1000,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,7,10000,false,0,true);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE CONCENTRADO',17,0,0);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(4,1,3400,false,0,true);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(3,2);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(4,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(4,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Conta de Luz Ref:04/21','12548',5478.89);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Salario','xxxx',1545.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(9,3,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Salario','xxxx',1545.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(10,4,1);
INSERT INTO TB_PARAMETER(ID,COMPANY_NAME,PRODUCTION_ORDER_WITHOUT_STOCK,TYPE_COST_USED)VALUES(1,'Moinho Ltda',true,1);
INSERT INTO TB_FORMULATION_SECONDARY_PRODUCTION(FORMULATION_ID,PRODUCT_ID)VALUES(1,9);
INSERT INTO TB_FORMULATION_SECONDARY_PRODUCTION(FORMULATION_ID,PRODUCT_ID)VALUES(2,10);
update tb_product set AVERAGE_COST=COALESCE(ROUND((SELECT sum(entry*cost)  / sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),2),0);
update tb_product set COST_LAST_ENTRY=COALESCE(ROUND((SELECT sum(entry*cost)  / sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),2),0);
update tb_product set STOCK_BALANCE=COALESCE((SELECT sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),0);

    create table tb_cost_calculation (
       id int8 generated by default as identity,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        reference_month date,
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        stock_start_date date,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        level int4,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_item (
       quantity float8,
        raw_material boolean not null,
        round boolean not null,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_operational_cost (
       formulation_id int8 not null,
        operational_cost_type_id int8 not null,
        primary key (formulation_id, operational_cost_type_id)
    );

    create table tb_formulation_secondary_production (
       formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_pallet_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_parameter (
       id int8 not null,
        company_name varchar(255),
        production_order_without_stock boolean not null,
        type_cost_used int4,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date date,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        average_cost float8,
        cost_last_entry float8,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        raw_material_conversion float8,
        stock_balance float8,
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        date_cancel TIMESTAMP WITHOUT TIME ZONE,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_item (
       serie int4 not null,
        cost float8,
        quantity float8,
        raw_material boolean not null,
        stock_id int8,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        operational_cost_type_id int8 not null,
        production_order_id int8 not null,
        primary key (operational_cost_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        stock_id int8,
        unit_cost float8,
        production_order_id int8 not null,
        pallet_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date date,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_item 
       add constraint FKobmbir4poepy2bap27khl8833 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_item 
       add constraint FKi3e84fqfx6q011c7a5l112t21 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_operational_cost 
       add constraint FK7svm910idg3mgrvjrsx8lvltb 
       foreign key (operational_cost_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_formulation_operational_cost 
       add constraint FKd8c77n6yjfgi58futusu78lu8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_secondary_production 
       add constraint FK17dxbm4d7ndksy4ow8f73w9f9 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_secondary_production 
       add constraint FK46ap6yyh82qynkhb6ihcxi00w 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FKkiamt5i6moyn28kfs94mwa6ng 
       foreign key (apportionment_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_item 
       add constraint FKtc058kf5mybp2sttnr9jat0yr 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_item 
       add constraint FKc119rstpvgwpt1m5gejp9u5w0 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_item 
       add constraint FK1qsr5ru02gukicxoqilsov60m 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FK6wbdlrm6uxir2jr6wnm3bfsw6 
       foreign key (operational_cost_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKotrrx6er7ywp78vat7bae6m4j 
       foreign key (pallet_status_id) 
       references tb_pallet_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('Machado de Assis','machado@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('José de Alencar','jose@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('Monteiro Lobato','monteiro@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_PARAMETER');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_USER');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_GROUP');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_UNITY');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_PRODUCT');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_SECTOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_EMPLOYEE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_LABORCOSTTYPE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_OPERATIONALCOSTTYPE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_OCCURRENCE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_STATUSPALLET');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (2, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (3, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (4, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_unity(id,description)VALUES('RL','ROLO');
INSERT INTO tb_unity(id,description)VALUES('FD','FARDO');
INSERT INTO tb_unity(id,description)VALUES('SC','SACO');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO tb_pallet_status (NAME) VALUES('LIBERADO');
INSERT INTO tb_pallet_status (NAME) VALUES('EM ANALISE');
INSERT INTO tb_pallet_status (NAME) VALUES('CONDENADO');
INSERT INTO tb_pallet_status (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó - TIPO C',1,'LEITE EM PO - TIPO C',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó desnatado - TIPO C',1,'LEITE EM PO DESNATADO - TIPO C',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase do produto fracionado',0.700,'SACO MOINHO 10 KG',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 10 KG PARDO',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Fita para realizar o carimbo',1,'FITA DATADORA PARA FRACIONAMENTO',1,'',3,'RL',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Filme utilizado para envase do pallet',0.700,'FILME STRETCH',0.700,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Embalagem utilizada para o fracionamento',0.700,'BIPET MET PE 350X0.080 LEITE EM PO MOINHO 25X400',0.700,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó 25x400',1,'LEITE EM PO 25x400 MOINHO',1,'SC COM 25KG',5,'SC',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite concentrado',1,'LEITE CONCENTRADO',1,'KG',5,'KG',7,1,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-05-15','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-15','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-25','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,2,0.90,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,2,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-16','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-26','',0,5,2,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,3,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-16','',0,5,3,0.93,15000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-30','',0,5,3,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-02','',0,5,4,0.15,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,4,0.13,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,5,0.7,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-25','',0,5,6,31,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,6,32.52,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,11,0.97,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,12,0.87,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,13,9.30,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,14,17.38,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,15,25.10,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-15','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-01','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-15','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-25','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-05','',0,5,2,0.90,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,2,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-16','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-26','',0,5,2,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-05','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,3,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-16','',0,5,3,0.93,15000,0);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO',7,0,1);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,false,0,true);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,true,1,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,17,2500,false,1,true);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO DESNATADO',8,0,1);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,false,0,true);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,true,1,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,false,0,false);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO MOINHO 25X400',16,1,null);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,15,178,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,6,0.44,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,14,12.5,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,13,2.5,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,11,1000,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,7,10000,false,0,true);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE CONCENTRADO',17,0,0);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(4,1,3400,false,0,true);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(3,2);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(4,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(4,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Conta de Luz Ref:04/21','12548',5478.89);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Salario','xxxx',1545.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(9,3,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Salario','xxxx',1545.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(10,4,1);
INSERT INTO TB_PARAMETER(ID,COMPANY_NAME,PRODUCTION_ORDER_WITHOUT_STOCK,TYPE_COST_USED)VALUES(1,'Moinho Ltda',true,1);
INSERT INTO TB_FORMULATION_SECONDARY_PRODUCTION(FORMULATION_ID,PRODUCT_ID)VALUES(1,9);
INSERT INTO TB_FORMULATION_SECONDARY_PRODUCTION(FORMULATION_ID,PRODUCT_ID)VALUES(2,10);
update tb_product set AVERAGE_COST=COALESCE(ROUND((SELECT sum(entry*cost)  / sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),2),0);
update tb_product set COST_LAST_ENTRY=COALESCE(ROUND((SELECT sum(entry*cost)  / sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),2),0);
update tb_product set STOCK_BALANCE=COALESCE((SELECT sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),0);

    create table tb_cost_calculation (
       id int8 generated by default as identity,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        reference_month date,
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        stock_start_date date,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        level int4,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_item (
       quantity float8,
        raw_material boolean not null,
        round boolean not null,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_operational_cost (
       formulation_id int8 not null,
        operational_cost_type_id int8 not null,
        primary key (formulation_id, operational_cost_type_id)
    );

    create table tb_formulation_secondary_production (
       formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_pallet_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_parameter (
       id int8 not null,
        company_name varchar(255),
        production_order_without_stock boolean not null,
        type_cost_used int4,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date date,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        average_cost float8,
        cost_last_entry float8,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        raw_material_conversion float8,
        stock_balance float8,
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        date_cancel TIMESTAMP WITHOUT TIME ZONE,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_item (
       serie int4 not null,
        cost float8,
        quantity float8,
        raw_material boolean not null,
        stock_id int8,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        operational_cost_type_id int8 not null,
        production_order_id int8 not null,
        primary key (operational_cost_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        stock_id int8,
        unit_cost float8,
        production_order_id int8 not null,
        pallet_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date date,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_item 
       add constraint FKobmbir4poepy2bap27khl8833 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_item 
       add constraint FKi3e84fqfx6q011c7a5l112t21 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_operational_cost 
       add constraint FK7svm910idg3mgrvjrsx8lvltb 
       foreign key (operational_cost_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_formulation_operational_cost 
       add constraint FKd8c77n6yjfgi58futusu78lu8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_secondary_production 
       add constraint FK17dxbm4d7ndksy4ow8f73w9f9 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_secondary_production 
       add constraint FK46ap6yyh82qynkhb6ihcxi00w 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FKkiamt5i6moyn28kfs94mwa6ng 
       foreign key (apportionment_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_item 
       add constraint FKtc058kf5mybp2sttnr9jat0yr 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_item 
       add constraint FKc119rstpvgwpt1m5gejp9u5w0 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_item 
       add constraint FK1qsr5ru02gukicxoqilsov60m 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FK6wbdlrm6uxir2jr6wnm3bfsw6 
       foreign key (operational_cost_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKotrrx6er7ywp78vat7bae6m4j 
       foreign key (pallet_status_id) 
       references tb_pallet_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('Machado de Assis','machado@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('José de Alencar','jose@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('Monteiro Lobato','monteiro@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_PARAMETER');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_USER');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_GROUP');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_UNITY');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_PRODUCT');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_SECTOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_EMPLOYEE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_LABORCOSTTYPE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_OPERATIONALCOSTTYPE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_OCCURRENCE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_STATUSPALLET');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (2, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (3, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (4, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_unity(id,description)VALUES('RL','ROLO');
INSERT INTO tb_unity(id,description)VALUES('FD','FARDO');
INSERT INTO tb_unity(id,description)VALUES('SC','SACO');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO tb_pallet_status (NAME) VALUES('LIBERADO');
INSERT INTO tb_pallet_status (NAME) VALUES('EM ANALISE');
INSERT INTO tb_pallet_status (NAME) VALUES('CONDENADO');
INSERT INTO tb_pallet_status (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó - TIPO C',1,'LEITE EM PO - TIPO C',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó desnatado - TIPO C',1,'LEITE EM PO DESNATADO - TIPO C',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase do produto fracionado',0.700,'SACO MOINHO 10 KG',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 10 KG PARDO',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Fita para realizar o carimbo',1,'FITA DATADORA PARA FRACIONAMENTO',1,'',3,'RL',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Filme utilizado para envase do pallet',0.700,'FILME STRETCH',0.700,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Embalagem utilizada para o fracionamento',0.700,'BIPET MET PE 350X0.080 LEITE EM PO MOINHO 25X400',0.700,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó 25x400',1,'LEITE EM PO 25x400 MOINHO',1,'SC COM 25KG',5,'SC',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite concentrado',1,'LEITE CONCENTRADO',1,'KG',5,'KG',7,1,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-05-15','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-15','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-25','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,2,0.90,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,2,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-16','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-26','',0,5,2,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,3,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-16','',0,5,3,0.93,15000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-30','',0,5,3,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-02','',0,5,4,0.15,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,4,0.13,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,5,0.7,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-25','',0,5,6,31,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,6,32.52,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,11,0.97,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,12,0.87,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,13,9.30,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,14,17.38,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,15,25.10,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-15','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-01','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-15','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-25','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-05','',0,5,2,0.90,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,2,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-16','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-26','',0,5,2,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-05','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,3,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-16','',0,5,3,0.93,15000,0);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO',7,0,1);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,false,0,true);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,true,1,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,17,2500,false,1,true);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO DESNATADO',8,0,1);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,false,0,true);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,true,1,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,false,0,false);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO MOINHO 25X400',16,1,null);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,15,178,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,6,0.44,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,14,12.5,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,13,2.5,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,11,1000,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,7,10000,false,0,true);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE CONCENTRADO',17,0,0);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(4,1,3400,false,0,true);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(3,2);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(4,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(4,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Conta de Luz Ref:04/21','12548',5478.89);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Salario','xxxx',1545.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(9,3,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Salario','xxxx',1545.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(10,4,1);
INSERT INTO TB_PARAMETER(ID,COMPANY_NAME,PRODUCTION_ORDER_WITHOUT_STOCK,TYPE_COST_USED)VALUES(1,'Moinho Ltda',true,1);
INSERT INTO TB_FORMULATION_SECONDARY_PRODUCTION(FORMULATION_ID,PRODUCT_ID)VALUES(1,9);
INSERT INTO TB_FORMULATION_SECONDARY_PRODUCTION(FORMULATION_ID,PRODUCT_ID)VALUES(2,10);
update tb_product set AVERAGE_COST=COALESCE(ROUND((SELECT sum(entry*cost)  / sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),2),0);
update tb_product set COST_LAST_ENTRY=COALESCE(ROUND((SELECT sum(entry*cost)  / sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),2),0);
update tb_product set STOCK_BALANCE=COALESCE((SELECT sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),0);

    create table tb_cost_calculation (
       id int8 generated by default as identity,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        reference_month date,
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        stock_start_date date,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        level int4,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_item (
       quantity float8,
        raw_material boolean not null,
        round boolean not null,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_operational_cost (
       formulation_id int8 not null,
        operational_cost_type_id int8 not null,
        primary key (formulation_id, operational_cost_type_id)
    );

    create table tb_formulation_secondary_production (
       formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_pallet_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_parameter (
       id int8 not null,
        company_name varchar(255),
        production_order_without_stock boolean not null,
        type_cost_used int4,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date date,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        average_cost float8,
        cost_last_entry float8,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        raw_material_conversion float8,
        stock_balance float8,
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        date_cancel TIMESTAMP WITHOUT TIME ZONE,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_item (
       serie int4 not null,
        cost float8,
        quantity float8,
        raw_material boolean not null,
        stock_id int8,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        operational_cost_type_id int8 not null,
        production_order_id int8 not null,
        primary key (operational_cost_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        stock_id int8,
        unit_cost float8,
        production_order_id int8 not null,
        pallet_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date date,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_item 
       add constraint FKobmbir4poepy2bap27khl8833 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_item 
       add constraint FKi3e84fqfx6q011c7a5l112t21 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_operational_cost 
       add constraint FK7svm910idg3mgrvjrsx8lvltb 
       foreign key (operational_cost_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_formulation_operational_cost 
       add constraint FKd8c77n6yjfgi58futusu78lu8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_secondary_production 
       add constraint FK17dxbm4d7ndksy4ow8f73w9f9 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_secondary_production 
       add constraint FK46ap6yyh82qynkhb6ihcxi00w 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FKkiamt5i6moyn28kfs94mwa6ng 
       foreign key (apportionment_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_item 
       add constraint FKtc058kf5mybp2sttnr9jat0yr 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_item 
       add constraint FKc119rstpvgwpt1m5gejp9u5w0 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_item 
       add constraint FK1qsr5ru02gukicxoqilsov60m 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FK6wbdlrm6uxir2jr6wnm3bfsw6 
       foreign key (operational_cost_type_id) 
       references tb_operational_cost_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKotrrx6er7ywp78vat7bae6m4j 
       foreign key (pallet_status_id) 
       references tb_pallet_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('Machado de Assis','machado@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('José de Alencar','jose@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_user (name,email,password) VALUES ('Monteiro Lobato','monteiro@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_PARAMETER');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_USER');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_GROUP');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_UNITY');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_PRODUCT');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_SECTOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_EMPLOYEE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_LABORCOSTTYPE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_OPERATIONALCOSTTYPE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_OCCURRENCE');
INSERT INTO tb_role (authority) VALUES ('ROLE_REGISTRATION_STATUSPALLET');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (2, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (3, 1);
INSERT INTO tb_user_role (user_id, role_id) VALUES (4, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_unity(id,description)VALUES('RL','ROLO');
INSERT INTO tb_unity(id,description)VALUES('FD','FARDO');
INSERT INTO tb_unity(id,description)VALUES('SC','SACO');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_operational_cost_type (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO tb_pallet_status (NAME) VALUES('LIBERADO');
INSERT INTO tb_pallet_status (NAME) VALUES('EM ANALISE');
INSERT INTO tb_pallet_status (NAME) VALUES('CONDENADO');
INSERT INTO tb_pallet_status (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó - TIPO C',1,'LEITE EM PO - TIPO C',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó desnatado - TIPO C',1,'LEITE EM PO DESNATADO - TIPO C',1,'SC COM 25KG',5,'KG',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase do produto fracionado',0.700,'SACO MOINHO 10 KG',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 10 KG PARDO',0.700,'',3,'UN',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Fita para realizar o carimbo',1,'FITA DATADORA PARA FRACIONAMENTO',1,'',3,'RL',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Filme utilizado para envase do pallet',0.700,'FILME STRETCH',0.700,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Embalagem utilizada para o fracionamento',0.700,'BIPET MET PE 350X0.080 LEITE EM PO MOINHO 25X400',0.700,'',3,'KG',0,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite em pó 25x400',1,'LEITE EM PO 25x400 MOINHO',1,'SC COM 25KG',5,'SC',365,1,0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days,RAW_MATERIAL_CONVERSION,AVERAGE_COST )VALUES('Leite concentrado',1,'LEITE CONCENTRADO',1,'KG',5,'KG',7,1,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-05-15','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-15','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-25','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,2,0.90,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,2,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-16','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-26','',0,5,2,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-10','',0,5,3,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-16','',0,5,3,0.93,15000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-30','',0,5,3,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-02','',0,5,4,0.15,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,4,0.13,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-05','',0,5,5,0.7,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-25','',0,5,6,31,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,6,32.52,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,11,0.97,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,12,0.87,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,13,9.30,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,14,17.38,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-06-01','',0,5,15,25.10,9999,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-15','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-01','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-15','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-25','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-05','',0,5,2,0.90,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,2,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-16','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-26','',0,5,2,0.95,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-05','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-10','',0,5,3,0.91,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES('2021-07-16','',0,5,3,0.93,15000,0);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO',7,0,1);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,false,0,true);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,true,1,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,17,2500,false,1,true);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO DESNATADO',8,0,1);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,false,0,true);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,true,1,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,false,0,false);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE EM PO MOINHO 25X400',16,1,null);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,15,178,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,6,0.44,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,14,12.5,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,13,2.5,false,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,11,1000,true,0,false);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(3,7,10000,false,0,true);
INSERT INTO TB_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID,TYPE,LEVEL) VALUES(1000,'LEITE CONCENTRADO',17,0,0);
INSERT INTO TB_FORMULATION_ITEM(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(4,1,3400,false,0,true);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO TB_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST(FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(1,3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(2,3);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,1);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,2);
INSERT INTO TB_FORMULATION_OPERATIONAL_COST (FORMULATION_ID,OPERATIONAL_COST_TYPE_ID) VALUES(4,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(3,2);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(4,1);
INSERT INTO TB_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(4,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Conta de Luz Ref:04/21','12548',5478.89);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-15','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Salario','xxxx',1545.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(9,3,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES('2021-07-30','Ref: Vale Salario','xxxx',1545.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(10,4,1);
INSERT INTO TB_PARAMETER(ID,COMPANY_NAME,PRODUCTION_ORDER_WITHOUT_STOCK,TYPE_COST_USED)VALUES(1,'Moinho Ltda',true,1);
INSERT INTO TB_FORMULATION_SECONDARY_PRODUCTION(FORMULATION_ID,PRODUCT_ID)VALUES(1,9);
INSERT INTO TB_FORMULATION_SECONDARY_PRODUCTION(FORMULATION_ID,PRODUCT_ID)VALUES(2,10);
update tb_product set AVERAGE_COST=COALESCE(ROUND((SELECT sum(entry*cost)  / sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),2),0);
update tb_product set COST_LAST_ENTRY=COALESCE(ROUND((SELECT sum(entry*cost)  / sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),2),0);
update tb_product set STOCK_BALANCE=COALESCE((SELECT sum(entry)  FROM TB_STOCK_MOVEMENT WHERE TB_STOCK_MOVEMENT .PRODUCT_ID=tb_product.ID group by product_id),0);
