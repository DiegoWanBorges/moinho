
    create table tb_apportionment_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_apportionment (
       formulation_id int8 not null,
        apportionment_type_id int8 not null,
        primary key (formulation_id, apportionment_type_id)
    );

    create table tb_formulation_items (
       quantity float8,
        raw_material int4,
        round int4,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_produced_product_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_items (
       serie int4 not null,
        consumption_number int8,
        cost float8,
        date_cancel timestamp,
        quantity float8,
        raw_material int4,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        apportionment_type_id int8 not null,
        production_order_id int8 not null,
        primary key (apportionment_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        production_order_id int8 not null,
        produced_product_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_apportionment 
       add constraint FK98m819ug1rlrccqxwpsmlrqba 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_formulation_apportionment 
       add constraint FK1f5978k8v0do9hcosldtpd2d4 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FK3intmd72m1k6geg7m95fl0yrv 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FKgq0cr4hsjcb389gbapcmha3g 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FK1swv3nwn622ymx2shn3jibi9p 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FK5y3ghn02gfvrupsvjxy71rate 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_items 
       add constraint FKb3crswrhd2flsakbqjhe429br 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FKprj6b03csty7u0pdyvd1g4q7t 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKalg39mmkn8iq425su8uhwxb40 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKmi7bwsq6e5ssfxy0veu8iwxxc 
       foreign key (produced_product_status_id) 
       references tb_produced_product_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_OPERATOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_USER');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('LIBERADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('EM ANALISE');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('CONDENADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-01T20:50:07.12345Z','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T20:50:07.12345Z','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-25T20:50:07.12345Z','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,2,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,2,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-26T20:50:07.12345Z','',0,5,2,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,3,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,3,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T20:50:07.12345Z','',0,5,3,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-02T20:50:07.12345Z','',0,5,4,0.15,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,4,0.13,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,5,19,100,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO',7);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,0,0,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO DESNATADO',8);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,0,0,0);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Luz Ref:04/21','12548',10045.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);

    create table tb_apportionment_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_apportionment (
       formulation_id int8 not null,
        apportionment_type_id int8 not null,
        primary key (formulation_id, apportionment_type_id)
    );

    create table tb_formulation_items (
       quantity float8,
        raw_material int4,
        round int4,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_produced_product_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_items (
       serie int4 not null,
        consumption_number int8,
        cost float8,
        date_cancel timestamp,
        quantity float8,
        raw_material int4,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        apportionment_type_id int8 not null,
        production_order_id int8 not null,
        primary key (apportionment_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        production_order_id int8 not null,
        produced_product_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_apportionment 
       add constraint FK98m819ug1rlrccqxwpsmlrqba 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_formulation_apportionment 
       add constraint FK1f5978k8v0do9hcosldtpd2d4 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FK3intmd72m1k6geg7m95fl0yrv 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FKgq0cr4hsjcb389gbapcmha3g 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FK1swv3nwn622ymx2shn3jibi9p 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FK5y3ghn02gfvrupsvjxy71rate 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_items 
       add constraint FKb3crswrhd2flsakbqjhe429br 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FKprj6b03csty7u0pdyvd1g4q7t 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKalg39mmkn8iq425su8uhwxb40 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKmi7bwsq6e5ssfxy0veu8iwxxc 
       foreign key (produced_product_status_id) 
       references tb_produced_product_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_OPERATOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_USER');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('LIBERADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('EM ANALISE');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('CONDENADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-01T20:50:07.12345Z','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T20:50:07.12345Z','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-25T20:50:07.12345Z','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,2,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,2,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-26T20:50:07.12345Z','',0,5,2,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,3,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,3,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T20:50:07.12345Z','',0,5,3,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-02T20:50:07.12345Z','',0,5,4,0.15,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,4,0.13,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,5,19,100,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO',7);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,0,0,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO DESNATADO',8);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,0,0,0);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Luz Ref:04/21','12548',10045.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);

    create table tb_apportionment_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_apportionment (
       formulation_id int8 not null,
        apportionment_type_id int8 not null,
        primary key (formulation_id, apportionment_type_id)
    );

    create table tb_formulation_items (
       quantity float8,
        raw_material int4,
        round int4,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_produced_product_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_items (
       serie int4 not null,
        consumption_number int8,
        cost float8,
        date_cancel timestamp,
        quantity float8,
        raw_material int4,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        apportionment_type_id int8 not null,
        production_order_id int8 not null,
        primary key (apportionment_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        production_order_id int8 not null,
        produced_product_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_apportionment 
       add constraint FK98m819ug1rlrccqxwpsmlrqba 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_formulation_apportionment 
       add constraint FK1f5978k8v0do9hcosldtpd2d4 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FK3intmd72m1k6geg7m95fl0yrv 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FKgq0cr4hsjcb389gbapcmha3g 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FK1swv3nwn622ymx2shn3jibi9p 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FK5y3ghn02gfvrupsvjxy71rate 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_items 
       add constraint FKb3crswrhd2flsakbqjhe429br 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FKprj6b03csty7u0pdyvd1g4q7t 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKalg39mmkn8iq425su8uhwxb40 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKmi7bwsq6e5ssfxy0veu8iwxxc 
       foreign key (produced_product_status_id) 
       references tb_produced_product_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_OPERATOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_USER');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('LIBERADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('EM ANALISE');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('CONDENADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-01T20:50:07.12345Z','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T20:50:07.12345Z','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-25T20:50:07.12345Z','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,2,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,2,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-26T20:50:07.12345Z','',0,5,2,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,3,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,3,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T20:50:07.12345Z','',0,5,3,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-02T20:50:07.12345Z','',0,5,4,0.15,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,4,0.13,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,5,19,100,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO',7);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,0,0,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO DESNATADO',8);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,0,0,0);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Luz Ref:04/21','12548',10045.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);

    create table tb_apportionment_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_apportionment (
       formulation_id int8 not null,
        apportionment_type_id int8 not null,
        primary key (formulation_id, apportionment_type_id)
    );

    create table tb_formulation_items (
       quantity float8,
        raw_material int4,
        round int4,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_produced_product_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_items (
       serie int4 not null,
        consumption_number int8,
        cost float8,
        date_cancel timestamp,
        quantity float8,
        raw_material int4,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        apportionment_type_id int8 not null,
        production_order_id int8 not null,
        primary key (apportionment_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        production_order_id int8 not null,
        produced_product_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_apportionment 
       add constraint FK98m819ug1rlrccqxwpsmlrqba 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_formulation_apportionment 
       add constraint FK1f5978k8v0do9hcosldtpd2d4 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FK3intmd72m1k6geg7m95fl0yrv 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FKgq0cr4hsjcb389gbapcmha3g 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FK1swv3nwn622ymx2shn3jibi9p 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FK5y3ghn02gfvrupsvjxy71rate 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_items 
       add constraint FKb3crswrhd2flsakbqjhe429br 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FKprj6b03csty7u0pdyvd1g4q7t 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKalg39mmkn8iq425su8uhwxb40 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKmi7bwsq6e5ssfxy0veu8iwxxc 
       foreign key (produced_product_status_id) 
       references tb_produced_product_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_OPERATOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_USER');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('LIBERADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('EM ANALISE');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('CONDENADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-01T20:50:07.12345Z','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T20:50:07.12345Z','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-25T20:50:07.12345Z','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,2,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,2,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-26T20:50:07.12345Z','',0,5,2,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,3,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,3,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T20:50:07.12345Z','',0,5,3,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-02T20:50:07.12345Z','',0,5,4,0.15,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,4,0.13,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,5,19,100,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO',7);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,0,0,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO DESNATADO',8);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,0,0,0);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Luz Ref:04/21','12548',10045.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);

    create table tb_apportionment_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_apportionment (
       formulation_id int8 not null,
        apportionment_type_id int8 not null,
        primary key (formulation_id, apportionment_type_id)
    );

    create table tb_formulation_items (
       quantity float8,
        raw_material int4,
        round int4,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_produced_product_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_items (
       serie int4 not null,
        consumption_number int8,
        cost float8,
        date_cancel timestamp,
        quantity float8,
        raw_material int4,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        apportionment_type_id int8 not null,
        production_order_id int8 not null,
        primary key (apportionment_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        production_order_id int8 not null,
        produced_product_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_apportionment 
       add constraint FK98m819ug1rlrccqxwpsmlrqba 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_formulation_apportionment 
       add constraint FK1f5978k8v0do9hcosldtpd2d4 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FK3intmd72m1k6geg7m95fl0yrv 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FKgq0cr4hsjcb389gbapcmha3g 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FK1swv3nwn622ymx2shn3jibi9p 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FK5y3ghn02gfvrupsvjxy71rate 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_items 
       add constraint FKb3crswrhd2flsakbqjhe429br 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FKprj6b03csty7u0pdyvd1g4q7t 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKalg39mmkn8iq425su8uhwxb40 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKmi7bwsq6e5ssfxy0veu8iwxxc 
       foreign key (produced_product_status_id) 
       references tb_produced_product_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_OPERATOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_USER');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('LIBERADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('EM ANALISE');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('CONDENADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-01T20:50:07.12345Z','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T20:50:07.12345Z','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-25T20:50:07.12345Z','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,2,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,2,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-26T20:50:07.12345Z','',0,5,2,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,3,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,3,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T20:50:07.12345Z','',0,5,3,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-02T20:50:07.12345Z','',0,5,4,0.15,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,4,0.13,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,5,19,100,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO',7);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,0,0,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO DESNATADO',8);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,0,0,0);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Luz Ref:04/21','12548',10045.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);

    create table tb_apportionment_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_apportionment (
       formulation_id int8 not null,
        apportionment_type_id int8 not null,
        primary key (formulation_id, apportionment_type_id)
    );

    create table tb_formulation_items (
       quantity float8,
        raw_material int4,
        round int4,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_produced_product_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_items (
       serie int4 not null,
        consumption_number int8,
        cost float8,
        date_cancel timestamp,
        quantity float8,
        raw_material int4,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        apportionment_type_id int8 not null,
        production_order_id int8 not null,
        primary key (apportionment_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        production_order_id int8 not null,
        produced_product_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_apportionment 
       add constraint FK98m819ug1rlrccqxwpsmlrqba 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_formulation_apportionment 
       add constraint FK1f5978k8v0do9hcosldtpd2d4 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FK3intmd72m1k6geg7m95fl0yrv 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FKgq0cr4hsjcb389gbapcmha3g 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FK1swv3nwn622ymx2shn3jibi9p 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FK5y3ghn02gfvrupsvjxy71rate 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_items 
       add constraint FKb3crswrhd2flsakbqjhe429br 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FKprj6b03csty7u0pdyvd1g4q7t 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKalg39mmkn8iq425su8uhwxb40 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKmi7bwsq6e5ssfxy0veu8iwxxc 
       foreign key (produced_product_status_id) 
       references tb_produced_product_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_OPERATOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_USER');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('LIBERADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('EM ANALISE');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('CONDENADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-01T20:50:07.12345Z','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T20:50:07.12345Z','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-25T20:50:07.12345Z','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,2,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,2,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-26T20:50:07.12345Z','',0,5,2,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,3,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,3,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T20:50:07.12345Z','',0,5,3,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-02T20:50:07.12345Z','',0,5,4,0.15,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,4,0.13,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,5,19,100,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO',7);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,0,0,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO DESNATADO',8);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,0,0,0);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Luz Ref:04/21','12548',10045.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);

    create table tb_apportionment_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_apportionment (
       formulation_id int8 not null,
        apportionment_type_id int8 not null,
        primary key (formulation_id, apportionment_type_id)
    );

    create table tb_formulation_items (
       quantity float8,
        raw_material int4,
        round int4,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_produced_product_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_items (
       serie int4 not null,
        consumption_number int8,
        cost float8,
        date_cancel timestamp,
        quantity float8,
        raw_material int4,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        apportionment_type_id int8 not null,
        production_order_id int8 not null,
        primary key (apportionment_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        production_order_id int8 not null,
        produced_product_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_apportionment 
       add constraint FK98m819ug1rlrccqxwpsmlrqba 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_formulation_apportionment 
       add constraint FK1f5978k8v0do9hcosldtpd2d4 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FK3intmd72m1k6geg7m95fl0yrv 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FKgq0cr4hsjcb389gbapcmha3g 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FK1swv3nwn622ymx2shn3jibi9p 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FK5y3ghn02gfvrupsvjxy71rate 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_items 
       add constraint FKb3crswrhd2flsakbqjhe429br 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FKprj6b03csty7u0pdyvd1g4q7t 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKalg39mmkn8iq425su8uhwxb40 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKmi7bwsq6e5ssfxy0veu8iwxxc 
       foreign key (produced_product_status_id) 
       references tb_produced_product_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_OPERATOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_USER');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('LIBERADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('EM ANALISE');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('CONDENADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-01T20:50:07.12345Z','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T20:50:07.12345Z','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-25T20:50:07.12345Z','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,2,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,2,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-26T20:50:07.12345Z','',0,5,2,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,3,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,3,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T20:50:07.12345Z','',0,5,3,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-02T20:50:07.12345Z','',0,5,4,0.15,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,4,0.13,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,5,19,100,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO',7);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,0,0,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO DESNATADO',8);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,0,0,0);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Luz Ref:04/21','12548',10045.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);

    create table tb_apportionment_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_apportionment (
       formulation_id int8 not null,
        apportionment_type_id int8 not null,
        primary key (formulation_id, apportionment_type_id)
    );

    create table tb_formulation_items (
       quantity float8,
        raw_material int4,
        round int4,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_produced_product_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_items (
       serie int4 not null,
        consumption_number int8,
        cost float8,
        date_cancel timestamp,
        quantity float8,
        raw_material int4,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        apportionment_type_id int8 not null,
        production_order_id int8 not null,
        primary key (apportionment_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        production_order_id int8 not null,
        produced_product_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_apportionment 
       add constraint FK98m819ug1rlrccqxwpsmlrqba 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_formulation_apportionment 
       add constraint FK1f5978k8v0do9hcosldtpd2d4 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FK3intmd72m1k6geg7m95fl0yrv 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FKgq0cr4hsjcb389gbapcmha3g 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FK1swv3nwn622ymx2shn3jibi9p 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FK5y3ghn02gfvrupsvjxy71rate 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_items 
       add constraint FKb3crswrhd2flsakbqjhe429br 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FKprj6b03csty7u0pdyvd1g4q7t 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKalg39mmkn8iq425su8uhwxb40 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKmi7bwsq6e5ssfxy0veu8iwxxc 
       foreign key (produced_product_status_id) 
       references tb_produced_product_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_OPERATOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_USER');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('LIBERADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('EM ANALISE');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('CONDENADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-01T20:50:07.12345Z','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T20:50:07.12345Z','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-25T20:50:07.12345Z','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,2,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,2,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-26T20:50:07.12345Z','',0,5,2,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,3,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,3,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T20:50:07.12345Z','',0,5,3,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-02T20:50:07.12345Z','',0,5,4,0.15,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,4,0.13,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,5,19,100,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO',7);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,0,0,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO DESNATADO',8);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,0,0,0);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Luz Ref:04/21','12548',10045.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);

    create table tb_apportionment_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_apportionment (
       formulation_id int8 not null,
        apportionment_type_id int8 not null,
        primary key (formulation_id, apportionment_type_id)
    );

    create table tb_formulation_items (
       quantity float8,
        raw_material int4,
        round int4,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_produced_product_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_items (
       serie int4 not null,
        consumption_number int8,
        cost float8,
        date_cancel timestamp,
        quantity float8,
        raw_material int4,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        apportionment_type_id int8 not null,
        production_order_id int8 not null,
        primary key (apportionment_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        production_order_id int8 not null,
        produced_product_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_apportionment 
       add constraint FK98m819ug1rlrccqxwpsmlrqba 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_formulation_apportionment 
       add constraint FK1f5978k8v0do9hcosldtpd2d4 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FK3intmd72m1k6geg7m95fl0yrv 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FKgq0cr4hsjcb389gbapcmha3g 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FK1swv3nwn622ymx2shn3jibi9p 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FK5y3ghn02gfvrupsvjxy71rate 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_items 
       add constraint FKb3crswrhd2flsakbqjhe429br 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FKprj6b03csty7u0pdyvd1g4q7t 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKalg39mmkn8iq425su8uhwxb40 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKmi7bwsq6e5ssfxy0veu8iwxxc 
       foreign key (produced_product_status_id) 
       references tb_produced_product_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_OPERATOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_USER');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('LIBERADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('EM ANALISE');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('CONDENADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-01T20:50:07.12345Z','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T20:50:07.12345Z','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-25T20:50:07.12345Z','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,2,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,2,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-26T20:50:07.12345Z','',0,5,2,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,3,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,3,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T20:50:07.12345Z','',0,5,3,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-02T20:50:07.12345Z','',0,5,4,0.15,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,4,0.13,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,5,19,100,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO',7);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,0,0,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO DESNATADO',8);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,0,0,0);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Luz Ref:04/21','12548',10045.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);

    create table tb_apportionment_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_apportionment (
       formulation_id int8 not null,
        apportionment_type_id int8 not null,
        primary key (formulation_id, apportionment_type_id)
    );

    create table tb_formulation_items (
       quantity float8,
        raw_material int4,
        round int4,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_produced_product_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_items (
       serie int4 not null,
        consumption_number int8,
        cost float8,
        date_cancel timestamp,
        quantity float8,
        raw_material int4,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        apportionment_type_id int8 not null,
        production_order_id int8 not null,
        primary key (apportionment_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        production_order_id int8 not null,
        produced_product_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_apportionment 
       add constraint FK98m819ug1rlrccqxwpsmlrqba 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_formulation_apportionment 
       add constraint FK1f5978k8v0do9hcosldtpd2d4 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FK3intmd72m1k6geg7m95fl0yrv 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FKgq0cr4hsjcb389gbapcmha3g 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FK1swv3nwn622ymx2shn3jibi9p 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FK5y3ghn02gfvrupsvjxy71rate 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_items 
       add constraint FKb3crswrhd2flsakbqjhe429br 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FKprj6b03csty7u0pdyvd1g4q7t 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKalg39mmkn8iq425su8uhwxb40 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKmi7bwsq6e5ssfxy0veu8iwxxc 
       foreign key (produced_product_status_id) 
       references tb_produced_product_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_OPERATOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_USER');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('LIBERADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('EM ANALISE');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('CONDENADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-01T20:50:07.12345Z','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T20:50:07.12345Z','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-25T20:50:07.12345Z','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,2,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,2,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-26T20:50:07.12345Z','',0,5,2,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,3,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,3,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T20:50:07.12345Z','',0,5,3,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-02T20:50:07.12345Z','',0,5,4,0.15,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,4,0.13,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,5,19,100,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO',7);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,0,0,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO DESNATADO',8);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,0,0,0);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Luz Ref:04/21','12548',10045.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);

    create table tb_apportionment_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_apportionment (
       formulation_id int8 not null,
        apportionment_type_id int8 not null,
        primary key (formulation_id, apportionment_type_id)
    );

    create table tb_formulation_items (
       quantity float8,
        raw_material int4,
        round int4,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_produced_product_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_items (
       serie int4 not null,
        consumption_number int8,
        cost float8,
        date_cancel timestamp,
        quantity float8,
        raw_material int4,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        apportionment_type_id int8 not null,
        production_order_id int8 not null,
        primary key (apportionment_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        production_order_id int8 not null,
        produced_product_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_apportionment 
       add constraint FK98m819ug1rlrccqxwpsmlrqba 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_formulation_apportionment 
       add constraint FK1f5978k8v0do9hcosldtpd2d4 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FK3intmd72m1k6geg7m95fl0yrv 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FKgq0cr4hsjcb389gbapcmha3g 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FK1swv3nwn622ymx2shn3jibi9p 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FK5y3ghn02gfvrupsvjxy71rate 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_items 
       add constraint FKb3crswrhd2flsakbqjhe429br 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FKprj6b03csty7u0pdyvd1g4q7t 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKalg39mmkn8iq425su8uhwxb40 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKmi7bwsq6e5ssfxy0veu8iwxxc 
       foreign key (produced_product_status_id) 
       references tb_produced_product_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_OPERATOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_USER');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('LIBERADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('EM ANALISE');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('CONDENADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-01T20:50:07.12345Z','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T20:50:07.12345Z','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-25T20:50:07.12345Z','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,2,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,2,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-26T20:50:07.12345Z','',0,5,2,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,3,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,3,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T20:50:07.12345Z','',0,5,3,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-02T20:50:07.12345Z','',0,5,4,0.15,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,4,0.13,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,5,19,100,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO',7);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,0,0,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO DESNATADO',8);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,0,0,0);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Luz Ref:04/21','12548',10045.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);

    create table tb_apportionment_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_apportionment (
       formulation_id int8 not null,
        apportionment_type_id int8 not null,
        primary key (formulation_id, apportionment_type_id)
    );

    create table tb_formulation_items (
       quantity float8,
        raw_material int4,
        round int4,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_produced_product_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_items (
       serie int4 not null,
        consumption_number int8,
        cost float8,
        date_cancel timestamp,
        quantity float8,
        raw_material int4,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        apportionment_type_id int8 not null,
        production_order_id int8 not null,
        primary key (apportionment_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        production_order_id int8 not null,
        produced_product_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_apportionment 
       add constraint FK98m819ug1rlrccqxwpsmlrqba 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_formulation_apportionment 
       add constraint FK1f5978k8v0do9hcosldtpd2d4 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FK3intmd72m1k6geg7m95fl0yrv 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FKgq0cr4hsjcb389gbapcmha3g 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FK1swv3nwn622ymx2shn3jibi9p 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FK5y3ghn02gfvrupsvjxy71rate 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_items 
       add constraint FKb3crswrhd2flsakbqjhe429br 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FKprj6b03csty7u0pdyvd1g4q7t 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKalg39mmkn8iq425su8uhwxb40 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKmi7bwsq6e5ssfxy0veu8iwxxc 
       foreign key (produced_product_status_id) 
       references tb_produced_product_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_OPERATOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_USER');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('LIBERADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('EM ANALISE');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('CONDENADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-01T20:50:07.12345Z','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T20:50:07.12345Z','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-25T20:50:07.12345Z','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,2,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,2,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-26T20:50:07.12345Z','',0,5,2,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,3,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,3,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T20:50:07.12345Z','',0,5,3,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-02T20:50:07.12345Z','',0,5,4,0.15,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,4,0.13,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,5,19,100,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO',7);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,0,0,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO DESNATADO',8);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,0,0,0);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Luz Ref:04/21','12548',10045.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);

    create table tb_apportionment_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_apportionment (
       formulation_id int8 not null,
        apportionment_type_id int8 not null,
        primary key (formulation_id, apportionment_type_id)
    );

    create table tb_formulation_items (
       quantity float8,
        raw_material int4,
        round int4,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_produced_product_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_items (
       serie int4 not null,
        consumption_number int8,
        cost float8,
        date_cancel timestamp,
        quantity float8,
        raw_material int4,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        apportionment_type_id int8 not null,
        production_order_id int8 not null,
        primary key (apportionment_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        production_order_id int8 not null,
        produced_product_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_apportionment 
       add constraint FK98m819ug1rlrccqxwpsmlrqba 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_formulation_apportionment 
       add constraint FK1f5978k8v0do9hcosldtpd2d4 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FK3intmd72m1k6geg7m95fl0yrv 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FKgq0cr4hsjcb389gbapcmha3g 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FK1swv3nwn622ymx2shn3jibi9p 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FK5y3ghn02gfvrupsvjxy71rate 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_items 
       add constraint FKb3crswrhd2flsakbqjhe429br 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FKprj6b03csty7u0pdyvd1g4q7t 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKalg39mmkn8iq425su8uhwxb40 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKmi7bwsq6e5ssfxy0veu8iwxxc 
       foreign key (produced_product_status_id) 
       references tb_produced_product_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_OPERATOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_USER');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('LIBERADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('EM ANALISE');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('CONDENADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-01T20:50:07.12345Z','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T20:50:07.12345Z','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-25T20:50:07.12345Z','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,2,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,2,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-26T20:50:07.12345Z','',0,5,2,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,3,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,3,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T20:50:07.12345Z','',0,5,3,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-02T20:50:07.12345Z','',0,5,4,0.15,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,4,0.13,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,5,19,100,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO',7);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,0,0,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO DESNATADO',8);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,0,0,0);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Luz Ref:04/21','12548',10045.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);

    create table tb_apportionment_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_apportionment (
       formulation_id int8 not null,
        apportionment_type_id int8 not null,
        primary key (formulation_id, apportionment_type_id)
    );

    create table tb_formulation_items (
       quantity float8,
        raw_material int4,
        round int4,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_produced_product_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_items (
       serie int4 not null,
        consumption_number int8,
        cost float8,
        date_cancel timestamp,
        quantity float8,
        raw_material int4,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        apportionment_type_id int8 not null,
        production_order_id int8 not null,
        primary key (apportionment_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        production_order_id int8 not null,
        produced_product_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_apportionment 
       add constraint FK98m819ug1rlrccqxwpsmlrqba 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_formulation_apportionment 
       add constraint FK1f5978k8v0do9hcosldtpd2d4 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FK3intmd72m1k6geg7m95fl0yrv 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FKgq0cr4hsjcb389gbapcmha3g 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FK1swv3nwn622ymx2shn3jibi9p 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FK5y3ghn02gfvrupsvjxy71rate 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_items 
       add constraint FKb3crswrhd2flsakbqjhe429br 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FKprj6b03csty7u0pdyvd1g4q7t 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKalg39mmkn8iq425su8uhwxb40 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKmi7bwsq6e5ssfxy0veu8iwxxc 
       foreign key (produced_product_status_id) 
       references tb_produced_product_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_OPERATOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_USER');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('LIBERADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('EM ANALISE');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('CONDENADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-01T20:50:07.12345Z','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T20:50:07.12345Z','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-25T20:50:07.12345Z','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,2,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,2,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-26T20:50:07.12345Z','',0,5,2,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,3,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,3,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T20:50:07.12345Z','',0,5,3,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-02T20:50:07.12345Z','',0,5,4,0.15,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,4,0.13,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,5,19,100,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO',7);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,0,0,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO DESNATADO',8);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,0,0,0);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Luz Ref:04/21','12548',10045.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);

    create table tb_apportionment_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_apportionment (
       formulation_id int8 not null,
        apportionment_type_id int8 not null,
        primary key (formulation_id, apportionment_type_id)
    );

    create table tb_formulation_items (
       quantity float8,
        raw_material int4,
        round int4,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_produced_product_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_items (
       serie int4 not null,
        consumption_number int8,
        cost float8,
        date_cancel timestamp,
        quantity float8,
        raw_material int4,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        apportionment_type_id int8 not null,
        production_order_id int8 not null,
        primary key (apportionment_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        production_order_id int8 not null,
        produced_product_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_apportionment 
       add constraint FK98m819ug1rlrccqxwpsmlrqba 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_formulation_apportionment 
       add constraint FK1f5978k8v0do9hcosldtpd2d4 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FK3intmd72m1k6geg7m95fl0yrv 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FKgq0cr4hsjcb389gbapcmha3g 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FK1swv3nwn622ymx2shn3jibi9p 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FK5y3ghn02gfvrupsvjxy71rate 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_items 
       add constraint FKb3crswrhd2flsakbqjhe429br 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FKprj6b03csty7u0pdyvd1g4q7t 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKalg39mmkn8iq425su8uhwxb40 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKmi7bwsq6e5ssfxy0veu8iwxxc 
       foreign key (produced_product_status_id) 
       references tb_produced_product_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_OPERATOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_USER');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('LIBERADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('EM ANALISE');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('CONDENADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-01T20:50:07.12345Z','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T20:50:07.12345Z','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-25T20:50:07.12345Z','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,2,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,2,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-26T20:50:07.12345Z','',0,5,2,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,3,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,3,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T20:50:07.12345Z','',0,5,3,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-02T20:50:07.12345Z','',0,5,4,0.15,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,4,0.13,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,5,19,100,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO',7);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,0,0,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO DESNATADO',8);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,0,0,0);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Luz Ref:04/21','12548',10045.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);

    create table tb_apportionment_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_apportionment (
       formulation_id int8 not null,
        apportionment_type_id int8 not null,
        primary key (formulation_id, apportionment_type_id)
    );

    create table tb_formulation_items (
       quantity float8,
        raw_material int4,
        round int4,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_produced_product_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_items (
       serie int4 not null,
        consumption_number int8,
        cost float8,
        date_cancel timestamp,
        quantity float8,
        raw_material int4,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        apportionment_type_id int8 not null,
        production_order_id int8 not null,
        primary key (apportionment_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        production_order_id int8 not null,
        produced_product_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_apportionment 
       add constraint FK98m819ug1rlrccqxwpsmlrqba 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_formulation_apportionment 
       add constraint FK1f5978k8v0do9hcosldtpd2d4 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FK3intmd72m1k6geg7m95fl0yrv 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FKgq0cr4hsjcb389gbapcmha3g 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FK1swv3nwn622ymx2shn3jibi9p 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FK5y3ghn02gfvrupsvjxy71rate 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_items 
       add constraint FKb3crswrhd2flsakbqjhe429br 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FKprj6b03csty7u0pdyvd1g4q7t 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKalg39mmkn8iq425su8uhwxb40 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKmi7bwsq6e5ssfxy0veu8iwxxc 
       foreign key (produced_product_status_id) 
       references tb_produced_product_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_OPERATOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_USER');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('LIBERADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('EM ANALISE');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('CONDENADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-01T20:50:07.12345Z','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T20:50:07.12345Z','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-25T20:50:07.12345Z','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,2,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,2,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-26T20:50:07.12345Z','',0,5,2,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,3,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,3,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T20:50:07.12345Z','',0,5,3,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-02T20:50:07.12345Z','',0,5,4,0.15,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,4,0.13,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,5,19,100,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO',7);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,0,0,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO DESNATADO',8);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,0,0,0);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Luz Ref:04/21','12548',10045.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);

    create table tb_apportionment_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_apportionment (
       formulation_id int8 not null,
        apportionment_type_id int8 not null,
        primary key (formulation_id, apportionment_type_id)
    );

    create table tb_formulation_items (
       quantity float8,
        raw_material int4,
        round int4,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_produced_product_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_items (
       serie int4 not null,
        consumption_number int8,
        cost float8,
        date_cancel timestamp,
        quantity float8,
        raw_material int4,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        apportionment_type_id int8 not null,
        production_order_id int8 not null,
        primary key (apportionment_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        production_order_id int8 not null,
        produced_product_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_apportionment 
       add constraint FK98m819ug1rlrccqxwpsmlrqba 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_formulation_apportionment 
       add constraint FK1f5978k8v0do9hcosldtpd2d4 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FK3intmd72m1k6geg7m95fl0yrv 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FKgq0cr4hsjcb389gbapcmha3g 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FK1swv3nwn622ymx2shn3jibi9p 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FK5y3ghn02gfvrupsvjxy71rate 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_items 
       add constraint FKb3crswrhd2flsakbqjhe429br 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FKprj6b03csty7u0pdyvd1g4q7t 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKalg39mmkn8iq425su8uhwxb40 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKmi7bwsq6e5ssfxy0veu8iwxxc 
       foreign key (produced_product_status_id) 
       references tb_produced_product_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_OPERATOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_USER');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('LIBERADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('EM ANALISE');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('CONDENADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-01T20:50:07.12345Z','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T20:50:07.12345Z','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-25T20:50:07.12345Z','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,2,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,2,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-26T20:50:07.12345Z','',0,5,2,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,3,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,3,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T20:50:07.12345Z','',0,5,3,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-02T20:50:07.12345Z','',0,5,4,0.15,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,4,0.13,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,5,19,100,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO',7);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,0,0,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO DESNATADO',8);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,0,0,0);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Luz Ref:04/21','12548',10045.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);

    create table tb_apportionment_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_apportionment (
       formulation_id int8 not null,
        apportionment_type_id int8 not null,
        primary key (formulation_id, apportionment_type_id)
    );

    create table tb_formulation_items (
       quantity float8,
        raw_material int4,
        round int4,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_produced_product_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_items (
       serie int4 not null,
        consumption_number int8,
        cost float8,
        date_cancel timestamp,
        quantity float8,
        raw_material int4,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        apportionment_type_id int8 not null,
        production_order_id int8 not null,
        primary key (apportionment_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        production_order_id int8 not null,
        produced_product_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_apportionment 
       add constraint FK98m819ug1rlrccqxwpsmlrqba 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_formulation_apportionment 
       add constraint FK1f5978k8v0do9hcosldtpd2d4 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FK3intmd72m1k6geg7m95fl0yrv 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FKgq0cr4hsjcb389gbapcmha3g 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FK1swv3nwn622ymx2shn3jibi9p 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FK5y3ghn02gfvrupsvjxy71rate 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_items 
       add constraint FKb3crswrhd2flsakbqjhe429br 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FKprj6b03csty7u0pdyvd1g4q7t 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKalg39mmkn8iq425su8uhwxb40 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKmi7bwsq6e5ssfxy0veu8iwxxc 
       foreign key (produced_product_status_id) 
       references tb_produced_product_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_OPERATOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_USER');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('LIBERADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('EM ANALISE');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('CONDENADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-01T20:50:07.12345Z','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T20:50:07.12345Z','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-25T20:50:07.12345Z','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,2,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,2,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-26T20:50:07.12345Z','',0,5,2,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,3,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,3,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T20:50:07.12345Z','',0,5,3,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-02T20:50:07.12345Z','',0,5,4,0.15,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,4,0.13,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,5,19,100,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO',7);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,0,0,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO DESNATADO',8);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,0,0,0);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Luz Ref:04/21','12548',10045.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);

    create table tb_apportionment_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_apportionment (
       formulation_id int8 not null,
        apportionment_type_id int8 not null,
        primary key (formulation_id, apportionment_type_id)
    );

    create table tb_formulation_items (
       quantity float8,
        raw_material int4,
        round int4,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_produced_product_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_items (
       serie int4 not null,
        consumption_number int8,
        cost float8,
        date_cancel timestamp,
        quantity float8,
        raw_material int4,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        apportionment_type_id int8 not null,
        production_order_id int8 not null,
        primary key (apportionment_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        production_order_id int8 not null,
        produced_product_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_apportionment 
       add constraint FK98m819ug1rlrccqxwpsmlrqba 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_formulation_apportionment 
       add constraint FK1f5978k8v0do9hcosldtpd2d4 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FK3intmd72m1k6geg7m95fl0yrv 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FKgq0cr4hsjcb389gbapcmha3g 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FK1swv3nwn622ymx2shn3jibi9p 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FK5y3ghn02gfvrupsvjxy71rate 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_items 
       add constraint FKb3crswrhd2flsakbqjhe429br 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FKprj6b03csty7u0pdyvd1g4q7t 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKalg39mmkn8iq425su8uhwxb40 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKmi7bwsq6e5ssfxy0veu8iwxxc 
       foreign key (produced_product_status_id) 
       references tb_produced_product_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_OPERATOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_USER');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('LIBERADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('EM ANALISE');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('CONDENADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-01T20:50:07.12345Z','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T20:50:07.12345Z','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-25T20:50:07.12345Z','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,2,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,2,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-26T20:50:07.12345Z','',0,5,2,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,3,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,3,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T20:50:07.12345Z','',0,5,3,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-02T20:50:07.12345Z','',0,5,4,0.15,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,4,0.13,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,5,19,100,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO',7);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,0,0,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO DESNATADO',8);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,0,0,0);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Luz Ref:04/21','12548',10045.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);

    create table tb_apportionment_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_apportionment (
       formulation_id int8 not null,
        apportionment_type_id int8 not null,
        primary key (formulation_id, apportionment_type_id)
    );

    create table tb_formulation_items (
       quantity float8,
        raw_material int4,
        round int4,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_produced_product_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_items (
       serie int4 not null,
        consumption_number int8,
        cost float8,
        date_cancel timestamp,
        quantity float8,
        raw_material int4,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        apportionment_type_id int8 not null,
        production_order_id int8 not null,
        primary key (apportionment_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        production_order_id int8 not null,
        produced_product_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_apportionment 
       add constraint FK98m819ug1rlrccqxwpsmlrqba 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_formulation_apportionment 
       add constraint FK1f5978k8v0do9hcosldtpd2d4 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FK3intmd72m1k6geg7m95fl0yrv 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FKgq0cr4hsjcb389gbapcmha3g 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FK1swv3nwn622ymx2shn3jibi9p 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FK5y3ghn02gfvrupsvjxy71rate 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_items 
       add constraint FKb3crswrhd2flsakbqjhe429br 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FKprj6b03csty7u0pdyvd1g4q7t 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKalg39mmkn8iq425su8uhwxb40 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKmi7bwsq6e5ssfxy0veu8iwxxc 
       foreign key (produced_product_status_id) 
       references tb_produced_product_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_OPERATOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_USER');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('LIBERADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('EM ANALISE');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('CONDENADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-01T20:50:07.12345Z','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T20:50:07.12345Z','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-25T20:50:07.12345Z','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,2,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,2,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-26T20:50:07.12345Z','',0,5,2,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,3,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,3,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T20:50:07.12345Z','',0,5,3,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-02T20:50:07.12345Z','',0,5,4,0.15,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,4,0.13,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,5,19,100,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO',7);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,0,0,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO DESNATADO',8);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,0,0,0);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Luz Ref:04/21','12548',10045.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);

    create table tb_apportionment_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_apportionment (
       formulation_id int8 not null,
        apportionment_type_id int8 not null,
        primary key (formulation_id, apportionment_type_id)
    );

    create table tb_formulation_items (
       quantity float8,
        raw_material int4,
        round int4,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_produced_product_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_items (
       serie int4 not null,
        consumption_number int8,
        cost float8,
        date_cancel timestamp,
        quantity float8,
        raw_material int4,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        apportionment_type_id int8 not null,
        production_order_id int8 not null,
        primary key (apportionment_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        production_order_id int8 not null,
        produced_product_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_apportionment 
       add constraint FK98m819ug1rlrccqxwpsmlrqba 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_formulation_apportionment 
       add constraint FK1f5978k8v0do9hcosldtpd2d4 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FK3intmd72m1k6geg7m95fl0yrv 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FKgq0cr4hsjcb389gbapcmha3g 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FK1swv3nwn622ymx2shn3jibi9p 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FK5y3ghn02gfvrupsvjxy71rate 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_items 
       add constraint FKb3crswrhd2flsakbqjhe429br 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FKprj6b03csty7u0pdyvd1g4q7t 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKalg39mmkn8iq425su8uhwxb40 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKmi7bwsq6e5ssfxy0veu8iwxxc 
       foreign key (produced_product_status_id) 
       references tb_produced_product_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_OPERATOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_USER');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('LIBERADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('EM ANALISE');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('CONDENADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-01T20:50:07.12345Z','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T20:50:07.12345Z','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-25T20:50:07.12345Z','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,2,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,2,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-26T20:50:07.12345Z','',0,5,2,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,3,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,3,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T20:50:07.12345Z','',0,5,3,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-02T20:50:07.12345Z','',0,5,4,0.15,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,4,0.13,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,5,19,100,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO',7);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,0,0,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO DESNATADO',8);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,0,0,0);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Luz Ref:04/21','12548',10045.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);

    create table tb_apportionment_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_apportionment (
       formulation_id int8 not null,
        apportionment_type_id int8 not null,
        primary key (formulation_id, apportionment_type_id)
    );

    create table tb_formulation_items (
       quantity float8,
        raw_material int4,
        round int4,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_produced_product_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_items (
       serie int4 not null,
        consumption_number int8,
        cost float8,
        date_cancel timestamp,
        quantity float8,
        raw_material int4,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        apportionment_type_id int8 not null,
        production_order_id int8 not null,
        primary key (apportionment_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        production_order_id int8 not null,
        produced_product_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_apportionment 
       add constraint FK98m819ug1rlrccqxwpsmlrqba 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_formulation_apportionment 
       add constraint FK1f5978k8v0do9hcosldtpd2d4 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FK3intmd72m1k6geg7m95fl0yrv 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FKgq0cr4hsjcb389gbapcmha3g 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FK1swv3nwn622ymx2shn3jibi9p 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FK5y3ghn02gfvrupsvjxy71rate 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_items 
       add constraint FKb3crswrhd2flsakbqjhe429br 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FKprj6b03csty7u0pdyvd1g4q7t 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKalg39mmkn8iq425su8uhwxb40 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKmi7bwsq6e5ssfxy0veu8iwxxc 
       foreign key (produced_product_status_id) 
       references tb_produced_product_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_OPERATOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_USER');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('LIBERADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('EM ANALISE');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('CONDENADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-01T20:50:07.12345Z','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T20:50:07.12345Z','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-25T20:50:07.12345Z','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,2,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,2,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-26T20:50:07.12345Z','',0,5,2,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,3,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,3,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T20:50:07.12345Z','',0,5,3,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-02T20:50:07.12345Z','',0,5,4,0.15,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,4,0.13,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,5,19,100,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO',7);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,0,0,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO DESNATADO',8);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,0,0,0);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Luz Ref:04/21','12548',10045.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);

    create table tb_apportionment_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_apportionment (
       formulation_id int8 not null,
        apportionment_type_id int8 not null,
        primary key (formulation_id, apportionment_type_id)
    );

    create table tb_formulation_items (
       quantity float8,
        raw_material int4,
        round int4,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_produced_product_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_items (
       serie int4 not null,
        consumption_number int8,
        cost float8,
        date_cancel timestamp,
        quantity float8,
        raw_material int4,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        apportionment_type_id int8 not null,
        production_order_id int8 not null,
        primary key (apportionment_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        production_order_id int8 not null,
        produced_product_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_apportionment 
       add constraint FK98m819ug1rlrccqxwpsmlrqba 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_formulation_apportionment 
       add constraint FK1f5978k8v0do9hcosldtpd2d4 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FK3intmd72m1k6geg7m95fl0yrv 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FKgq0cr4hsjcb389gbapcmha3g 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FK1swv3nwn622ymx2shn3jibi9p 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FK5y3ghn02gfvrupsvjxy71rate 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_items 
       add constraint FKb3crswrhd2flsakbqjhe429br 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FKprj6b03csty7u0pdyvd1g4q7t 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKalg39mmkn8iq425su8uhwxb40 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKmi7bwsq6e5ssfxy0veu8iwxxc 
       foreign key (produced_product_status_id) 
       references tb_produced_product_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_OPERATOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_USER');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('LIBERADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('EM ANALISE');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('CONDENADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-01T20:50:07.12345Z','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T20:50:07.12345Z','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-25T20:50:07.12345Z','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,2,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,2,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-26T20:50:07.12345Z','',0,5,2,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,3,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,3,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T20:50:07.12345Z','',0,5,3,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-02T20:50:07.12345Z','',0,5,4,0.15,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,4,0.13,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,5,19,100,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO',7);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,0,0,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO DESNATADO',8);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,0,0,0);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Luz Ref:04/21','12548',10045.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);

    create table tb_apportionment_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_apportionment (
       formulation_id int8 not null,
        apportionment_type_id int8 not null,
        primary key (formulation_id, apportionment_type_id)
    );

    create table tb_formulation_items (
       quantity float8,
        raw_material int4,
        round int4,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_produced_product_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_items (
       serie int4 not null,
        consumption_number int8,
        cost float8,
        date_cancel timestamp,
        quantity float8,
        raw_material int4,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        apportionment_type_id int8 not null,
        production_order_id int8 not null,
        primary key (apportionment_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        production_order_id int8 not null,
        produced_product_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_apportionment 
       add constraint FK98m819ug1rlrccqxwpsmlrqba 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_formulation_apportionment 
       add constraint FK1f5978k8v0do9hcosldtpd2d4 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FK3intmd72m1k6geg7m95fl0yrv 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FKgq0cr4hsjcb389gbapcmha3g 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FK1swv3nwn622ymx2shn3jibi9p 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FK5y3ghn02gfvrupsvjxy71rate 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_items 
       add constraint FKb3crswrhd2flsakbqjhe429br 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FKprj6b03csty7u0pdyvd1g4q7t 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKalg39mmkn8iq425su8uhwxb40 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKmi7bwsq6e5ssfxy0veu8iwxxc 
       foreign key (produced_product_status_id) 
       references tb_produced_product_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_OPERATOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_USER');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('LIBERADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('EM ANALISE');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('CONDENADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-01T20:50:07.12345Z','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T20:50:07.12345Z','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-25T20:50:07.12345Z','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,2,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,2,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-26T20:50:07.12345Z','',0,5,2,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,3,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,3,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T20:50:07.12345Z','',0,5,3,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-02T20:50:07.12345Z','',0,5,4,0.15,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,4,0.13,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,5,19,100,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO',7);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,0,0,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO DESNATADO',8);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,0,0,0);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Luz Ref:04/21','12548',10045.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);

    create table tb_apportionment_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_apportionment (
       formulation_id int8 not null,
        apportionment_type_id int8 not null,
        primary key (formulation_id, apportionment_type_id)
    );

    create table tb_formulation_items (
       quantity float8,
        raw_material int4,
        round int4,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_produced_product_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_items (
       serie int4 not null,
        consumption_number int8,
        cost float8,
        date_cancel timestamp,
        quantity float8,
        raw_material int4,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        apportionment_type_id int8 not null,
        production_order_id int8 not null,
        primary key (apportionment_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        production_order_id int8 not null,
        produced_product_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_apportionment 
       add constraint FK98m819ug1rlrccqxwpsmlrqba 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_formulation_apportionment 
       add constraint FK1f5978k8v0do9hcosldtpd2d4 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FK3intmd72m1k6geg7m95fl0yrv 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FKgq0cr4hsjcb389gbapcmha3g 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FK1swv3nwn622ymx2shn3jibi9p 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FK5y3ghn02gfvrupsvjxy71rate 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_items 
       add constraint FKb3crswrhd2flsakbqjhe429br 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FKprj6b03csty7u0pdyvd1g4q7t 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKalg39mmkn8iq425su8uhwxb40 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKmi7bwsq6e5ssfxy0veu8iwxxc 
       foreign key (produced_product_status_id) 
       references tb_produced_product_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_OPERATOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_USER');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('LIBERADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('EM ANALISE');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('CONDENADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-01T20:50:07.12345Z','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T20:50:07.12345Z','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-25T20:50:07.12345Z','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,2,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,2,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-26T20:50:07.12345Z','',0,5,2,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,3,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,3,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T20:50:07.12345Z','',0,5,3,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-02T20:50:07.12345Z','',0,5,4,0.15,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,4,0.13,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,5,19,100,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO',7);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,0,0,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO DESNATADO',8);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,0,0,0);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Luz Ref:04/21','12548',10045.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);

    create table tb_apportionment_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_apportionment (
       formulation_id int8 not null,
        apportionment_type_id int8 not null,
        primary key (formulation_id, apportionment_type_id)
    );

    create table tb_formulation_items (
       quantity float8,
        raw_material int4,
        round int4,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_produced_product_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_items (
       serie int4 not null,
        consumption_number int8,
        cost float8,
        date_cancel timestamp,
        quantity float8,
        raw_material int4,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        apportionment_type_id int8 not null,
        production_order_id int8 not null,
        primary key (apportionment_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        production_order_id int8 not null,
        produced_product_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_apportionment 
       add constraint FK98m819ug1rlrccqxwpsmlrqba 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_formulation_apportionment 
       add constraint FK1f5978k8v0do9hcosldtpd2d4 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FK3intmd72m1k6geg7m95fl0yrv 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FKgq0cr4hsjcb389gbapcmha3g 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FK1swv3nwn622ymx2shn3jibi9p 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FK5y3ghn02gfvrupsvjxy71rate 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_items 
       add constraint FKb3crswrhd2flsakbqjhe429br 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FKprj6b03csty7u0pdyvd1g4q7t 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKalg39mmkn8iq425su8uhwxb40 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKmi7bwsq6e5ssfxy0veu8iwxxc 
       foreign key (produced_product_status_id) 
       references tb_produced_product_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_OPERATOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_USER');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('LIBERADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('EM ANALISE');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('CONDENADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-01T20:50:07.12345Z','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T20:50:07.12345Z','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-25T20:50:07.12345Z','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,2,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,2,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-26T20:50:07.12345Z','',0,5,2,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,3,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,3,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T20:50:07.12345Z','',0,5,3,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-02T20:50:07.12345Z','',0,5,4,0.15,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,4,0.13,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,5,19,100,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO',7);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,0,0,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO DESNATADO',8);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,0,0,0);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Luz Ref:04/21','12548',10045.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);

    create table tb_apportionment_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_apportionment (
       formulation_id int8 not null,
        apportionment_type_id int8 not null,
        primary key (formulation_id, apportionment_type_id)
    );

    create table tb_formulation_items (
       quantity float8,
        raw_material int4,
        round int4,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_produced_product_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_items (
       serie int4 not null,
        consumption_number int8,
        cost float8,
        date_cancel timestamp,
        quantity float8,
        raw_material int4,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        apportionment_type_id int8 not null,
        production_order_id int8 not null,
        primary key (apportionment_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        production_order_id int8 not null,
        produced_product_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_apportionment 
       add constraint FK98m819ug1rlrccqxwpsmlrqba 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_formulation_apportionment 
       add constraint FK1f5978k8v0do9hcosldtpd2d4 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FK3intmd72m1k6geg7m95fl0yrv 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FKgq0cr4hsjcb389gbapcmha3g 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FK1swv3nwn622ymx2shn3jibi9p 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FK5y3ghn02gfvrupsvjxy71rate 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_items 
       add constraint FKb3crswrhd2flsakbqjhe429br 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FKprj6b03csty7u0pdyvd1g4q7t 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKalg39mmkn8iq425su8uhwxb40 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKmi7bwsq6e5ssfxy0veu8iwxxc 
       foreign key (produced_product_status_id) 
       references tb_produced_product_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_OPERATOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_USER');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('LIBERADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('EM ANALISE');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('CONDENADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-01T20:50:07.12345Z','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T20:50:07.12345Z','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-25T20:50:07.12345Z','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,2,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,2,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-26T20:50:07.12345Z','',0,5,2,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,3,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,3,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T20:50:07.12345Z','',0,5,3,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-02T20:50:07.12345Z','',0,5,4,0.15,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,4,0.13,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,5,19,100,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO',7);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,0,0,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO DESNATADO',8);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,0,0,0);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Luz Ref:04/21','12548',10045.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);

    create table tb_apportionment_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_apportionment (
       formulation_id int8 not null,
        apportionment_type_id int8 not null,
        primary key (formulation_id, apportionment_type_id)
    );

    create table tb_formulation_items (
       quantity float8,
        raw_material int4,
        round int4,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_produced_product_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_items (
       serie int4 not null,
        consumption_number int8,
        cost float8,
        date_cancel timestamp,
        quantity float8,
        raw_material int4,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        apportionment_type_id int8 not null,
        production_order_id int8 not null,
        primary key (apportionment_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        production_order_id int8 not null,
        produced_product_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_apportionment 
       add constraint FK98m819ug1rlrccqxwpsmlrqba 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_formulation_apportionment 
       add constraint FK1f5978k8v0do9hcosldtpd2d4 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FK3intmd72m1k6geg7m95fl0yrv 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FKgq0cr4hsjcb389gbapcmha3g 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FK1swv3nwn622ymx2shn3jibi9p 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FK5y3ghn02gfvrupsvjxy71rate 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_items 
       add constraint FKb3crswrhd2flsakbqjhe429br 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FKprj6b03csty7u0pdyvd1g4q7t 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKalg39mmkn8iq425su8uhwxb40 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKmi7bwsq6e5ssfxy0veu8iwxxc 
       foreign key (produced_product_status_id) 
       references tb_produced_product_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_OPERATOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_USER');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('LIBERADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('EM ANALISE');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('CONDENADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-01T20:50:07.12345Z','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T20:50:07.12345Z','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-25T20:50:07.12345Z','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,2,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,2,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-26T20:50:07.12345Z','',0,5,2,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,3,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,3,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T20:50:07.12345Z','',0,5,3,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-02T20:50:07.12345Z','',0,5,4,0.15,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,4,0.13,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,5,19,100,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO',7);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,0,0,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO DESNATADO',8);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,0,0,0);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Luz Ref:04/21','12548',10045.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);

    create table tb_apportionment_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_apportionment (
       formulation_id int8 not null,
        apportionment_type_id int8 not null,
        primary key (formulation_id, apportionment_type_id)
    );

    create table tb_formulation_items (
       quantity float8,
        raw_material int4,
        round int4,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_produced_product_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_items (
       serie int4 not null,
        consumption_number int8,
        cost float8,
        date_cancel timestamp,
        quantity float8,
        raw_material int4,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        apportionment_type_id int8 not null,
        production_order_id int8 not null,
        primary key (apportionment_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        production_order_id int8 not null,
        produced_product_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_apportionment 
       add constraint FK98m819ug1rlrccqxwpsmlrqba 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_formulation_apportionment 
       add constraint FK1f5978k8v0do9hcosldtpd2d4 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FK3intmd72m1k6geg7m95fl0yrv 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FKgq0cr4hsjcb389gbapcmha3g 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FK1swv3nwn622ymx2shn3jibi9p 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FK5y3ghn02gfvrupsvjxy71rate 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_items 
       add constraint FKb3crswrhd2flsakbqjhe429br 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FKprj6b03csty7u0pdyvd1g4q7t 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKalg39mmkn8iq425su8uhwxb40 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKmi7bwsq6e5ssfxy0veu8iwxxc 
       foreign key (produced_product_status_id) 
       references tb_produced_product_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_OPERATOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_USER');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('LIBERADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('EM ANALISE');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('CONDENADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-01T20:50:07.12345Z','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T20:50:07.12345Z','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-25T20:50:07.12345Z','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,2,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,2,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-26T20:50:07.12345Z','',0,5,2,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,3,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,3,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T20:50:07.12345Z','',0,5,3,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-02T20:50:07.12345Z','',0,5,4,0.15,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,4,0.13,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,5,19,100,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO',7);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,0,0,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO DESNATADO',8);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,0,0,0);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Luz Ref:04/21','12548',10045.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);

    create table tb_apportionment_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_apportionment (
       formulation_id int8 not null,
        apportionment_type_id int8 not null,
        primary key (formulation_id, apportionment_type_id)
    );

    create table tb_formulation_items (
       quantity float8,
        raw_material int4,
        round int4,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_produced_product_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_items (
       serie int4 not null,
        consumption_number int8,
        cost float8,
        date_cancel timestamp,
        quantity float8,
        raw_material int4,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        apportionment_type_id int8 not null,
        production_order_id int8 not null,
        primary key (apportionment_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        production_order_id int8 not null,
        produced_product_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_apportionment 
       add constraint FK98m819ug1rlrccqxwpsmlrqba 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_formulation_apportionment 
       add constraint FK1f5978k8v0do9hcosldtpd2d4 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FK3intmd72m1k6geg7m95fl0yrv 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FKgq0cr4hsjcb389gbapcmha3g 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FK1swv3nwn622ymx2shn3jibi9p 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FK5y3ghn02gfvrupsvjxy71rate 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_items 
       add constraint FKb3crswrhd2flsakbqjhe429br 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FKprj6b03csty7u0pdyvd1g4q7t 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKalg39mmkn8iq425su8uhwxb40 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKmi7bwsq6e5ssfxy0veu8iwxxc 
       foreign key (produced_product_status_id) 
       references tb_produced_product_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_OPERATOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_USER');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('LIBERADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('EM ANALISE');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('CONDENADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-01T20:50:07.12345Z','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T20:50:07.12345Z','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-25T20:50:07.12345Z','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,2,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,2,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-26T20:50:07.12345Z','',0,5,2,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,3,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,3,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T20:50:07.12345Z','',0,5,3,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-02T20:50:07.12345Z','',0,5,4,0.15,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,4,0.13,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,5,19,100,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO',7);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,0,0,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO DESNATADO',8);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,0,0,0);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Luz Ref:04/21','12548',10045.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);

    create table tb_apportionment_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_apportionment (
       formulation_id int8 not null,
        apportionment_type_id int8 not null,
        primary key (formulation_id, apportionment_type_id)
    );

    create table tb_formulation_items (
       quantity float8,
        raw_material int4,
        round int4,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_produced_product_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_items (
       serie int4 not null,
        consumption_number int8,
        cost float8,
        date_cancel timestamp,
        quantity float8,
        raw_material int4,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        apportionment_type_id int8 not null,
        production_order_id int8 not null,
        primary key (apportionment_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        production_order_id int8 not null,
        produced_product_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_apportionment 
       add constraint FK98m819ug1rlrccqxwpsmlrqba 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_formulation_apportionment 
       add constraint FK1f5978k8v0do9hcosldtpd2d4 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FK3intmd72m1k6geg7m95fl0yrv 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FKgq0cr4hsjcb389gbapcmha3g 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FK1swv3nwn622ymx2shn3jibi9p 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FK5y3ghn02gfvrupsvjxy71rate 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_items 
       add constraint FKb3crswrhd2flsakbqjhe429br 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FKprj6b03csty7u0pdyvd1g4q7t 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKalg39mmkn8iq425su8uhwxb40 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKmi7bwsq6e5ssfxy0veu8iwxxc 
       foreign key (produced_product_status_id) 
       references tb_produced_product_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_OPERATOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_USER');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('LIBERADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('EM ANALISE');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('CONDENADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-01T20:50:07.12345Z','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T20:50:07.12345Z','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-25T20:50:07.12345Z','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,2,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,2,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-26T20:50:07.12345Z','',0,5,2,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,3,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,3,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T20:50:07.12345Z','',0,5,3,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-02T20:50:07.12345Z','',0,5,4,0.15,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,4,0.13,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,5,19,100,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO',7);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,0,0,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO DESNATADO',8);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,0,0,0);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Luz Ref:04/21','12548',10045.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);

    create table tb_apportionment_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_apportionment (
       formulation_id int8 not null,
        apportionment_type_id int8 not null,
        primary key (formulation_id, apportionment_type_id)
    );

    create table tb_formulation_items (
       quantity float8,
        raw_material int4,
        round int4,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_produced_product_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_items (
       serie int4 not null,
        consumption_number int8,
        cost float8,
        date_cancel timestamp,
        quantity float8,
        raw_material int4,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        apportionment_type_id int8 not null,
        production_order_id int8 not null,
        primary key (apportionment_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        production_order_id int8 not null,
        produced_product_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_apportionment 
       add constraint FK98m819ug1rlrccqxwpsmlrqba 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_formulation_apportionment 
       add constraint FK1f5978k8v0do9hcosldtpd2d4 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FK3intmd72m1k6geg7m95fl0yrv 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FKgq0cr4hsjcb389gbapcmha3g 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FK1swv3nwn622ymx2shn3jibi9p 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FK5y3ghn02gfvrupsvjxy71rate 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_items 
       add constraint FKb3crswrhd2flsakbqjhe429br 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FKprj6b03csty7u0pdyvd1g4q7t 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKalg39mmkn8iq425su8uhwxb40 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKmi7bwsq6e5ssfxy0veu8iwxxc 
       foreign key (produced_product_status_id) 
       references tb_produced_product_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_OPERATOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_USER');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('LIBERADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('EM ANALISE');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('CONDENADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-01T20:50:07.12345Z','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T20:50:07.12345Z','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-25T20:50:07.12345Z','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,2,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,2,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-26T20:50:07.12345Z','',0,5,2,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,3,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,3,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T20:50:07.12345Z','',0,5,3,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-02T20:50:07.12345Z','',0,5,4,0.15,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,4,0.13,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,5,19,100,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO',7);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,0,0,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO DESNATADO',8);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,0,0,0);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Luz Ref:04/21','12548',10045.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);

    create table tb_apportionment_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_apportionment (
       formulation_id int8 not null,
        apportionment_type_id int8 not null,
        primary key (formulation_id, apportionment_type_id)
    );

    create table tb_formulation_items (
       quantity float8,
        raw_material int4,
        round int4,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_produced_product_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_items (
       serie int4 not null,
        consumption_number int8,
        cost float8,
        date_cancel timestamp,
        quantity float8,
        raw_material int4,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        apportionment_type_id int8 not null,
        production_order_id int8 not null,
        primary key (apportionment_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        production_order_id int8 not null,
        produced_product_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_apportionment 
       add constraint FK98m819ug1rlrccqxwpsmlrqba 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_formulation_apportionment 
       add constraint FK1f5978k8v0do9hcosldtpd2d4 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FK3intmd72m1k6geg7m95fl0yrv 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FKgq0cr4hsjcb389gbapcmha3g 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FK1swv3nwn622ymx2shn3jibi9p 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FK5y3ghn02gfvrupsvjxy71rate 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_items 
       add constraint FKb3crswrhd2flsakbqjhe429br 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FKprj6b03csty7u0pdyvd1g4q7t 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKalg39mmkn8iq425su8uhwxb40 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKmi7bwsq6e5ssfxy0veu8iwxxc 
       foreign key (produced_product_status_id) 
       references tb_produced_product_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_OPERATOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_USER');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('LIBERADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('EM ANALISE');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('CONDENADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-01T20:50:07.12345Z','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T20:50:07.12345Z','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-25T20:50:07.12345Z','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,2,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,2,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-26T20:50:07.12345Z','',0,5,2,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,3,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,3,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T20:50:07.12345Z','',0,5,3,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-02T20:50:07.12345Z','',0,5,4,0.15,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,4,0.13,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,5,19,100,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO',7);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,0,0,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO DESNATADO',8);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,0,0,0);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Luz Ref:04/21','12548',10045.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);

    create table tb_apportionment_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_apportionment (
       formulation_id int8 not null,
        apportionment_type_id int8 not null,
        primary key (formulation_id, apportionment_type_id)
    );

    create table tb_formulation_items (
       quantity float8,
        raw_material int4,
        round int4,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_produced_product_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_items (
       serie int4 not null,
        consumption_number int8,
        cost float8,
        date_cancel timestamp,
        quantity float8,
        raw_material int4,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        apportionment_type_id int8 not null,
        production_order_id int8 not null,
        primary key (apportionment_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        production_order_id int8 not null,
        produced_product_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_apportionment 
       add constraint FK98m819ug1rlrccqxwpsmlrqba 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_formulation_apportionment 
       add constraint FK1f5978k8v0do9hcosldtpd2d4 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FK3intmd72m1k6geg7m95fl0yrv 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FKgq0cr4hsjcb389gbapcmha3g 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FK1swv3nwn622ymx2shn3jibi9p 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FK5y3ghn02gfvrupsvjxy71rate 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_items 
       add constraint FKb3crswrhd2flsakbqjhe429br 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FKprj6b03csty7u0pdyvd1g4q7t 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKalg39mmkn8iq425su8uhwxb40 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKmi7bwsq6e5ssfxy0veu8iwxxc 
       foreign key (produced_product_status_id) 
       references tb_produced_product_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_OPERATOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_USER');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('LIBERADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('EM ANALISE');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('CONDENADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-01T20:50:07.12345Z','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T20:50:07.12345Z','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-25T20:50:07.12345Z','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,2,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,2,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-26T20:50:07.12345Z','',0,5,2,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,3,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,3,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T20:50:07.12345Z','',0,5,3,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-02T20:50:07.12345Z','',0,5,4,0.15,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,4,0.13,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,5,19,100,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO',7);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,0,0,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO DESNATADO',8);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,0,0,0);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Luz Ref:04/21','12548',10045.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);

    create table tb_apportionment_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_apportionment (
       formulation_id int8 not null,
        apportionment_type_id int8 not null,
        primary key (formulation_id, apportionment_type_id)
    );

    create table tb_formulation_items (
       quantity float8,
        raw_material int4,
        round int4,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_produced_product_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_items (
       serie int4 not null,
        consumption_number int8,
        cost float8,
        date_cancel timestamp,
        quantity float8,
        raw_material int4,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        apportionment_type_id int8 not null,
        production_order_id int8 not null,
        primary key (apportionment_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        production_order_id int8 not null,
        produced_product_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_apportionment 
       add constraint FK98m819ug1rlrccqxwpsmlrqba 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_formulation_apportionment 
       add constraint FK1f5978k8v0do9hcosldtpd2d4 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FK3intmd72m1k6geg7m95fl0yrv 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FKgq0cr4hsjcb389gbapcmha3g 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FK1swv3nwn622ymx2shn3jibi9p 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FK5y3ghn02gfvrupsvjxy71rate 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_items 
       add constraint FKb3crswrhd2flsakbqjhe429br 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FKprj6b03csty7u0pdyvd1g4q7t 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKalg39mmkn8iq425su8uhwxb40 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKmi7bwsq6e5ssfxy0veu8iwxxc 
       foreign key (produced_product_status_id) 
       references tb_produced_product_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_OPERATOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_USER');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('LIBERADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('EM ANALISE');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('CONDENADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-01T20:50:07.12345Z','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T20:50:07.12345Z','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-25T20:50:07.12345Z','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,2,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,2,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-26T20:50:07.12345Z','',0,5,2,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,3,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,3,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T20:50:07.12345Z','',0,5,3,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-02T20:50:07.12345Z','',0,5,4,0.15,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,4,0.13,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,5,19,100,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO',7);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,0,0,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO DESNATADO',8);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,0,0,0);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Luz Ref:04/21','12548',10045.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);

    create table tb_apportionment_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_apportionment (
       formulation_id int8 not null,
        apportionment_type_id int8 not null,
        primary key (formulation_id, apportionment_type_id)
    );

    create table tb_formulation_items (
       quantity float8,
        raw_material int4,
        round int4,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_produced_product_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_items (
       serie int4 not null,
        consumption_number int8,
        cost float8,
        date_cancel timestamp,
        quantity float8,
        raw_material int4,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        apportionment_type_id int8 not null,
        production_order_id int8 not null,
        primary key (apportionment_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        production_order_id int8 not null,
        produced_product_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_apportionment 
       add constraint FK98m819ug1rlrccqxwpsmlrqba 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_formulation_apportionment 
       add constraint FK1f5978k8v0do9hcosldtpd2d4 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FK3intmd72m1k6geg7m95fl0yrv 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FKgq0cr4hsjcb389gbapcmha3g 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FK1swv3nwn622ymx2shn3jibi9p 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FK5y3ghn02gfvrupsvjxy71rate 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_items 
       add constraint FKb3crswrhd2flsakbqjhe429br 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FKprj6b03csty7u0pdyvd1g4q7t 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKalg39mmkn8iq425su8uhwxb40 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKmi7bwsq6e5ssfxy0veu8iwxxc 
       foreign key (produced_product_status_id) 
       references tb_produced_product_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_OPERATOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_USER');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('LIBERADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('EM ANALISE');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('CONDENADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-01T20:50:07.12345Z','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T20:50:07.12345Z','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-25T20:50:07.12345Z','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,2,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,2,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-26T20:50:07.12345Z','',0,5,2,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,3,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,3,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T20:50:07.12345Z','',0,5,3,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-02T20:50:07.12345Z','',0,5,4,0.15,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,4,0.13,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,5,19,100,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO',7);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,0,0,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO DESNATADO',8);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,0,0,0);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Luz Ref:04/21','12548',10045.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);

    create table tb_apportionment_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_apportionment (
       formulation_id int8 not null,
        apportionment_type_id int8 not null,
        primary key (formulation_id, apportionment_type_id)
    );

    create table tb_formulation_items (
       quantity float8,
        raw_material int4,
        round int4,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_produced_product_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_items (
       serie int4 not null,
        consumption_number int8,
        cost float8,
        date_cancel timestamp,
        quantity float8,
        raw_material int4,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        apportionment_type_id int8 not null,
        production_order_id int8 not null,
        primary key (apportionment_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        production_order_id int8 not null,
        produced_product_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_apportionment 
       add constraint FK98m819ug1rlrccqxwpsmlrqba 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_formulation_apportionment 
       add constraint FK1f5978k8v0do9hcosldtpd2d4 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FK3intmd72m1k6geg7m95fl0yrv 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FKgq0cr4hsjcb389gbapcmha3g 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FK1swv3nwn622ymx2shn3jibi9p 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FK5y3ghn02gfvrupsvjxy71rate 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_items 
       add constraint FKb3crswrhd2flsakbqjhe429br 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FKprj6b03csty7u0pdyvd1g4q7t 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKalg39mmkn8iq425su8uhwxb40 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKmi7bwsq6e5ssfxy0veu8iwxxc 
       foreign key (produced_product_status_id) 
       references tb_produced_product_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_OPERATOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_USER');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('LIBERADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('EM ANALISE');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('CONDENADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-01T20:50:07.12345Z','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T20:50:07.12345Z','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-25T20:50:07.12345Z','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,2,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,2,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-26T20:50:07.12345Z','',0,5,2,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,3,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,3,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T20:50:07.12345Z','',0,5,3,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-02T20:50:07.12345Z','',0,5,4,0.15,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,4,0.13,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,5,19,100,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO',7);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,0,0,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO DESNATADO',8);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,0,0,0);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Luz Ref:04/21','12548',10045.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);

    create table tb_apportionment_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_apportionment (
       formulation_id int8 not null,
        apportionment_type_id int8 not null,
        primary key (formulation_id, apportionment_type_id)
    );

    create table tb_formulation_items (
       quantity float8,
        raw_material int4,
        round int4,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_produced_product_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_items (
       serie int4 not null,
        consumption_number int8,
        cost float8,
        date_cancel timestamp,
        quantity float8,
        raw_material int4,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        apportionment_type_id int8 not null,
        production_order_id int8 not null,
        primary key (apportionment_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        production_order_id int8 not null,
        produced_product_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_apportionment 
       add constraint FK98m819ug1rlrccqxwpsmlrqba 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_formulation_apportionment 
       add constraint FK1f5978k8v0do9hcosldtpd2d4 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FK3intmd72m1k6geg7m95fl0yrv 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FKgq0cr4hsjcb389gbapcmha3g 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FK1swv3nwn622ymx2shn3jibi9p 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FK5y3ghn02gfvrupsvjxy71rate 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_items 
       add constraint FKb3crswrhd2flsakbqjhe429br 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FKprj6b03csty7u0pdyvd1g4q7t 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKalg39mmkn8iq425su8uhwxb40 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKmi7bwsq6e5ssfxy0veu8iwxxc 
       foreign key (produced_product_status_id) 
       references tb_produced_product_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_OPERATOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_USER');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('LIBERADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('EM ANALISE');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('CONDENADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-01T20:50:07.12345Z','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T20:50:07.12345Z','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-25T20:50:07.12345Z','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,2,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,2,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-26T20:50:07.12345Z','',0,5,2,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,3,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,3,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T20:50:07.12345Z','',0,5,3,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-02T20:50:07.12345Z','',0,5,4,0.15,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,4,0.13,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,5,19,100,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO',7);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,0,0,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO DESNATADO',8);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,0,0,0);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Luz Ref:04/21','12548',10045.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);

    create table tb_apportionment_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_apportionment (
       formulation_id int8 not null,
        apportionment_type_id int8 not null,
        primary key (formulation_id, apportionment_type_id)
    );

    create table tb_formulation_items (
       quantity float8,
        raw_material int4,
        round int4,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_produced_product_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_items (
       serie int4 not null,
        consumption_number int8,
        cost float8,
        date_cancel timestamp,
        quantity float8,
        raw_material int4,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        apportionment_type_id int8 not null,
        production_order_id int8 not null,
        primary key (apportionment_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        production_order_id int8 not null,
        produced_product_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_apportionment 
       add constraint FK98m819ug1rlrccqxwpsmlrqba 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_formulation_apportionment 
       add constraint FK1f5978k8v0do9hcosldtpd2d4 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FK3intmd72m1k6geg7m95fl0yrv 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FKgq0cr4hsjcb389gbapcmha3g 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FK1swv3nwn622ymx2shn3jibi9p 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FK5y3ghn02gfvrupsvjxy71rate 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_items 
       add constraint FKb3crswrhd2flsakbqjhe429br 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FKprj6b03csty7u0pdyvd1g4q7t 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKalg39mmkn8iq425su8uhwxb40 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKmi7bwsq6e5ssfxy0veu8iwxxc 
       foreign key (produced_product_status_id) 
       references tb_produced_product_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_OPERATOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_USER');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('LIBERADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('EM ANALISE');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('CONDENADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-01T20:50:07.12345Z','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T20:50:07.12345Z','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-25T20:50:07.12345Z','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,2,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,2,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-26T20:50:07.12345Z','',0,5,2,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,3,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,3,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T20:50:07.12345Z','',0,5,3,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-02T20:50:07.12345Z','',0,5,4,0.15,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,4,0.13,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,5,19,100,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO',7);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,0,0,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO DESNATADO',8);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,0,0,0);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Luz Ref:04/21','12548',10045.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);

    create table tb_apportionment_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_apportionment (
       formulation_id int8 not null,
        apportionment_type_id int8 not null,
        primary key (formulation_id, apportionment_type_id)
    );

    create table tb_formulation_items (
       quantity float8,
        raw_material int4,
        round int4,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_produced_product_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_items (
       serie int4 not null,
        consumption_number int8,
        cost float8,
        date_cancel timestamp,
        quantity float8,
        raw_material int4,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        apportionment_type_id int8 not null,
        production_order_id int8 not null,
        primary key (apportionment_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        production_order_id int8 not null,
        produced_product_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_apportionment 
       add constraint FK98m819ug1rlrccqxwpsmlrqba 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_formulation_apportionment 
       add constraint FK1f5978k8v0do9hcosldtpd2d4 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FK3intmd72m1k6geg7m95fl0yrv 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FKgq0cr4hsjcb389gbapcmha3g 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FK1swv3nwn622ymx2shn3jibi9p 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FK5y3ghn02gfvrupsvjxy71rate 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_items 
       add constraint FKb3crswrhd2flsakbqjhe429br 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FKprj6b03csty7u0pdyvd1g4q7t 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKalg39mmkn8iq425su8uhwxb40 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKmi7bwsq6e5ssfxy0veu8iwxxc 
       foreign key (produced_product_status_id) 
       references tb_produced_product_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_OPERATOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_USER');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('LIBERADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('EM ANALISE');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('CONDENADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-01T20:50:07.12345Z','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T20:50:07.12345Z','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-25T20:50:07.12345Z','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,2,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,2,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-26T20:50:07.12345Z','',0,5,2,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,3,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,3,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T20:50:07.12345Z','',0,5,3,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-02T20:50:07.12345Z','',0,5,4,0.15,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,4,0.13,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,5,19,100,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO',7);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,0,0,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO DESNATADO',8);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,0,0,0);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Luz Ref:04/21','12548',10045.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);

    create table tb_apportionment_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_apportionment (
       formulation_id int8 not null,
        apportionment_type_id int8 not null,
        primary key (formulation_id, apportionment_type_id)
    );

    create table tb_formulation_items (
       quantity float8,
        raw_material int4,
        round int4,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_produced_product_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_items (
       serie int4 not null,
        consumption_number int8,
        cost float8,
        date_cancel timestamp,
        quantity float8,
        raw_material int4,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        apportionment_type_id int8 not null,
        production_order_id int8 not null,
        primary key (apportionment_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        production_order_id int8 not null,
        produced_product_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_apportionment 
       add constraint FK98m819ug1rlrccqxwpsmlrqba 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_formulation_apportionment 
       add constraint FK1f5978k8v0do9hcosldtpd2d4 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FK3intmd72m1k6geg7m95fl0yrv 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FKgq0cr4hsjcb389gbapcmha3g 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FK1swv3nwn622ymx2shn3jibi9p 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FK5y3ghn02gfvrupsvjxy71rate 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_items 
       add constraint FKb3crswrhd2flsakbqjhe429br 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FKprj6b03csty7u0pdyvd1g4q7t 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKalg39mmkn8iq425su8uhwxb40 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKmi7bwsq6e5ssfxy0veu8iwxxc 
       foreign key (produced_product_status_id) 
       references tb_produced_product_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_OPERATOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_USER');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('LIBERADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('EM ANALISE');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('CONDENADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-01T20:50:07.12345Z','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T20:50:07.12345Z','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-25T20:50:07.12345Z','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,2,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,2,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-26T20:50:07.12345Z','',0,5,2,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,3,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,3,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T20:50:07.12345Z','',0,5,3,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-02T20:50:07.12345Z','',0,5,4,0.15,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,4,0.13,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,5,19,100,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO',7);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,0,0,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO DESNATADO',8);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,0,0,0);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Luz Ref:04/21','12548',10045.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);

    create table tb_apportionment_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_apportionment (
       formulation_id int8 not null,
        apportionment_type_id int8 not null,
        primary key (formulation_id, apportionment_type_id)
    );

    create table tb_formulation_items (
       quantity float8,
        raw_material int4,
        round int4,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_produced_product_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_items (
       serie int4 not null,
        consumption_number int8,
        cost float8,
        date_cancel timestamp,
        quantity float8,
        raw_material int4,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        apportionment_type_id int8 not null,
        production_order_id int8 not null,
        primary key (apportionment_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        production_order_id int8 not null,
        produced_product_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_apportionment 
       add constraint FK98m819ug1rlrccqxwpsmlrqba 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_formulation_apportionment 
       add constraint FK1f5978k8v0do9hcosldtpd2d4 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FK3intmd72m1k6geg7m95fl0yrv 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FKgq0cr4hsjcb389gbapcmha3g 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FK1swv3nwn622ymx2shn3jibi9p 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FK5y3ghn02gfvrupsvjxy71rate 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_items 
       add constraint FKb3crswrhd2flsakbqjhe429br 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FKprj6b03csty7u0pdyvd1g4q7t 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKalg39mmkn8iq425su8uhwxb40 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKmi7bwsq6e5ssfxy0veu8iwxxc 
       foreign key (produced_product_status_id) 
       references tb_produced_product_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_OPERATOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_USER');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('LIBERADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('EM ANALISE');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('CONDENADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-01T20:50:07.12345Z','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T20:50:07.12345Z','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-25T20:50:07.12345Z','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,2,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,2,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-26T20:50:07.12345Z','',0,5,2,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,3,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,3,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T20:50:07.12345Z','',0,5,3,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-02T20:50:07.12345Z','',0,5,4,0.15,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,4,0.13,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,5,19,100,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO',7);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,0,0,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO DESNATADO',8);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,0,0,0);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Luz Ref:04/21','12548',10045.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);

    create table tb_apportionment_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_apportionment (
       formulation_id int8 not null,
        apportionment_type_id int8 not null,
        primary key (formulation_id, apportionment_type_id)
    );

    create table tb_formulation_items (
       quantity float8,
        raw_material int4,
        round int4,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_produced_product_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_items (
       serie int4 not null,
        consumption_number int8,
        cost float8,
        date_cancel timestamp,
        quantity float8,
        raw_material int4,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        apportionment_type_id int8 not null,
        production_order_id int8 not null,
        primary key (apportionment_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        production_order_id int8 not null,
        produced_product_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_apportionment 
       add constraint FK98m819ug1rlrccqxwpsmlrqba 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_formulation_apportionment 
       add constraint FK1f5978k8v0do9hcosldtpd2d4 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FK3intmd72m1k6geg7m95fl0yrv 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FKgq0cr4hsjcb389gbapcmha3g 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FK1swv3nwn622ymx2shn3jibi9p 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FK5y3ghn02gfvrupsvjxy71rate 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_items 
       add constraint FKb3crswrhd2flsakbqjhe429br 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FKprj6b03csty7u0pdyvd1g4q7t 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKalg39mmkn8iq425su8uhwxb40 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKmi7bwsq6e5ssfxy0veu8iwxxc 
       foreign key (produced_product_status_id) 
       references tb_produced_product_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_OPERATOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_USER');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('LIBERADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('EM ANALISE');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('CONDENADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-01T20:50:07.12345Z','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T20:50:07.12345Z','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-25T20:50:07.12345Z','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,2,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,2,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-26T20:50:07.12345Z','',0,5,2,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,3,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,3,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T20:50:07.12345Z','',0,5,3,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-02T20:50:07.12345Z','',0,5,4,0.15,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,4,0.13,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,5,19,100,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO',7);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,0,0,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO DESNATADO',8);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,0,0,0);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Luz Ref:04/21','12548',10045.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);

    create table tb_apportionment_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_apportionment (
       formulation_id int8 not null,
        apportionment_type_id int8 not null,
        primary key (formulation_id, apportionment_type_id)
    );

    create table tb_formulation_items (
       quantity float8,
        raw_material int4,
        round int4,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_produced_product_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_items (
       serie int4 not null,
        consumption_number int8,
        cost float8,
        date_cancel timestamp,
        quantity float8,
        raw_material int4,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        apportionment_type_id int8 not null,
        production_order_id int8 not null,
        primary key (apportionment_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        production_order_id int8 not null,
        produced_product_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_apportionment 
       add constraint FK98m819ug1rlrccqxwpsmlrqba 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_formulation_apportionment 
       add constraint FK1f5978k8v0do9hcosldtpd2d4 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FK3intmd72m1k6geg7m95fl0yrv 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FKgq0cr4hsjcb389gbapcmha3g 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FK1swv3nwn622ymx2shn3jibi9p 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FK5y3ghn02gfvrupsvjxy71rate 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_items 
       add constraint FKb3crswrhd2flsakbqjhe429br 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FKprj6b03csty7u0pdyvd1g4q7t 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKalg39mmkn8iq425su8uhwxb40 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKmi7bwsq6e5ssfxy0veu8iwxxc 
       foreign key (produced_product_status_id) 
       references tb_produced_product_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_OPERATOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_USER');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('LIBERADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('EM ANALISE');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('CONDENADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-01T20:50:07.12345Z','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T20:50:07.12345Z','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-25T20:50:07.12345Z','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,2,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,2,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-26T20:50:07.12345Z','',0,5,2,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,3,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,3,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T20:50:07.12345Z','',0,5,3,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-02T20:50:07.12345Z','',0,5,4,0.15,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,4,0.13,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,5,19,100,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO',7);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,0,0,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO DESNATADO',8);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,0,0,0);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Luz Ref:04/21','12548',10045.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);

    create table tb_apportionment_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_apportionment (
       formulation_id int8 not null,
        apportionment_type_id int8 not null,
        primary key (formulation_id, apportionment_type_id)
    );

    create table tb_formulation_items (
       quantity float8,
        raw_material int4,
        round int4,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_produced_product_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_items (
       serie int4 not null,
        consumption_number int8,
        cost float8,
        date_cancel timestamp,
        quantity float8,
        raw_material int4,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        apportionment_type_id int8 not null,
        production_order_id int8 not null,
        primary key (apportionment_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        production_order_id int8 not null,
        produced_product_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_apportionment 
       add constraint FK98m819ug1rlrccqxwpsmlrqba 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_formulation_apportionment 
       add constraint FK1f5978k8v0do9hcosldtpd2d4 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FK3intmd72m1k6geg7m95fl0yrv 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FKgq0cr4hsjcb389gbapcmha3g 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FK1swv3nwn622ymx2shn3jibi9p 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FK5y3ghn02gfvrupsvjxy71rate 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_items 
       add constraint FKb3crswrhd2flsakbqjhe429br 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FKprj6b03csty7u0pdyvd1g4q7t 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKalg39mmkn8iq425su8uhwxb40 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKmi7bwsq6e5ssfxy0veu8iwxxc 
       foreign key (produced_product_status_id) 
       references tb_produced_product_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_OPERATOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_USER');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('LIBERADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('EM ANALISE');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('CONDENADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-01T20:50:07.12345Z','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T20:50:07.12345Z','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-25T20:50:07.12345Z','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,2,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,2,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-26T20:50:07.12345Z','',0,5,2,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,3,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,3,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T20:50:07.12345Z','',0,5,3,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-02T20:50:07.12345Z','',0,5,4,0.15,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,4,0.13,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,5,19,100,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO',7);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,0,0,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO DESNATADO',8);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,0,0,0);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Luz Ref:04/21','12548',10045.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);

    create table tb_apportionment_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_apportionment (
       formulation_id int8 not null,
        apportionment_type_id int8 not null,
        primary key (formulation_id, apportionment_type_id)
    );

    create table tb_formulation_items (
       quantity float8,
        raw_material int4,
        round int4,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_produced_product_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_items (
       serie int4 not null,
        consumption_number int8,
        cost float8,
        date_cancel timestamp,
        quantity float8,
        raw_material int4,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        apportionment_type_id int8 not null,
        production_order_id int8 not null,
        primary key (apportionment_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        production_order_id int8 not null,
        produced_product_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_apportionment 
       add constraint FK98m819ug1rlrccqxwpsmlrqba 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_formulation_apportionment 
       add constraint FK1f5978k8v0do9hcosldtpd2d4 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FK3intmd72m1k6geg7m95fl0yrv 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FKgq0cr4hsjcb389gbapcmha3g 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FK1swv3nwn622ymx2shn3jibi9p 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FK5y3ghn02gfvrupsvjxy71rate 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_items 
       add constraint FKb3crswrhd2flsakbqjhe429br 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FKprj6b03csty7u0pdyvd1g4q7t 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKalg39mmkn8iq425su8uhwxb40 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKmi7bwsq6e5ssfxy0veu8iwxxc 
       foreign key (produced_product_status_id) 
       references tb_produced_product_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_OPERATOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_USER');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('LIBERADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('EM ANALISE');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('CONDENADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-01T20:50:07.12345Z','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T20:50:07.12345Z','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-25T20:50:07.12345Z','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,2,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,2,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-26T20:50:07.12345Z','',0,5,2,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,3,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,3,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T20:50:07.12345Z','',0,5,3,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-02T20:50:07.12345Z','',0,5,4,0.15,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,4,0.13,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,5,19,100,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO',7);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,0,0,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO DESNATADO',8);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,0,0,0);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Luz Ref:04/21','12548',10045.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);

    create table tb_apportionment_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_apportionment (
       formulation_id int8 not null,
        apportionment_type_id int8 not null,
        primary key (formulation_id, apportionment_type_id)
    );

    create table tb_formulation_items (
       quantity float8,
        raw_material int4,
        round int4,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_produced_product_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_items (
       serie int4 not null,
        consumption_number int8,
        cost float8,
        date_cancel timestamp,
        quantity float8,
        raw_material int4,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        apportionment_type_id int8 not null,
        production_order_id int8 not null,
        primary key (apportionment_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        production_order_id int8 not null,
        produced_product_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_apportionment 
       add constraint FK98m819ug1rlrccqxwpsmlrqba 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_formulation_apportionment 
       add constraint FK1f5978k8v0do9hcosldtpd2d4 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FK3intmd72m1k6geg7m95fl0yrv 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FKgq0cr4hsjcb389gbapcmha3g 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FK1swv3nwn622ymx2shn3jibi9p 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FK5y3ghn02gfvrupsvjxy71rate 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_items 
       add constraint FKb3crswrhd2flsakbqjhe429br 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FKprj6b03csty7u0pdyvd1g4q7t 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKalg39mmkn8iq425su8uhwxb40 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKmi7bwsq6e5ssfxy0veu8iwxxc 
       foreign key (produced_product_status_id) 
       references tb_produced_product_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_OPERATOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_USER');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('LIBERADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('EM ANALISE');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('CONDENADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-01T20:50:07.12345Z','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T20:50:07.12345Z','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-25T20:50:07.12345Z','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,2,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,2,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-26T20:50:07.12345Z','',0,5,2,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,3,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,3,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T20:50:07.12345Z','',0,5,3,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-02T20:50:07.12345Z','',0,5,4,0.15,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,4,0.13,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,5,19,100,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO',7);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,0,0,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO DESNATADO',8);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,0,0,0);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Luz Ref:04/21','12548',10045.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);

    create table tb_apportionment_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_apportionment (
       formulation_id int8 not null,
        apportionment_type_id int8 not null,
        primary key (formulation_id, apportionment_type_id)
    );

    create table tb_formulation_items (
       quantity float8,
        raw_material int4,
        round int4,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_produced_product_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_items (
       serie int4 not null,
        consumption_number int8,
        cost float8,
        date_cancel timestamp,
        quantity float8,
        raw_material int4,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        apportionment_type_id int8 not null,
        production_order_id int8 not null,
        primary key (apportionment_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        production_order_id int8 not null,
        produced_product_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_apportionment 
       add constraint FK98m819ug1rlrccqxwpsmlrqba 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_formulation_apportionment 
       add constraint FK1f5978k8v0do9hcosldtpd2d4 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FK3intmd72m1k6geg7m95fl0yrv 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FKgq0cr4hsjcb389gbapcmha3g 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FK1swv3nwn622ymx2shn3jibi9p 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FK5y3ghn02gfvrupsvjxy71rate 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_items 
       add constraint FKb3crswrhd2flsakbqjhe429br 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FKprj6b03csty7u0pdyvd1g4q7t 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKalg39mmkn8iq425su8uhwxb40 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKmi7bwsq6e5ssfxy0veu8iwxxc 
       foreign key (produced_product_status_id) 
       references tb_produced_product_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_OPERATOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_USER');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('LIBERADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('EM ANALISE');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('CONDENADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-01T20:50:07.12345Z','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T20:50:07.12345Z','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-25T20:50:07.12345Z','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,2,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,2,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-26T20:50:07.12345Z','',0,5,2,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,3,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,3,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T20:50:07.12345Z','',0,5,3,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-02T20:50:07.12345Z','',0,5,4,0.15,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,4,0.13,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,5,19,100,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO',7);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,0,0,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO DESNATADO',8);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,0,0,0);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Luz Ref:04/21','12548',10045.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);

    create table tb_apportionment_type (
       id int8 generated by default as identity,
        name varchar(255),
        type int4,
        primary key (id)
    );

    create table tb_employee (
       id int8 generated by default as identity,
        name varchar(255),
        sector_id int8,
        primary key (id)
    );

    create table tb_formulation (
       id int8 generated by default as identity,
        coefficient float8,
        description varchar(255),
        product_id int8,
        primary key (id)
    );

    create table tb_formulation_apportionment (
       formulation_id int8 not null,
        apportionment_type_id int8 not null,
        primary key (formulation_id, apportionment_type_id)
    );

    create table tb_formulation_items (
       quantity float8,
        raw_material int4,
        round int4,
        type int4,
        formulation_id int8 not null,
        product_id int8 not null,
        primary key (formulation_id, product_id)
    );

    create table tb_formulation_sector (
       formulation_id int8 not null,
        sector_id int8 not null,
        primary key (formulation_id, sector_id)
    );

    create table tb_group (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_cost_type (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_labor_payment (
       id int8 not null,
        employee_id int8,
        labor_cost_type int8,
        primary key (id)
    );

    create table tb_occurrence (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_operational_payment (
       id int8 not null,
        apportionment_type_id int8,
        primary key (id)
    );

    create table tb_payment (
       id int8 generated by default as identity,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        document_number varchar(255),
        value float8,
        primary key (id)
    );

    create table tb_produced_product_status (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_product (
       id int8 generated by default as identity,
        description varchar(255),
        gross_weight float8,
        name varchar(255),
        net_weight float8,
        packaging varchar(255),
        validity_days int4,
        group_id int8,
        unity_id varchar(255),
        primary key (id)
    );

    create table tb_production_order (
       id int8 generated by default as identity,
        emission TIMESTAMP WITHOUT TIME ZONE,
        end_date TIMESTAMP WITHOUT TIME ZONE,
        expected_amount float8,
        observation varchar(255),
        start_date TIMESTAMP WITHOUT TIME ZONE,
        status int4,
        formulation_id int8,
        primary key (id)
    );

    create table tb_production_order_cost_labor (
       value float8,
        sector_id int8 not null,
        production_order_id int8 not null,
        primary key (production_order_id, sector_id)
    );

    create table tb_production_order_items (
       serie int4 not null,
        consumption_number int8,
        cost float8,
        date_cancel timestamp,
        quantity float8,
        raw_material int4,
        type int4,
        product_id int8 not null,
        production_order_id int8 not null,
        occurrence_id int8,
        primary key (product_id, production_order_id, serie)
    );

    create table tb_production_order_operational_cost (
       value float8,
        apportionment_type_id int8 not null,
        production_order_id int8 not null,
        primary key (apportionment_type_id, production_order_id)
    );

    create table tb_production_order_produced (
       pallet int4 not null,
        lote varchar(255),
        manufacturing_date TIMESTAMP WITHOUT TIME ZONE,
        quantity float8,
        production_order_id int8 not null,
        produced_product_status_id int8,
        product_id int8,
        primary key (pallet, production_order_id)
    );

    create table tb_role (
       id int8 generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_sector (
       id int8 generated by default as identity,
        name varchar(255),
        primary key (id)
    );

    create table tb_stock_movement (
       id int8 generated by default as identity,
        cost float8,
        date TIMESTAMP WITHOUT TIME ZONE,
        description varchar(255),
        entry float8,
        id_orign_movement int8,
        out float8,
        type int4,
        product_id int8,
        primary key (id)
    );

    create table tb_unity (
       id varchar(255) not null,
        description varchar(255),
        primary key (id)
    );

    create table tb_user (
       id int8 generated by default as identity,
        email varchar(255),
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_role (
       user_id int8 not null,
        role_id int8 not null,
        primary key (user_id, role_id)
    );

    alter table if exists tb_user 
       add constraint UK_4vih17mube9j7cqyjlfbcrk4m unique (email);

    alter table if exists tb_employee 
       add constraint FK9qrnqeivwequfs9aoad226r9g 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation 
       add constraint FK5qq4jfo18bh4v78afet1hgsmg 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_apportionment 
       add constraint FK98m819ug1rlrccqxwpsmlrqba 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_formulation_apportionment 
       add constraint FK1f5978k8v0do9hcosldtpd2d4 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FK3intmd72m1k6geg7m95fl0yrv 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_formulation_items 
       add constraint FKgq0cr4hsjcb389gbapcmha3g 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_formulation_sector 
       add constraint FKhjebunvwymlrt5rhx7fip4wef 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_formulation_sector 
       add constraint FKfljinrf8dd4whkasau1vl4v0k 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_labor_payment 
       add constraint FKaboe652rklfljwcjwev73xeay 
       foreign key (employee_id) 
       references tb_employee;

    alter table if exists tb_labor_payment 
       add constraint FKd6lrt87hpndc4br6p01sbsp9y 
       foreign key (labor_cost_type) 
       references tb_labor_cost_type;

    alter table if exists tb_labor_payment 
       add constraint FKndrxdq4ospwdvhw8uxain78hx 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_operational_payment 
       add constraint FK1swv3nwn622ymx2shn3jibi9p 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_operational_payment 
       add constraint FKbbi51qng8m2xuj3ro3gatfupi 
       foreign key (id) 
       references tb_payment;

    alter table if exists tb_product 
       add constraint FKq56eyl7v440kcgfna6j9d24jr 
       foreign key (group_id) 
       references tb_group;

    alter table if exists tb_product 
       add constraint FKrcg0qwq5yq9um1x84h8u957m 
       foreign key (unity_id) 
       references tb_unity;

    alter table if exists tb_production_order 
       add constraint FK3aiid3jhx9ndycn7vcp4j6p8 
       foreign key (formulation_id) 
       references tb_formulation;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKiaop6q4vo1l1ltss7nhn4murm 
       foreign key (sector_id) 
       references tb_sector;

    alter table if exists tb_production_order_cost_labor 
       add constraint FKkvg8wqlgcem1qjf4v5rmgxk0v 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FK5y3ghn02gfvrupsvjxy71rate 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_production_order_items 
       add constraint FKb3crswrhd2flsakbqjhe429br 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_items 
       add constraint FKprj6b03csty7u0pdyvd1g4q7t 
       foreign key (occurrence_id) 
       references tb_occurrence;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKalg39mmkn8iq425su8uhwxb40 
       foreign key (apportionment_type_id) 
       references tb_apportionment_type;

    alter table if exists tb_production_order_operational_cost 
       add constraint FKma1ek9h1sq3myclobmf77v6fm 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FK1emge6od6udah3rk88og1kh9f 
       foreign key (production_order_id) 
       references tb_production_order;

    alter table if exists tb_production_order_produced 
       add constraint FKmi7bwsq6e5ssfxy0veu8iwxxc 
       foreign key (produced_product_status_id) 
       references tb_produced_product_status;

    alter table if exists tb_production_order_produced 
       add constraint FKkm378v42x59d8geejyae19awq 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_stock_movement 
       add constraint FKehbulfckle5epmywrjd93n9ow 
       foreign key (product_id) 
       references tb_product;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name,email,password) VALUES ('Diego Wandrofski Borges','diego@gmail.com', '$2a$10$eACCYoNOHEqXve8aIWT8Nu3PkMXWBaOxJ9aORUYzfMQCbVBIhZ8tG');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_OPERATOR');
INSERT INTO tb_role (authority) VALUES ('ROLE_USER');
INSERT INTO tb_user_role (user_id, role_id) VALUES (1, 1);
INSERT INTO tb_unity(id,description)VALUES('UN','UNIDADE');
INSERT INTO tb_unity(id,description)VALUES('KG','KILO');
INSERT INTO tb_unity(id,description)VALUES('L','LITRO');
INSERT INTO tb_unity(id,description)VALUES('CX','CAIXA');
INSERT INTO tb_group(name)VALUES('INSUMO');
INSERT INTO tb_group(name)VALUES('MATERIA PRIMA');
INSERT INTO tb_group(name)VALUES('EMBALAGEM');
INSERT INTO tb_group(name)VALUES('USO E CONSUMO');
INSERT INTO tb_group(name)VALUES('PRODUTO ACABADO');
INSERT INTO tb_SECTOR(NAME) VALUES('PRODUCAO');
INSERT INTO tb_SECTOR(NAME) VALUES('FRACIONAMENTO');
INSERT INTO tb_SECTOR(NAME) VALUES('CALDEIRA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('NORMAL');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('ALTERACAO NA QUANTIDADE PRODUZIDA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('PERDA NA PRODUÇÃO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('EMBALAGEM DANIFICADA');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('INSUMO DANIFICADO');
INSERT INTO tb_OCCURRENCE(NAME) VALUES('MATERIA PRIMA FORA DO PADRÃO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('SALARIO');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('HORA EXTRA');
INSERT INTO tb_LABOR_COST_TYPE (NAME) VALUES('AUXILIO TRANSPORTE');
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('ENERGIA ELETRICA',1);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('LIMPEZA',0);
INSERT INTO tb_APPORTIONMENT_TYPE (NAME,TYPE) VALUES('AGUA',0);
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('LIBERADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('EM ANALISE');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('CONDENADO');
INSERT INTO TB_PRODUCED_PRODUCT_STATUS (NAME) VALUES('REJEITADO');
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura',1.032,'LEITE IN NATURA',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite in natura desnatado',1.032,'LEITE IN NATURA DESNATADO',1.032,'',2,'L',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó da marca Moinho',0.700,'SACO MOINHO 25 KG',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Saco utilizado para envase de leite em pó',0.700,'SACO 25 KG PARDO',0.700,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Abraçadeira utilizada para vedar o saco interno de leite',0.1,'ABRACADEIRA DE NYLON',0.1,'',3,'UN',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Linha de poliester utilizada para para costurar a embalagem externa',1,'LINHA DE POLIESTER',1,'',3,'KG',0);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral',1,'LEITE EM PO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_product(description, gross_weight,name,net_weight,packaging,group_id,unity_id,validity_days)VALUES('Leite em pó integral desnatado',1,'LEITE EM PO DESNATADO',1,'SC COM 25KG',5,'KG',365);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-01T20:50:07.12345Z','',0,5,1,1.20,50000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,1,1.25,10000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T20:50:07.12345Z','',0,5,1,1.05,100500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-25T20:50:07.12345Z','',0,5,1,1.35,5000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,2,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,2,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,2,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-26T20:50:07.12345Z','',0,5,2,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,3,0.90,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-10T20:50:07.12345Z','',0,5,3,0.91,500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-16T20:50:07.12345Z','',0,5,3,0.93,1500,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T20:50:07.12345Z','',0,5,3,0.95,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-02T20:50:07.12345Z','',0,5,4,0.15,1000,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,4,0.13,100,0);
INSERT INTO tb_STOCK_MOVEMENT(date,description,id_orign_movement,type,product_id,cost,entry,out)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-05T20:50:07.12345Z','',0,5,5,19,100,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO',7);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,1,8400,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(1,6,0.36,0,0,0);
INSERT INTO tb_FORMULATION (COEFFICIENT,DESCRIPTION,PRODUCT_ID) VALUES(1000,'LEITE EM PO DESNATADO',8);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,2,9285,0,0,1);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,3,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,4,40,1,1,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,5,40,1,0,0);
INSERT INTO tb_FORMULATION_ITEMS(FORMULATION_ID,PRODUCT_ID,QUANTITY,ROUND,TYPE,RAW_MATERIAL)VALUES(2,6,0.36,0,0,0);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JOAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('SEBASTIAO',1);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('MARIA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('ANA',2);
INSERT INTO tb_EMPLOYEE(NAME,SECTOR_ID) VALUES('JONAS',3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,2);
INSERT INTO tb_FORMULATION_APPORTIONMENT(FORMULATION_ID,APPORTIONMENT_TYPE_ID) VALUES(2,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(1,3);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,1);
INSERT INTO tb_FORMULATION_SECTOR(FORMULATION_ID,SECTOR_ID) VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Luz Ref:04/21','12548',10045.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Conta de Agua:04/21','000254',1456.78);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(2,3);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',254.15);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(3,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-15T00:00:00Z','Ref. consumo de produto de limpeza','xxxx',157.45);
INSERT INTO TB_OPERATIONAL_PAYMENT(ID,APPORTIONMENT_TYPE_ID)VALUES(4,2);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1458);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(5,1,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',2542);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(6,5,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Salario Abril/21','xxxx',1765.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(7,2,1);
INSERT INTO TB_PAYMENT(DATE,DESCRIPTION,DOCUMENT_NUMBER,VALUE)VALUES(TIMESTAMP WITH TIME ZONE '2021-04-30T00:00:00Z','Ref: Vale Transporte Abril/21','xxxx',154.5);
INSERT INTO TB_LABOR_PAYMENT(ID,EMPLOYEE_ID,LABOR_COST_TYPE)VALUES(8,2,3);
